{"version":3,"file":"3508.js","mappings":"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","sources":["webpack://@web3os-core/kernel/./node_modules/.pnpm/arg@5.0.2/node_modules/arg/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/base-x@3.0.9/node_modules/base-x/src/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bech32@2.0.0/node_modules/bech32/dist/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/combiner/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/global/globalXpub.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/global/unsignedTx.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/input/finalScriptSig.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/input/finalScriptWitness.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/input/nonWitnessUtxo.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/input/partialSig.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/input/porCommitment.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/input/sighashType.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/input/tapKeySig.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/input/tapLeafScript.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/input/tapMerkleRoot.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/input/tapScriptSig.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/input/witnessUtxo.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/output/tapTree.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/shared/bip32Derivation.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/shared/checkPubkey.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/shared/redeemScript.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/shared/tapBip32Derivation.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/shared/tapInternalKey.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/shared/witnessScript.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/tools.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/converter/varint.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/parser/fromBuffer.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/parser/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/parser/toBuffer.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/psbt.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/typeFields.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bip174@2.1.0/node_modules/bip174/src/lib/utils.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/address.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/bip66.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/block.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/bufferutils.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/crypto.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/merkle.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/networks.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/ops.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/payments/embed.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/payments/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/payments/lazy.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/payments/p2ms.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/payments/p2pk.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/payments/p2pkh.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/payments/p2sh.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/payments/p2wpkh.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/payments/p2wsh.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/psbt.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/push_data.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/script.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/script_number.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/script_signature.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/transaction.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bitcoinjs-lib@6.0.1/node_modules/bitcoinjs-lib/src/types.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bs58@4.0.1/node_modules/bs58/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bs58check@2.1.2/node_modules/bs58check/base.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/bs58check@2.1.2/node_modules/bs58check/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits_browser.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/shell-quote@1.7.3/node_modules/shell-quote/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/typeforce@1.18.0/node_modules/typeforce/errors.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/typeforce@1.18.0/node_modules/typeforce/extra.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/typeforce@1.18.0/node_modules/typeforce/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/typeforce@1.18.0/node_modules/typeforce/native.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/varuint-bitcoin@1.1.2/node_modules/varuint-bitcoin/index.js"],"sourcesContent":["const flagSymbol = Symbol('arg flag');\n\nclass ArgError extends Error {\n\tconstructor(msg, code) {\n\t\tsuper(msg);\n\t\tthis.name = 'ArgError';\n\t\tthis.code = code;\n\n\t\tObject.setPrototypeOf(this, ArgError.prototype);\n\t}\n}\n\nfunction arg(\n\topts,\n\t{\n\t\targv = process.argv.slice(2),\n\t\tpermissive = false,\n\t\tstopAtPositional = false\n\t} = {}\n) {\n\tif (!opts) {\n\t\tthrow new ArgError(\n\t\t\t'argument specification object is required',\n\t\t\t'ARG_CONFIG_NO_SPEC'\n\t\t);\n\t}\n\n\tconst result = { _: [] };\n\n\tconst aliases = {};\n\tconst handlers = {};\n\n\tfor (const key of Object.keys(opts)) {\n\t\tif (!key) {\n\t\t\tthrow new ArgError(\n\t\t\t\t'argument key cannot be an empty string',\n\t\t\t\t'ARG_CONFIG_EMPTY_KEY'\n\t\t\t);\n\t\t}\n\n\t\tif (key[0] !== '-') {\n\t\t\tthrow new ArgError(\n\t\t\t\t`argument key must start with '-' but found: '${key}'`,\n\t\t\t\t'ARG_CONFIG_NONOPT_KEY'\n\t\t\t);\n\t\t}\n\n\t\tif (key.length === 1) {\n\t\t\tthrow new ArgError(\n\t\t\t\t`argument key must have a name; singular '-' keys are not allowed: ${key}`,\n\t\t\t\t'ARG_CONFIG_NONAME_KEY'\n\t\t\t);\n\t\t}\n\n\t\tif (typeof opts[key] === 'string') {\n\t\t\taliases[key] = opts[key];\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet type = opts[key];\n\t\tlet isFlag = false;\n\n\t\tif (\n\t\t\tArray.isArray(type) &&\n\t\t\ttype.length === 1 &&\n\t\t\ttypeof type[0] === 'function'\n\t\t) {\n\t\t\tconst [fn] = type;\n\t\t\ttype = (value, name, prev = []) => {\n\t\t\t\tprev.push(fn(value, name, prev[prev.length - 1]));\n\t\t\t\treturn prev;\n\t\t\t};\n\t\t\tisFlag = fn === Boolean || fn[flagSymbol] === true;\n\t\t} else if (typeof type === 'function') {\n\t\t\tisFlag = type === Boolean || type[flagSymbol] === true;\n\t\t} else {\n\t\t\tthrow new ArgError(\n\t\t\t\t`type missing or not a function or valid array type: ${key}`,\n\t\t\t\t'ARG_CONFIG_VAD_TYPE'\n\t\t\t);\n\t\t}\n\n\t\tif (key[1] !== '-' && key.length > 2) {\n\t\t\tthrow new ArgError(\n\t\t\t\t`short argument keys (with a single hyphen) must have only one character: ${key}`,\n\t\t\t\t'ARG_CONFIG_SHORTOPT_TOOLONG'\n\t\t\t);\n\t\t}\n\n\t\thandlers[key] = [type, isFlag];\n\t}\n\n\tfor (let i = 0, len = argv.length; i < len; i++) {\n\t\tconst wholeArg = argv[i];\n\n\t\tif (stopAtPositional && result._.length > 0) {\n\t\t\tresult._ = result._.concat(argv.slice(i));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (wholeArg === '--') {\n\t\t\tresult._ = result._.concat(argv.slice(i + 1));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (wholeArg.length > 1 && wholeArg[0] === '-') {\n\t\t\t/* eslint-disable operator-linebreak */\n\t\t\tconst separatedArguments =\n\t\t\t\twholeArg[1] === '-' || wholeArg.length === 2\n\t\t\t\t\t? [wholeArg]\n\t\t\t\t\t: wholeArg\n\t\t\t\t\t\t\t.slice(1)\n\t\t\t\t\t\t\t.split('')\n\t\t\t\t\t\t\t.map((a) => `-${a}`);\n\t\t\t/* eslint-enable operator-linebreak */\n\n\t\t\tfor (let j = 0; j < separatedArguments.length; j++) {\n\t\t\t\tconst arg = separatedArguments[j];\n\t\t\t\tconst [originalArgName, argStr] =\n\t\t\t\t\targ[1] === '-' ? arg.split(/=(.*)/, 2) : [arg, undefined];\n\n\t\t\t\tlet argName = originalArgName;\n\t\t\t\twhile (argName in aliases) {\n\t\t\t\t\targName = aliases[argName];\n\t\t\t\t}\n\n\t\t\t\tif (!(argName in handlers)) {\n\t\t\t\t\tif (permissive) {\n\t\t\t\t\t\tresult._.push(arg);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new ArgError(\n\t\t\t\t\t\t\t`unknown or unexpected option: ${originalArgName}`,\n\t\t\t\t\t\t\t'ARG_UNKNOWN_OPTION'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst [type, isFlag] = handlers[argName];\n\n\t\t\t\tif (!isFlag && j + 1 < separatedArguments.length) {\n\t\t\t\t\tthrow new ArgError(\n\t\t\t\t\t\t`option requires argument (but was followed by another short argument): ${originalArgName}`,\n\t\t\t\t\t\t'ARG_MISSING_REQUIRED_SHORTARG'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (isFlag) {\n\t\t\t\t\tresult[argName] = type(true, argName, result[argName]);\n\t\t\t\t} else if (argStr === undefined) {\n\t\t\t\t\tif (\n\t\t\t\t\t\targv.length < i + 2 ||\n\t\t\t\t\t\t(argv[i + 1].length > 1 &&\n\t\t\t\t\t\t\targv[i + 1][0] === '-' &&\n\t\t\t\t\t\t\t!(\n\t\t\t\t\t\t\t\targv[i + 1].match(/^-?\\d*(\\.(?=\\d))?\\d*$/) &&\n\t\t\t\t\t\t\t\t(type === Number ||\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\t\t\t\t(typeof BigInt !== 'undefined' && type === BigInt))\n\t\t\t\t\t\t\t))\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst extended =\n\t\t\t\t\t\t\toriginalArgName === argName ? '' : ` (alias for ${argName})`;\n\t\t\t\t\t\tthrow new ArgError(\n\t\t\t\t\t\t\t`option requires argument: ${originalArgName}${extended}`,\n\t\t\t\t\t\t\t'ARG_MISSING_REQUIRED_LONGARG'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult[argName] = type(argv[i + 1], argName, result[argName]);\n\t\t\t\t\t++i;\n\t\t\t\t} else {\n\t\t\t\t\tresult[argName] = type(argStr, argName, result[argName]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tresult._.push(wholeArg);\n\t\t}\n\t}\n\n\treturn result;\n}\n\narg.flag = (fn) => {\n\tfn[flagSymbol] = true;\n\treturn fn;\n};\n\n// Utility types\narg.COUNT = arg.flag((v, name, existingCount) => (existingCount || 0) + 1);\n\n// Expose error class\narg.ArgError = ArgError;\n\nmodule.exports = arg;\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bech32m = exports.bech32 = void 0;\nconst ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst ALPHABET_MAP = {};\nfor (let z = 0; z < ALPHABET.length; z++) {\n    const x = ALPHABET.charAt(z);\n    ALPHABET_MAP[x] = z;\n}\nfunction polymodStep(pre) {\n    const b = pre >> 25;\n    return (((pre & 0x1ffffff) << 5) ^\n        (-((b >> 0) & 1) & 0x3b6a57b2) ^\n        (-((b >> 1) & 1) & 0x26508e6d) ^\n        (-((b >> 2) & 1) & 0x1ea119fa) ^\n        (-((b >> 3) & 1) & 0x3d4233dd) ^\n        (-((b >> 4) & 1) & 0x2a1462b3));\n}\nfunction prefixChk(prefix) {\n    let chk = 1;\n    for (let i = 0; i < prefix.length; ++i) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            return 'Invalid prefix (' + prefix + ')';\n        chk = polymodStep(chk) ^ (c >> 5);\n    }\n    chk = polymodStep(chk);\n    for (let i = 0; i < prefix.length; ++i) {\n        const v = prefix.charCodeAt(i);\n        chk = polymodStep(chk) ^ (v & 0x1f);\n    }\n    return chk;\n}\nfunction convert(data, inBits, outBits, pad) {\n    let value = 0;\n    let bits = 0;\n    const maxV = (1 << outBits) - 1;\n    const result = [];\n    for (let i = 0; i < data.length; ++i) {\n        value = (value << inBits) | data[i];\n        bits += inBits;\n        while (bits >= outBits) {\n            bits -= outBits;\n            result.push((value >> bits) & maxV);\n        }\n    }\n    if (pad) {\n        if (bits > 0) {\n            result.push((value << (outBits - bits)) & maxV);\n        }\n    }\n    else {\n        if (bits >= inBits)\n            return 'Excess padding';\n        if ((value << (outBits - bits)) & maxV)\n            return 'Non-zero padding';\n    }\n    return result;\n}\nfunction toWords(bytes) {\n    return convert(bytes, 8, 5, true);\n}\nfunction fromWordsUnsafe(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n}\nfunction fromWords(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n    throw new Error(res);\n}\nfunction getLibraryFromEncoding(encoding) {\n    let ENCODING_CONST;\n    if (encoding === 'bech32') {\n        ENCODING_CONST = 1;\n    }\n    else {\n        ENCODING_CONST = 0x2bc830a3;\n    }\n    function encode(prefix, words, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (prefix.length + 7 + words.length > LIMIT)\n            throw new TypeError('Exceeds length limit');\n        prefix = prefix.toLowerCase();\n        // determine chk mod\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            throw new Error(chk);\n        let result = prefix + '1';\n        for (let i = 0; i < words.length; ++i) {\n            const x = words[i];\n            if (x >> 5 !== 0)\n                throw new Error('Non 5-bit word');\n            chk = polymodStep(chk) ^ x;\n            result += ALPHABET.charAt(x);\n        }\n        for (let i = 0; i < 6; ++i) {\n            chk = polymodStep(chk);\n        }\n        chk ^= ENCODING_CONST;\n        for (let i = 0; i < 6; ++i) {\n            const v = (chk >> ((5 - i) * 5)) & 0x1f;\n            result += ALPHABET.charAt(v);\n        }\n        return result;\n    }\n    function __decode(str, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (str.length < 8)\n            return str + ' too short';\n        if (str.length > LIMIT)\n            return 'Exceeds length limit';\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        const uppered = str.toUpperCase();\n        if (str !== lowered && str !== uppered)\n            return 'Mixed-case string ' + str;\n        str = lowered;\n        const split = str.lastIndexOf('1');\n        if (split === -1)\n            return 'No separator character for ' + str;\n        if (split === 0)\n            return 'Missing prefix for ' + str;\n        const prefix = str.slice(0, split);\n        const wordChars = str.slice(split + 1);\n        if (wordChars.length < 6)\n            return 'Data too short';\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            return chk;\n        const words = [];\n        for (let i = 0; i < wordChars.length; ++i) {\n            const c = wordChars.charAt(i);\n            const v = ALPHABET_MAP[c];\n            if (v === undefined)\n                return 'Unknown character ' + c;\n            chk = polymodStep(chk) ^ v;\n            // not in the checksum?\n            if (i + 6 >= wordChars.length)\n                continue;\n            words.push(v);\n        }\n        if (chk !== ENCODING_CONST)\n            return 'Invalid checksum for ' + str;\n        return { prefix, words };\n    }\n    function decodeUnsafe(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n    }\n    function decode(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n        throw new Error(res);\n    }\n    return {\n        decodeUnsafe,\n        decode,\n        encode,\n        toWords,\n        fromWordsUnsafe,\n        fromWords,\n    };\n}\nexports.bech32 = getLibraryFromEncoding('bech32');\nexports.bech32m = getLibraryFromEncoding('bech32m');\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst parser_1 = require('../parser');\nfunction combine(psbts) {\n  const self = psbts[0];\n  const selfKeyVals = parser_1.psbtToKeyVals(self);\n  const others = psbts.slice(1);\n  if (others.length === 0) throw new Error('Combine: Nothing to combine');\n  const selfTx = getTx(self);\n  if (selfTx === undefined) {\n    throw new Error('Combine: Self missing transaction');\n  }\n  const selfGlobalSet = getKeySet(selfKeyVals.globalKeyVals);\n  const selfInputSets = selfKeyVals.inputKeyVals.map(getKeySet);\n  const selfOutputSets = selfKeyVals.outputKeyVals.map(getKeySet);\n  for (const other of others) {\n    const otherTx = getTx(other);\n    if (\n      otherTx === undefined ||\n      !otherTx.toBuffer().equals(selfTx.toBuffer())\n    ) {\n      throw new Error(\n        'Combine: One of the Psbts does not have the same transaction.',\n      );\n    }\n    const otherKeyVals = parser_1.psbtToKeyVals(other);\n    const otherGlobalSet = getKeySet(otherKeyVals.globalKeyVals);\n    otherGlobalSet.forEach(\n      keyPusher(\n        selfGlobalSet,\n        selfKeyVals.globalKeyVals,\n        otherKeyVals.globalKeyVals,\n      ),\n    );\n    const otherInputSets = otherKeyVals.inputKeyVals.map(getKeySet);\n    otherInputSets.forEach((inputSet, idx) =>\n      inputSet.forEach(\n        keyPusher(\n          selfInputSets[idx],\n          selfKeyVals.inputKeyVals[idx],\n          otherKeyVals.inputKeyVals[idx],\n        ),\n      ),\n    );\n    const otherOutputSets = otherKeyVals.outputKeyVals.map(getKeySet);\n    otherOutputSets.forEach((outputSet, idx) =>\n      outputSet.forEach(\n        keyPusher(\n          selfOutputSets[idx],\n          selfKeyVals.outputKeyVals[idx],\n          otherKeyVals.outputKeyVals[idx],\n        ),\n      ),\n    );\n  }\n  return parser_1.psbtFromKeyVals(selfTx, {\n    globalMapKeyVals: selfKeyVals.globalKeyVals,\n    inputKeyVals: selfKeyVals.inputKeyVals,\n    outputKeyVals: selfKeyVals.outputKeyVals,\n  });\n}\nexports.combine = combine;\nfunction keyPusher(selfSet, selfKeyVals, otherKeyVals) {\n  return key => {\n    if (selfSet.has(key)) return;\n    const newKv = otherKeyVals.filter(kv => kv.key.toString('hex') === key)[0];\n    selfKeyVals.push(newKv);\n    selfSet.add(key);\n  };\n}\nfunction getTx(psbt) {\n  return psbt.globalMap.unsignedTx;\n}\nfunction getKeySet(keyVals) {\n  const set = new Set();\n  keyVals.forEach(keyVal => {\n    const hex = keyVal.key.toString('hex');\n    if (set.has(hex))\n      throw new Error('Combine: KeyValue Map keys should be unique');\n    set.add(hex);\n  });\n  return set;\n}\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nconst range = n => [...Array(n).keys()];\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.GlobalTypes.GLOBAL_XPUB) {\n    throw new Error(\n      'Decode Error: could not decode globalXpub with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if (keyVal.key.length !== 79 || ![2, 3].includes(keyVal.key[46])) {\n    throw new Error(\n      'Decode Error: globalXpub has invalid extended pubkey in key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if ((keyVal.value.length / 4) % 1 !== 0) {\n    throw new Error(\n      'Decode Error: Global GLOBAL_XPUB value length should be multiple of 4',\n    );\n  }\n  const extendedPubkey = keyVal.key.slice(1);\n  const data = {\n    masterFingerprint: keyVal.value.slice(0, 4),\n    extendedPubkey,\n    path: 'm',\n  };\n  for (const i of range(keyVal.value.length / 4 - 1)) {\n    const val = keyVal.value.readUInt32LE(i * 4 + 4);\n    const isHard = !!(val & 0x80000000);\n    const idx = val & 0x7fffffff;\n    data.path += '/' + idx.toString(10) + (isHard ? \"'\" : '');\n  }\n  return data;\n}\nexports.decode = decode;\nfunction encode(data) {\n  const head = Buffer.from([typeFields_1.GlobalTypes.GLOBAL_XPUB]);\n  const key = Buffer.concat([head, data.extendedPubkey]);\n  const splitPath = data.path.split('/');\n  const value = Buffer.allocUnsafe(splitPath.length * 4);\n  data.masterFingerprint.copy(value, 0);\n  let offset = 4;\n  splitPath.slice(1).forEach(level => {\n    const isHard = level.slice(-1) === \"'\";\n    let num = 0x7fffffff & parseInt(isHard ? level.slice(0, -1) : level, 10);\n    if (isHard) num += 0x80000000;\n    value.writeUInt32LE(num, offset);\n    offset += 4;\n  });\n  return {\n    key,\n    value,\n  };\n}\nexports.encode = encode;\nexports.expected =\n  '{ masterFingerprint: Buffer; extendedPubkey: Buffer; path: string; }';\nfunction check(data) {\n  const epk = data.extendedPubkey;\n  const mfp = data.masterFingerprint;\n  const p = data.path;\n  return (\n    Buffer.isBuffer(epk) &&\n    epk.length === 78 &&\n    [2, 3].indexOf(epk[45]) > -1 &&\n    Buffer.isBuffer(mfp) &&\n    mfp.length === 4 &&\n    typeof p === 'string' &&\n    !!p.match(/^m(\\/\\d+'?)*$/)\n  );\n}\nexports.check = check;\nfunction canAddToArray(array, item, dupeSet) {\n  const dupeString = item.extendedPubkey.toString('hex');\n  if (dupeSet.has(dupeString)) return false;\n  dupeSet.add(dupeString);\n  return (\n    array.filter(v => v.extendedPubkey.equals(item.extendedPubkey)).length === 0\n  );\n}\nexports.canAddToArray = canAddToArray;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction encode(data) {\n  return {\n    key: Buffer.from([typeFields_1.GlobalTypes.UNSIGNED_TX]),\n    value: data.toBuffer(),\n  };\n}\nexports.encode = encode;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../typeFields');\nconst globalXpub = require('./global/globalXpub');\nconst unsignedTx = require('./global/unsignedTx');\nconst finalScriptSig = require('./input/finalScriptSig');\nconst finalScriptWitness = require('./input/finalScriptWitness');\nconst nonWitnessUtxo = require('./input/nonWitnessUtxo');\nconst partialSig = require('./input/partialSig');\nconst porCommitment = require('./input/porCommitment');\nconst sighashType = require('./input/sighashType');\nconst tapKeySig = require('./input/tapKeySig');\nconst tapLeafScript = require('./input/tapLeafScript');\nconst tapMerkleRoot = require('./input/tapMerkleRoot');\nconst tapScriptSig = require('./input/tapScriptSig');\nconst witnessUtxo = require('./input/witnessUtxo');\nconst tapTree = require('./output/tapTree');\nconst bip32Derivation = require('./shared/bip32Derivation');\nconst checkPubkey = require('./shared/checkPubkey');\nconst redeemScript = require('./shared/redeemScript');\nconst tapBip32Derivation = require('./shared/tapBip32Derivation');\nconst tapInternalKey = require('./shared/tapInternalKey');\nconst witnessScript = require('./shared/witnessScript');\nconst globals = {\n  unsignedTx,\n  globalXpub,\n  // pass an Array of key bytes that require pubkey beside the key\n  checkPubkey: checkPubkey.makeChecker([]),\n};\nexports.globals = globals;\nconst inputs = {\n  nonWitnessUtxo,\n  partialSig,\n  sighashType,\n  finalScriptSig,\n  finalScriptWitness,\n  porCommitment,\n  witnessUtxo,\n  bip32Derivation: bip32Derivation.makeConverter(\n    typeFields_1.InputTypes.BIP32_DERIVATION,\n  ),\n  redeemScript: redeemScript.makeConverter(\n    typeFields_1.InputTypes.REDEEM_SCRIPT,\n  ),\n  witnessScript: witnessScript.makeConverter(\n    typeFields_1.InputTypes.WITNESS_SCRIPT,\n  ),\n  checkPubkey: checkPubkey.makeChecker([\n    typeFields_1.InputTypes.PARTIAL_SIG,\n    typeFields_1.InputTypes.BIP32_DERIVATION,\n  ]),\n  tapKeySig,\n  tapScriptSig,\n  tapLeafScript,\n  tapBip32Derivation: tapBip32Derivation.makeConverter(\n    typeFields_1.InputTypes.TAP_BIP32_DERIVATION,\n  ),\n  tapInternalKey: tapInternalKey.makeConverter(\n    typeFields_1.InputTypes.TAP_INTERNAL_KEY,\n  ),\n  tapMerkleRoot,\n};\nexports.inputs = inputs;\nconst outputs = {\n  bip32Derivation: bip32Derivation.makeConverter(\n    typeFields_1.OutputTypes.BIP32_DERIVATION,\n  ),\n  redeemScript: redeemScript.makeConverter(\n    typeFields_1.OutputTypes.REDEEM_SCRIPT,\n  ),\n  witnessScript: witnessScript.makeConverter(\n    typeFields_1.OutputTypes.WITNESS_SCRIPT,\n  ),\n  checkPubkey: checkPubkey.makeChecker([\n    typeFields_1.OutputTypes.BIP32_DERIVATION,\n  ]),\n  tapBip32Derivation: tapBip32Derivation.makeConverter(\n    typeFields_1.OutputTypes.TAP_BIP32_DERIVATION,\n  ),\n  tapTree,\n  tapInternalKey: tapInternalKey.makeConverter(\n    typeFields_1.OutputTypes.TAP_INTERNAL_KEY,\n  ),\n};\nexports.outputs = outputs;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.FINAL_SCRIPTSIG) {\n    throw new Error(\n      'Decode Error: could not decode finalScriptSig with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  return keyVal.value;\n}\nexports.decode = decode;\nfunction encode(data) {\n  const key = Buffer.from([typeFields_1.InputTypes.FINAL_SCRIPTSIG]);\n  return {\n    key,\n    value: data,\n  };\n}\nexports.encode = encode;\nexports.expected = 'Buffer';\nfunction check(data) {\n  return Buffer.isBuffer(data);\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.finalScriptSig === undefined;\n}\nexports.canAdd = canAdd;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.FINAL_SCRIPTWITNESS) {\n    throw new Error(\n      'Decode Error: could not decode finalScriptWitness with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  return keyVal.value;\n}\nexports.decode = decode;\nfunction encode(data) {\n  const key = Buffer.from([typeFields_1.InputTypes.FINAL_SCRIPTWITNESS]);\n  return {\n    key,\n    value: data,\n  };\n}\nexports.encode = encode;\nexports.expected = 'Buffer';\nfunction check(data) {\n  return Buffer.isBuffer(data);\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return (\n    !!currentData && !!newData && currentData.finalScriptWitness === undefined\n  );\n}\nexports.canAdd = canAdd;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.NON_WITNESS_UTXO) {\n    throw new Error(\n      'Decode Error: could not decode nonWitnessUtxo with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  return keyVal.value;\n}\nexports.decode = decode;\nfunction encode(data) {\n  return {\n    key: Buffer.from([typeFields_1.InputTypes.NON_WITNESS_UTXO]),\n    value: data,\n  };\n}\nexports.encode = encode;\nexports.expected = 'Buffer';\nfunction check(data) {\n  return Buffer.isBuffer(data);\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.nonWitnessUtxo === undefined;\n}\nexports.canAdd = canAdd;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.PARTIAL_SIG) {\n    throw new Error(\n      'Decode Error: could not decode partialSig with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if (\n    !(keyVal.key.length === 34 || keyVal.key.length === 66) ||\n    ![2, 3, 4].includes(keyVal.key[1])\n  ) {\n    throw new Error(\n      'Decode Error: partialSig has invalid pubkey in key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  const pubkey = keyVal.key.slice(1);\n  return {\n    pubkey,\n    signature: keyVal.value,\n  };\n}\nexports.decode = decode;\nfunction encode(pSig) {\n  const head = Buffer.from([typeFields_1.InputTypes.PARTIAL_SIG]);\n  return {\n    key: Buffer.concat([head, pSig.pubkey]),\n    value: pSig.signature,\n  };\n}\nexports.encode = encode;\nexports.expected = '{ pubkey: Buffer; signature: Buffer; }';\nfunction check(data) {\n  return (\n    Buffer.isBuffer(data.pubkey) &&\n    Buffer.isBuffer(data.signature) &&\n    [33, 65].includes(data.pubkey.length) &&\n    [2, 3, 4].includes(data.pubkey[0]) &&\n    isDerSigWithSighash(data.signature)\n  );\n}\nexports.check = check;\nfunction isDerSigWithSighash(buf) {\n  if (!Buffer.isBuffer(buf) || buf.length < 9) return false;\n  if (buf[0] !== 0x30) return false;\n  if (buf.length !== buf[1] + 3) return false;\n  if (buf[2] !== 0x02) return false;\n  const rLen = buf[3];\n  if (rLen > 33 || rLen < 1) return false;\n  if (buf[3 + rLen + 1] !== 0x02) return false;\n  const sLen = buf[3 + rLen + 2];\n  if (sLen > 33 || sLen < 1) return false;\n  if (buf.length !== 3 + rLen + 2 + sLen + 2) return false;\n  return true;\n}\nfunction canAddToArray(array, item, dupeSet) {\n  const dupeString = item.pubkey.toString('hex');\n  if (dupeSet.has(dupeString)) return false;\n  dupeSet.add(dupeString);\n  return array.filter(v => v.pubkey.equals(item.pubkey)).length === 0;\n}\nexports.canAddToArray = canAddToArray;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.POR_COMMITMENT) {\n    throw new Error(\n      'Decode Error: could not decode porCommitment with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  return keyVal.value.toString('utf8');\n}\nexports.decode = decode;\nfunction encode(data) {\n  const key = Buffer.from([typeFields_1.InputTypes.POR_COMMITMENT]);\n  return {\n    key,\n    value: Buffer.from(data, 'utf8'),\n  };\n}\nexports.encode = encode;\nexports.expected = 'string';\nfunction check(data) {\n  return typeof data === 'string';\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.porCommitment === undefined;\n}\nexports.canAdd = canAdd;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.SIGHASH_TYPE) {\n    throw new Error(\n      'Decode Error: could not decode sighashType with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  return keyVal.value.readUInt32LE(0);\n}\nexports.decode = decode;\nfunction encode(data) {\n  const key = Buffer.from([typeFields_1.InputTypes.SIGHASH_TYPE]);\n  const value = Buffer.allocUnsafe(4);\n  value.writeUInt32LE(data, 0);\n  return {\n    key,\n    value,\n  };\n}\nexports.encode = encode;\nexports.expected = 'number';\nfunction check(data) {\n  return typeof data === 'number';\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.sighashType === undefined;\n}\nexports.canAdd = canAdd;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (\n    keyVal.key[0] !== typeFields_1.InputTypes.TAP_KEY_SIG ||\n    keyVal.key.length !== 1\n  ) {\n    throw new Error(\n      'Decode Error: could not decode tapKeySig with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if (!check(keyVal.value)) {\n    throw new Error(\n      'Decode Error: tapKeySig not a valid 64-65-byte BIP340 signature',\n    );\n  }\n  return keyVal.value;\n}\nexports.decode = decode;\nfunction encode(value) {\n  const key = Buffer.from([typeFields_1.InputTypes.TAP_KEY_SIG]);\n  return { key, value };\n}\nexports.encode = encode;\nexports.expected = 'Buffer';\nfunction check(data) {\n  return Buffer.isBuffer(data) && (data.length === 64 || data.length === 65);\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.tapKeySig === undefined;\n}\nexports.canAdd = canAdd;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.TAP_LEAF_SCRIPT) {\n    throw new Error(\n      'Decode Error: could not decode tapLeafScript with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if ((keyVal.key.length - 2) % 32 !== 0) {\n    throw new Error(\n      'Decode Error: tapLeafScript has invalid control block in key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  const leafVersion = keyVal.value[keyVal.value.length - 1];\n  if ((keyVal.key[1] & 0xfe) !== leafVersion) {\n    throw new Error(\n      'Decode Error: tapLeafScript bad leaf version in key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  const script = keyVal.value.slice(0, -1);\n  const controlBlock = keyVal.key.slice(1);\n  return { controlBlock, script, leafVersion };\n}\nexports.decode = decode;\nfunction encode(tScript) {\n  const head = Buffer.from([typeFields_1.InputTypes.TAP_LEAF_SCRIPT]);\n  const verBuf = Buffer.from([tScript.leafVersion]);\n  return {\n    key: Buffer.concat([head, tScript.controlBlock]),\n    value: Buffer.concat([tScript.script, verBuf]),\n  };\n}\nexports.encode = encode;\nexports.expected =\n  '{ controlBlock: Buffer; leafVersion: number, script: Buffer; }';\nfunction check(data) {\n  return (\n    Buffer.isBuffer(data.controlBlock) &&\n    (data.controlBlock.length - 1) % 32 === 0 &&\n    (data.controlBlock[0] & 0xfe) === data.leafVersion &&\n    Buffer.isBuffer(data.script)\n  );\n}\nexports.check = check;\nfunction canAddToArray(array, item, dupeSet) {\n  const dupeString = item.controlBlock.toString('hex');\n  if (dupeSet.has(dupeString)) return false;\n  dupeSet.add(dupeString);\n  return (\n    array.filter(v => v.controlBlock.equals(item.controlBlock)).length === 0\n  );\n}\nexports.canAddToArray = canAddToArray;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (\n    keyVal.key[0] !== typeFields_1.InputTypes.TAP_MERKLE_ROOT ||\n    keyVal.key.length !== 1\n  ) {\n    throw new Error(\n      'Decode Error: could not decode tapMerkleRoot with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if (!check(keyVal.value)) {\n    throw new Error('Decode Error: tapMerkleRoot not a 32-byte hash');\n  }\n  return keyVal.value;\n}\nexports.decode = decode;\nfunction encode(value) {\n  const key = Buffer.from([typeFields_1.InputTypes.TAP_MERKLE_ROOT]);\n  return { key, value };\n}\nexports.encode = encode;\nexports.expected = 'Buffer';\nfunction check(data) {\n  return Buffer.isBuffer(data) && data.length === 32;\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.tapMerkleRoot === undefined;\n}\nexports.canAdd = canAdd;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.TAP_SCRIPT_SIG) {\n    throw new Error(\n      'Decode Error: could not decode tapScriptSig with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if (keyVal.key.length !== 65) {\n    throw new Error(\n      'Decode Error: tapScriptSig has invalid key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if (keyVal.value.length !== 64 && keyVal.value.length !== 65) {\n    throw new Error(\n      'Decode Error: tapScriptSig has invalid signature in key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  const pubkey = keyVal.key.slice(1, 33);\n  const leafHash = keyVal.key.slice(33);\n  return {\n    pubkey,\n    leafHash,\n    signature: keyVal.value,\n  };\n}\nexports.decode = decode;\nfunction encode(tSig) {\n  const head = Buffer.from([typeFields_1.InputTypes.TAP_SCRIPT_SIG]);\n  return {\n    key: Buffer.concat([head, tSig.pubkey, tSig.leafHash]),\n    value: tSig.signature,\n  };\n}\nexports.encode = encode;\nexports.expected = '{ pubkey: Buffer; leafHash: Buffer; signature: Buffer; }';\nfunction check(data) {\n  return (\n    Buffer.isBuffer(data.pubkey) &&\n    Buffer.isBuffer(data.leafHash) &&\n    Buffer.isBuffer(data.signature) &&\n    data.pubkey.length === 32 &&\n    data.leafHash.length === 32 &&\n    (data.signature.length === 64 || data.signature.length === 65)\n  );\n}\nexports.check = check;\nfunction canAddToArray(array, item, dupeSet) {\n  const dupeString =\n    item.pubkey.toString('hex') + item.leafHash.toString('hex');\n  if (dupeSet.has(dupeString)) return false;\n  dupeSet.add(dupeString);\n  return (\n    array.filter(\n      v => v.pubkey.equals(item.pubkey) && v.leafHash.equals(item.leafHash),\n    ).length === 0\n  );\n}\nexports.canAddToArray = canAddToArray;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nconst tools_1 = require('../tools');\nconst varuint = require('../varint');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.WITNESS_UTXO) {\n    throw new Error(\n      'Decode Error: could not decode witnessUtxo with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  const value = tools_1.readUInt64LE(keyVal.value, 0);\n  let _offset = 8;\n  const scriptLen = varuint.decode(keyVal.value, _offset);\n  _offset += varuint.encodingLength(scriptLen);\n  const script = keyVal.value.slice(_offset);\n  if (script.length !== scriptLen) {\n    throw new Error('Decode Error: WITNESS_UTXO script is not proper length');\n  }\n  return {\n    script,\n    value,\n  };\n}\nexports.decode = decode;\nfunction encode(data) {\n  const { script, value } = data;\n  const varintLen = varuint.encodingLength(script.length);\n  const result = Buffer.allocUnsafe(8 + varintLen + script.length);\n  tools_1.writeUInt64LE(result, value, 0);\n  varuint.encode(script.length, result, 8);\n  script.copy(result, 8 + varintLen);\n  return {\n    key: Buffer.from([typeFields_1.InputTypes.WITNESS_UTXO]),\n    value: result,\n  };\n}\nexports.encode = encode;\nexports.expected = '{ script: Buffer; value: number; }';\nfunction check(data) {\n  return Buffer.isBuffer(data.script) && typeof data.value === 'number';\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.witnessUtxo === undefined;\n}\nexports.canAdd = canAdd;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nconst varuint = require('../varint');\nfunction decode(keyVal) {\n  if (\n    keyVal.key[0] !== typeFields_1.OutputTypes.TAP_TREE ||\n    keyVal.key.length !== 1\n  ) {\n    throw new Error(\n      'Decode Error: could not decode tapTree with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  let _offset = 0;\n  const data = [];\n  while (_offset < keyVal.value.length) {\n    const depth = keyVal.value[_offset++];\n    const leafVersion = keyVal.value[_offset++];\n    const scriptLen = varuint.decode(keyVal.value, _offset);\n    _offset += varuint.encodingLength(scriptLen);\n    data.push({\n      depth,\n      leafVersion,\n      script: keyVal.value.slice(_offset, _offset + scriptLen),\n    });\n    _offset += scriptLen;\n  }\n  return { leaves: data };\n}\nexports.decode = decode;\nfunction encode(tree) {\n  const key = Buffer.from([typeFields_1.OutputTypes.TAP_TREE]);\n  const bufs = [].concat(\n    ...tree.leaves.map(tapLeaf => [\n      Buffer.of(tapLeaf.depth, tapLeaf.leafVersion),\n      varuint.encode(tapLeaf.script.length),\n      tapLeaf.script,\n    ]),\n  );\n  return {\n    key,\n    value: Buffer.concat(bufs),\n  };\n}\nexports.encode = encode;\nexports.expected =\n  '{ leaves: [{ depth: number; leafVersion: number, script: Buffer; }] }';\nfunction check(data) {\n  return (\n    Array.isArray(data.leaves) &&\n    data.leaves.every(\n      tapLeaf =>\n        tapLeaf.depth >= 0 &&\n        tapLeaf.depth <= 128 &&\n        (tapLeaf.leafVersion & 0xfe) === tapLeaf.leafVersion &&\n        Buffer.isBuffer(tapLeaf.script),\n    )\n  );\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.tapTree === undefined;\n}\nexports.canAdd = canAdd;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst range = n => [...Array(n).keys()];\nconst isValidDERKey = pubkey =>\n  (pubkey.length === 33 && [2, 3].includes(pubkey[0])) ||\n  (pubkey.length === 65 && 4 === pubkey[0]);\nfunction makeConverter(TYPE_BYTE, isValidPubkey = isValidDERKey) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE) {\n      throw new Error(\n        'Decode Error: could not decode bip32Derivation with key 0x' +\n          keyVal.key.toString('hex'),\n      );\n    }\n    const pubkey = keyVal.key.slice(1);\n    if (!isValidPubkey(pubkey)) {\n      throw new Error(\n        'Decode Error: bip32Derivation has invalid pubkey in key 0x' +\n          keyVal.key.toString('hex'),\n      );\n    }\n    if ((keyVal.value.length / 4) % 1 !== 0) {\n      throw new Error(\n        'Decode Error: Input BIP32_DERIVATION value length should be multiple of 4',\n      );\n    }\n    const data = {\n      masterFingerprint: keyVal.value.slice(0, 4),\n      pubkey,\n      path: 'm',\n    };\n    for (const i of range(keyVal.value.length / 4 - 1)) {\n      const val = keyVal.value.readUInt32LE(i * 4 + 4);\n      const isHard = !!(val & 0x80000000);\n      const idx = val & 0x7fffffff;\n      data.path += '/' + idx.toString(10) + (isHard ? \"'\" : '');\n    }\n    return data;\n  }\n  function encode(data) {\n    const head = Buffer.from([TYPE_BYTE]);\n    const key = Buffer.concat([head, data.pubkey]);\n    const splitPath = data.path.split('/');\n    const value = Buffer.allocUnsafe(splitPath.length * 4);\n    data.masterFingerprint.copy(value, 0);\n    let offset = 4;\n    splitPath.slice(1).forEach(level => {\n      const isHard = level.slice(-1) === \"'\";\n      let num = 0x7fffffff & parseInt(isHard ? level.slice(0, -1) : level, 10);\n      if (isHard) num += 0x80000000;\n      value.writeUInt32LE(num, offset);\n      offset += 4;\n    });\n    return {\n      key,\n      value,\n    };\n  }\n  const expected =\n    '{ masterFingerprint: Buffer; pubkey: Buffer; path: string; }';\n  function check(data) {\n    return (\n      Buffer.isBuffer(data.pubkey) &&\n      Buffer.isBuffer(data.masterFingerprint) &&\n      typeof data.path === 'string' &&\n      isValidPubkey(data.pubkey) &&\n      data.masterFingerprint.length === 4\n    );\n  }\n  function canAddToArray(array, item, dupeSet) {\n    const dupeString = item.pubkey.toString('hex');\n    if (dupeSet.has(dupeString)) return false;\n    dupeSet.add(dupeString);\n    return array.filter(v => v.pubkey.equals(item.pubkey)).length === 0;\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAddToArray,\n  };\n}\nexports.makeConverter = makeConverter;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nfunction makeChecker(pubkeyTypes) {\n  return checkPubkey;\n  function checkPubkey(keyVal) {\n    let pubkey;\n    if (pubkeyTypes.includes(keyVal.key[0])) {\n      pubkey = keyVal.key.slice(1);\n      if (\n        !(pubkey.length === 33 || pubkey.length === 65) ||\n        ![2, 3, 4].includes(pubkey[0])\n      ) {\n        throw new Error(\n          'Format Error: invalid pubkey in key 0x' + keyVal.key.toString('hex'),\n        );\n      }\n    }\n    return pubkey;\n  }\n}\nexports.makeChecker = makeChecker;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nfunction makeConverter(TYPE_BYTE) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE) {\n      throw new Error(\n        'Decode Error: could not decode redeemScript with key 0x' +\n          keyVal.key.toString('hex'),\n      );\n    }\n    return keyVal.value;\n  }\n  function encode(data) {\n    const key = Buffer.from([TYPE_BYTE]);\n    return {\n      key,\n      value: data,\n    };\n  }\n  const expected = 'Buffer';\n  function check(data) {\n    return Buffer.isBuffer(data);\n  }\n  function canAdd(currentData, newData) {\n    return !!currentData && !!newData && currentData.redeemScript === undefined;\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAdd,\n  };\n}\nexports.makeConverter = makeConverter;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst varuint = require('../varint');\nconst bip32Derivation = require('./bip32Derivation');\nconst isValidBIP340Key = pubkey => pubkey.length === 32;\nfunction makeConverter(TYPE_BYTE) {\n  const parent = bip32Derivation.makeConverter(TYPE_BYTE, isValidBIP340Key);\n  function decode(keyVal) {\n    const nHashes = varuint.decode(keyVal.value);\n    const nHashesLen = varuint.encodingLength(nHashes);\n    const base = parent.decode({\n      key: keyVal.key,\n      value: keyVal.value.slice(nHashesLen + nHashes * 32),\n    });\n    const leafHashes = new Array(nHashes);\n    for (let i = 0, _offset = nHashesLen; i < nHashes; i++, _offset += 32) {\n      leafHashes[i] = keyVal.value.slice(_offset, _offset + 32);\n    }\n    return Object.assign({}, base, { leafHashes });\n  }\n  function encode(data) {\n    const base = parent.encode(data);\n    const nHashesLen = varuint.encodingLength(data.leafHashes.length);\n    const nHashesBuf = Buffer.allocUnsafe(nHashesLen);\n    varuint.encode(data.leafHashes.length, nHashesBuf);\n    const value = Buffer.concat([nHashesBuf, ...data.leafHashes, base.value]);\n    return Object.assign({}, base, { value });\n  }\n  const expected =\n    '{ ' +\n    'masterFingerprint: Buffer; ' +\n    'pubkey: Buffer; ' +\n    'path: string; ' +\n    'leafHashes: Buffer[]; ' +\n    '}';\n  function check(data) {\n    return (\n      Array.isArray(data.leafHashes) &&\n      data.leafHashes.every(\n        leafHash => Buffer.isBuffer(leafHash) && leafHash.length === 32,\n      ) &&\n      parent.check(data)\n    );\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAddToArray: parent.canAddToArray,\n  };\n}\nexports.makeConverter = makeConverter;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nfunction makeConverter(TYPE_BYTE) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE || keyVal.key.length !== 1) {\n      throw new Error(\n        'Decode Error: could not decode tapInternalKey with key 0x' +\n          keyVal.key.toString('hex'),\n      );\n    }\n    if (keyVal.value.length !== 32) {\n      throw new Error(\n        'Decode Error: tapInternalKey not a 32-byte x-only pubkey',\n      );\n    }\n    return keyVal.value;\n  }\n  function encode(value) {\n    const key = Buffer.from([TYPE_BYTE]);\n    return { key, value };\n  }\n  const expected = 'Buffer';\n  function check(data) {\n    return Buffer.isBuffer(data) && data.length === 32;\n  }\n  function canAdd(currentData, newData) {\n    return (\n      !!currentData && !!newData && currentData.tapInternalKey === undefined\n    );\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAdd,\n  };\n}\nexports.makeConverter = makeConverter;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nfunction makeConverter(TYPE_BYTE) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE) {\n      throw new Error(\n        'Decode Error: could not decode witnessScript with key 0x' +\n          keyVal.key.toString('hex'),\n      );\n    }\n    return keyVal.value;\n  }\n  function encode(data) {\n    const key = Buffer.from([TYPE_BYTE]);\n    return {\n      key,\n      value: data,\n    };\n  }\n  const expected = 'Buffer';\n  function check(data) {\n    return Buffer.isBuffer(data);\n  }\n  function canAdd(currentData, newData) {\n    return (\n      !!currentData && !!newData && currentData.witnessScript === undefined\n    );\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAdd,\n  };\n}\nexports.makeConverter = makeConverter;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst varuint = require('./varint');\nexports.range = n => [...Array(n).keys()];\nfunction reverseBuffer(buffer) {\n  if (buffer.length < 1) return buffer;\n  let j = buffer.length - 1;\n  let tmp = 0;\n  for (let i = 0; i < buffer.length / 2; i++) {\n    tmp = buffer[i];\n    buffer[i] = buffer[j];\n    buffer[j] = tmp;\n    j--;\n  }\n  return buffer;\n}\nexports.reverseBuffer = reverseBuffer;\nfunction keyValsToBuffer(keyVals) {\n  const buffers = keyVals.map(keyValToBuffer);\n  buffers.push(Buffer.from([0]));\n  return Buffer.concat(buffers);\n}\nexports.keyValsToBuffer = keyValsToBuffer;\nfunction keyValToBuffer(keyVal) {\n  const keyLen = keyVal.key.length;\n  const valLen = keyVal.value.length;\n  const keyVarIntLen = varuint.encodingLength(keyLen);\n  const valVarIntLen = varuint.encodingLength(valLen);\n  const buffer = Buffer.allocUnsafe(\n    keyVarIntLen + keyLen + valVarIntLen + valLen,\n  );\n  varuint.encode(keyLen, buffer, 0);\n  keyVal.key.copy(buffer, keyVarIntLen);\n  varuint.encode(valLen, buffer, keyVarIntLen + keyLen);\n  keyVal.value.copy(buffer, keyVarIntLen + keyLen + valVarIntLen);\n  return buffer;\n}\nexports.keyValToBuffer = keyValToBuffer;\n// https://github.com/feross/buffer/blob/master/index.js#L1127\nfunction verifuint(value, max) {\n  if (typeof value !== 'number')\n    throw new Error('cannot write a non-number as a number');\n  if (value < 0)\n    throw new Error('specified a negative value for writing an unsigned value');\n  if (value > max) throw new Error('RangeError: value out of range');\n  if (Math.floor(value) !== value)\n    throw new Error('value has a fractional component');\n}\nfunction readUInt64LE(buffer, offset) {\n  const a = buffer.readUInt32LE(offset);\n  let b = buffer.readUInt32LE(offset + 4);\n  b *= 0x100000000;\n  verifuint(b + a, 0x001fffffffffffff);\n  return b + a;\n}\nexports.readUInt64LE = readUInt64LE;\nfunction writeUInt64LE(buffer, value, offset) {\n  verifuint(value, 0x001fffffffffffff);\n  buffer.writeInt32LE(value & -1, offset);\n  buffer.writeUInt32LE(Math.floor(value / 0x100000000), offset + 4);\n  return offset + 8;\n}\nexports.writeUInt64LE = writeUInt64LE;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\n// Number.MAX_SAFE_INTEGER\nconst MAX_SAFE_INTEGER = 9007199254740991;\nfunction checkUInt53(n) {\n  if (n < 0 || n > MAX_SAFE_INTEGER || n % 1 !== 0)\n    throw new RangeError('value out of range');\n}\nfunction encode(_number, buffer, offset) {\n  checkUInt53(_number);\n  if (!buffer) buffer = Buffer.allocUnsafe(encodingLength(_number));\n  if (!Buffer.isBuffer(buffer))\n    throw new TypeError('buffer must be a Buffer instance');\n  if (!offset) offset = 0;\n  // 8 bit\n  if (_number < 0xfd) {\n    buffer.writeUInt8(_number, offset);\n    Object.assign(encode, { bytes: 1 });\n    // 16 bit\n  } else if (_number <= 0xffff) {\n    buffer.writeUInt8(0xfd, offset);\n    buffer.writeUInt16LE(_number, offset + 1);\n    Object.assign(encode, { bytes: 3 });\n    // 32 bit\n  } else if (_number <= 0xffffffff) {\n    buffer.writeUInt8(0xfe, offset);\n    buffer.writeUInt32LE(_number, offset + 1);\n    Object.assign(encode, { bytes: 5 });\n    // 64 bit\n  } else {\n    buffer.writeUInt8(0xff, offset);\n    buffer.writeUInt32LE(_number >>> 0, offset + 1);\n    buffer.writeUInt32LE((_number / 0x100000000) | 0, offset + 5);\n    Object.assign(encode, { bytes: 9 });\n  }\n  return buffer;\n}\nexports.encode = encode;\nfunction decode(buffer, offset) {\n  if (!Buffer.isBuffer(buffer))\n    throw new TypeError('buffer must be a Buffer instance');\n  if (!offset) offset = 0;\n  const first = buffer.readUInt8(offset);\n  // 8 bit\n  if (first < 0xfd) {\n    Object.assign(decode, { bytes: 1 });\n    return first;\n    // 16 bit\n  } else if (first === 0xfd) {\n    Object.assign(decode, { bytes: 3 });\n    return buffer.readUInt16LE(offset + 1);\n    // 32 bit\n  } else if (first === 0xfe) {\n    Object.assign(decode, { bytes: 5 });\n    return buffer.readUInt32LE(offset + 1);\n    // 64 bit\n  } else {\n    Object.assign(decode, { bytes: 9 });\n    const lo = buffer.readUInt32LE(offset + 1);\n    const hi = buffer.readUInt32LE(offset + 5);\n    const _number = hi * 0x0100000000 + lo;\n    checkUInt53(_number);\n    return _number;\n  }\n}\nexports.decode = decode;\nfunction encodingLength(_number) {\n  checkUInt53(_number);\n  return _number < 0xfd\n    ? 1\n    : _number <= 0xffff\n    ? 3\n    : _number <= 0xffffffff\n    ? 5\n    : 9;\n}\nexports.encodingLength = encodingLength;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst convert = require('../converter');\nconst tools_1 = require('../converter/tools');\nconst varuint = require('../converter/varint');\nconst typeFields_1 = require('../typeFields');\nfunction psbtFromBuffer(buffer, txGetter) {\n  let offset = 0;\n  function varSlice() {\n    const keyLen = varuint.decode(buffer, offset);\n    offset += varuint.encodingLength(keyLen);\n    const key = buffer.slice(offset, offset + keyLen);\n    offset += keyLen;\n    return key;\n  }\n  function readUInt32BE() {\n    const num = buffer.readUInt32BE(offset);\n    offset += 4;\n    return num;\n  }\n  function readUInt8() {\n    const num = buffer.readUInt8(offset);\n    offset += 1;\n    return num;\n  }\n  function getKeyValue() {\n    const key = varSlice();\n    const value = varSlice();\n    return {\n      key,\n      value,\n    };\n  }\n  function checkEndOfKeyValPairs() {\n    if (offset >= buffer.length) {\n      throw new Error('Format Error: Unexpected End of PSBT');\n    }\n    const isEnd = buffer.readUInt8(offset) === 0;\n    if (isEnd) {\n      offset++;\n    }\n    return isEnd;\n  }\n  if (readUInt32BE() !== 0x70736274) {\n    throw new Error('Format Error: Invalid Magic Number');\n  }\n  if (readUInt8() !== 0xff) {\n    throw new Error(\n      'Format Error: Magic Number must be followed by 0xff separator',\n    );\n  }\n  const globalMapKeyVals = [];\n  const globalKeyIndex = {};\n  while (!checkEndOfKeyValPairs()) {\n    const keyVal = getKeyValue();\n    const hexKey = keyVal.key.toString('hex');\n    if (globalKeyIndex[hexKey]) {\n      throw new Error(\n        'Format Error: Keys must be unique for global keymap: key ' + hexKey,\n      );\n    }\n    globalKeyIndex[hexKey] = 1;\n    globalMapKeyVals.push(keyVal);\n  }\n  const unsignedTxMaps = globalMapKeyVals.filter(\n    keyVal => keyVal.key[0] === typeFields_1.GlobalTypes.UNSIGNED_TX,\n  );\n  if (unsignedTxMaps.length !== 1) {\n    throw new Error('Format Error: Only one UNSIGNED_TX allowed');\n  }\n  const unsignedTx = txGetter(unsignedTxMaps[0].value);\n  // Get input and output counts to loop the respective fields\n  const { inputCount, outputCount } = unsignedTx.getInputOutputCounts();\n  const inputKeyVals = [];\n  const outputKeyVals = [];\n  // Get input fields\n  for (const index of tools_1.range(inputCount)) {\n    const inputKeyIndex = {};\n    const input = [];\n    while (!checkEndOfKeyValPairs()) {\n      const keyVal = getKeyValue();\n      const hexKey = keyVal.key.toString('hex');\n      if (inputKeyIndex[hexKey]) {\n        throw new Error(\n          'Format Error: Keys must be unique for each input: ' +\n            'input index ' +\n            index +\n            ' key ' +\n            hexKey,\n        );\n      }\n      inputKeyIndex[hexKey] = 1;\n      input.push(keyVal);\n    }\n    inputKeyVals.push(input);\n  }\n  for (const index of tools_1.range(outputCount)) {\n    const outputKeyIndex = {};\n    const output = [];\n    while (!checkEndOfKeyValPairs()) {\n      const keyVal = getKeyValue();\n      const hexKey = keyVal.key.toString('hex');\n      if (outputKeyIndex[hexKey]) {\n        throw new Error(\n          'Format Error: Keys must be unique for each output: ' +\n            'output index ' +\n            index +\n            ' key ' +\n            hexKey,\n        );\n      }\n      outputKeyIndex[hexKey] = 1;\n      output.push(keyVal);\n    }\n    outputKeyVals.push(output);\n  }\n  return psbtFromKeyVals(unsignedTx, {\n    globalMapKeyVals,\n    inputKeyVals,\n    outputKeyVals,\n  });\n}\nexports.psbtFromBuffer = psbtFromBuffer;\nfunction checkKeyBuffer(type, keyBuf, keyNum) {\n  if (!keyBuf.equals(Buffer.from([keyNum]))) {\n    throw new Error(\n      `Format Error: Invalid ${type} key: ${keyBuf.toString('hex')}`,\n    );\n  }\n}\nexports.checkKeyBuffer = checkKeyBuffer;\nfunction psbtFromKeyVals(\n  unsignedTx,\n  { globalMapKeyVals, inputKeyVals, outputKeyVals },\n) {\n  // That was easy :-)\n  const globalMap = {\n    unsignedTx,\n  };\n  let txCount = 0;\n  for (const keyVal of globalMapKeyVals) {\n    // If a globalMap item needs pubkey, uncomment\n    // const pubkey = convert.globals.checkPubkey(keyVal);\n    switch (keyVal.key[0]) {\n      case typeFields_1.GlobalTypes.UNSIGNED_TX:\n        checkKeyBuffer(\n          'global',\n          keyVal.key,\n          typeFields_1.GlobalTypes.UNSIGNED_TX,\n        );\n        if (txCount > 0) {\n          throw new Error('Format Error: GlobalMap has multiple UNSIGNED_TX');\n        }\n        txCount++;\n        break;\n      case typeFields_1.GlobalTypes.GLOBAL_XPUB:\n        if (globalMap.globalXpub === undefined) {\n          globalMap.globalXpub = [];\n        }\n        globalMap.globalXpub.push(convert.globals.globalXpub.decode(keyVal));\n        break;\n      default:\n        // This will allow inclusion during serialization.\n        if (!globalMap.unknownKeyVals) globalMap.unknownKeyVals = [];\n        globalMap.unknownKeyVals.push(keyVal);\n    }\n  }\n  // Get input and output counts to loop the respective fields\n  const inputCount = inputKeyVals.length;\n  const outputCount = outputKeyVals.length;\n  const inputs = [];\n  const outputs = [];\n  // Get input fields\n  for (const index of tools_1.range(inputCount)) {\n    const input = {};\n    for (const keyVal of inputKeyVals[index]) {\n      convert.inputs.checkPubkey(keyVal);\n      switch (keyVal.key[0]) {\n        case typeFields_1.InputTypes.NON_WITNESS_UTXO:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.NON_WITNESS_UTXO,\n          );\n          if (input.nonWitnessUtxo !== undefined) {\n            throw new Error(\n              'Format Error: Input has multiple NON_WITNESS_UTXO',\n            );\n          }\n          input.nonWitnessUtxo = convert.inputs.nonWitnessUtxo.decode(keyVal);\n          break;\n        case typeFields_1.InputTypes.WITNESS_UTXO:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.WITNESS_UTXO,\n          );\n          if (input.witnessUtxo !== undefined) {\n            throw new Error('Format Error: Input has multiple WITNESS_UTXO');\n          }\n          input.witnessUtxo = convert.inputs.witnessUtxo.decode(keyVal);\n          break;\n        case typeFields_1.InputTypes.PARTIAL_SIG:\n          if (input.partialSig === undefined) {\n            input.partialSig = [];\n          }\n          input.partialSig.push(convert.inputs.partialSig.decode(keyVal));\n          break;\n        case typeFields_1.InputTypes.SIGHASH_TYPE:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.SIGHASH_TYPE,\n          );\n          if (input.sighashType !== undefined) {\n            throw new Error('Format Error: Input has multiple SIGHASH_TYPE');\n          }\n          input.sighashType = convert.inputs.sighashType.decode(keyVal);\n          break;\n        case typeFields_1.InputTypes.REDEEM_SCRIPT:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.REDEEM_SCRIPT,\n          );\n          if (input.redeemScript !== undefined) {\n            throw new Error('Format Error: Input has multiple REDEEM_SCRIPT');\n          }\n          input.redeemScript = convert.inputs.redeemScript.decode(keyVal);\n          break;\n        case typeFields_1.InputTypes.WITNESS_SCRIPT:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.WITNESS_SCRIPT,\n          );\n          if (input.witnessScript !== undefined) {\n            throw new Error('Format Error: Input has multiple WITNESS_SCRIPT');\n          }\n          input.witnessScript = convert.inputs.witnessScript.decode(keyVal);\n          break;\n        case typeFields_1.InputTypes.BIP32_DERIVATION:\n          if (input.bip32Derivation === undefined) {\n            input.bip32Derivation = [];\n          }\n          input.bip32Derivation.push(\n            convert.inputs.bip32Derivation.decode(keyVal),\n          );\n          break;\n        case typeFields_1.InputTypes.FINAL_SCRIPTSIG:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.FINAL_SCRIPTSIG,\n          );\n          input.finalScriptSig = convert.inputs.finalScriptSig.decode(keyVal);\n          break;\n        case typeFields_1.InputTypes.FINAL_SCRIPTWITNESS:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.FINAL_SCRIPTWITNESS,\n          );\n          input.finalScriptWitness = convert.inputs.finalScriptWitness.decode(\n            keyVal,\n          );\n          break;\n        case typeFields_1.InputTypes.POR_COMMITMENT:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.POR_COMMITMENT,\n          );\n          input.porCommitment = convert.inputs.porCommitment.decode(keyVal);\n          break;\n        case typeFields_1.InputTypes.TAP_KEY_SIG:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.TAP_KEY_SIG,\n          );\n          input.tapKeySig = convert.inputs.tapKeySig.decode(keyVal);\n          break;\n        case typeFields_1.InputTypes.TAP_SCRIPT_SIG:\n          if (input.tapScriptSig === undefined) {\n            input.tapScriptSig = [];\n          }\n          input.tapScriptSig.push(convert.inputs.tapScriptSig.decode(keyVal));\n          break;\n        case typeFields_1.InputTypes.TAP_LEAF_SCRIPT:\n          if (input.tapLeafScript === undefined) {\n            input.tapLeafScript = [];\n          }\n          input.tapLeafScript.push(convert.inputs.tapLeafScript.decode(keyVal));\n          break;\n        case typeFields_1.InputTypes.TAP_BIP32_DERIVATION:\n          if (input.tapBip32Derivation === undefined) {\n            input.tapBip32Derivation = [];\n          }\n          input.tapBip32Derivation.push(\n            convert.inputs.tapBip32Derivation.decode(keyVal),\n          );\n          break;\n        case typeFields_1.InputTypes.TAP_INTERNAL_KEY:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.TAP_INTERNAL_KEY,\n          );\n          input.tapInternalKey = convert.inputs.tapInternalKey.decode(keyVal);\n          break;\n        case typeFields_1.InputTypes.TAP_MERKLE_ROOT:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.TAP_MERKLE_ROOT,\n          );\n          input.tapMerkleRoot = convert.inputs.tapMerkleRoot.decode(keyVal);\n          break;\n        default:\n          // This will allow inclusion during serialization.\n          if (!input.unknownKeyVals) input.unknownKeyVals = [];\n          input.unknownKeyVals.push(keyVal);\n      }\n    }\n    inputs.push(input);\n  }\n  for (const index of tools_1.range(outputCount)) {\n    const output = {};\n    for (const keyVal of outputKeyVals[index]) {\n      convert.outputs.checkPubkey(keyVal);\n      switch (keyVal.key[0]) {\n        case typeFields_1.OutputTypes.REDEEM_SCRIPT:\n          checkKeyBuffer(\n            'output',\n            keyVal.key,\n            typeFields_1.OutputTypes.REDEEM_SCRIPT,\n          );\n          if (output.redeemScript !== undefined) {\n            throw new Error('Format Error: Output has multiple REDEEM_SCRIPT');\n          }\n          output.redeemScript = convert.outputs.redeemScript.decode(keyVal);\n          break;\n        case typeFields_1.OutputTypes.WITNESS_SCRIPT:\n          checkKeyBuffer(\n            'output',\n            keyVal.key,\n            typeFields_1.OutputTypes.WITNESS_SCRIPT,\n          );\n          if (output.witnessScript !== undefined) {\n            throw new Error('Format Error: Output has multiple WITNESS_SCRIPT');\n          }\n          output.witnessScript = convert.outputs.witnessScript.decode(keyVal);\n          break;\n        case typeFields_1.OutputTypes.BIP32_DERIVATION:\n          if (output.bip32Derivation === undefined) {\n            output.bip32Derivation = [];\n          }\n          output.bip32Derivation.push(\n            convert.outputs.bip32Derivation.decode(keyVal),\n          );\n          break;\n        case typeFields_1.OutputTypes.TAP_INTERNAL_KEY:\n          checkKeyBuffer(\n            'output',\n            keyVal.key,\n            typeFields_1.OutputTypes.TAP_INTERNAL_KEY,\n          );\n          output.tapInternalKey = convert.outputs.tapInternalKey.decode(keyVal);\n          break;\n        case typeFields_1.OutputTypes.TAP_TREE:\n          checkKeyBuffer(\n            'output',\n            keyVal.key,\n            typeFields_1.OutputTypes.TAP_TREE,\n          );\n          output.tapTree = convert.outputs.tapTree.decode(keyVal);\n          break;\n        case typeFields_1.OutputTypes.TAP_BIP32_DERIVATION:\n          if (output.tapBip32Derivation === undefined) {\n            output.tapBip32Derivation = [];\n          }\n          output.tapBip32Derivation.push(\n            convert.outputs.tapBip32Derivation.decode(keyVal),\n          );\n          break;\n        default:\n          if (!output.unknownKeyVals) output.unknownKeyVals = [];\n          output.unknownKeyVals.push(keyVal);\n      }\n    }\n    outputs.push(output);\n  }\n  return { globalMap, inputs, outputs };\n}\nexports.psbtFromKeyVals = psbtFromKeyVals;\n","'use strict';\nfunction __export(m) {\n  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, '__esModule', { value: true });\n__export(require('./fromBuffer'));\n__export(require('./toBuffer'));\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst convert = require('../converter');\nconst tools_1 = require('../converter/tools');\nfunction psbtToBuffer({ globalMap, inputs, outputs }) {\n  const { globalKeyVals, inputKeyVals, outputKeyVals } = psbtToKeyVals({\n    globalMap,\n    inputs,\n    outputs,\n  });\n  const globalBuffer = tools_1.keyValsToBuffer(globalKeyVals);\n  const keyValsOrEmptyToBuffer = keyVals =>\n    keyVals.length === 0\n      ? [Buffer.from([0])]\n      : keyVals.map(tools_1.keyValsToBuffer);\n  const inputBuffers = keyValsOrEmptyToBuffer(inputKeyVals);\n  const outputBuffers = keyValsOrEmptyToBuffer(outputKeyVals);\n  const header = Buffer.allocUnsafe(5);\n  header.writeUIntBE(0x70736274ff, 0, 5);\n  return Buffer.concat(\n    [header, globalBuffer].concat(inputBuffers, outputBuffers),\n  );\n}\nexports.psbtToBuffer = psbtToBuffer;\nconst sortKeyVals = (a, b) => {\n  return a.key.compare(b.key);\n};\nfunction keyValsFromMap(keyValMap, converterFactory) {\n  const keyHexSet = new Set();\n  const keyVals = Object.entries(keyValMap).reduce((result, [key, value]) => {\n    if (key === 'unknownKeyVals') return result;\n    // We are checking for undefined anyways. So ignore TS error\n    // @ts-ignore\n    const converter = converterFactory[key];\n    if (converter === undefined) return result;\n    const encodedKeyVals = (Array.isArray(value) ? value : [value]).map(\n      converter.encode,\n    );\n    const keyHexes = encodedKeyVals.map(kv => kv.key.toString('hex'));\n    keyHexes.forEach(hex => {\n      if (keyHexSet.has(hex))\n        throw new Error('Serialize Error: Duplicate key: ' + hex);\n      keyHexSet.add(hex);\n    });\n    return result.concat(encodedKeyVals);\n  }, []);\n  // Get other keyVals that have not yet been gotten\n  const otherKeyVals = keyValMap.unknownKeyVals\n    ? keyValMap.unknownKeyVals.filter(keyVal => {\n        return !keyHexSet.has(keyVal.key.toString('hex'));\n      })\n    : [];\n  return keyVals.concat(otherKeyVals).sort(sortKeyVals);\n}\nfunction psbtToKeyVals({ globalMap, inputs, outputs }) {\n  // First parse the global keyVals\n  // Get any extra keyvals to pass along\n  return {\n    globalKeyVals: keyValsFromMap(globalMap, convert.globals),\n    inputKeyVals: inputs.map(i => keyValsFromMap(i, convert.inputs)),\n    outputKeyVals: outputs.map(o => keyValsFromMap(o, convert.outputs)),\n  };\n}\nexports.psbtToKeyVals = psbtToKeyVals;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst combiner_1 = require('./combiner');\nconst parser_1 = require('./parser');\nconst typeFields_1 = require('./typeFields');\nconst utils_1 = require('./utils');\nclass Psbt {\n  constructor(tx) {\n    this.inputs = [];\n    this.outputs = [];\n    this.globalMap = {\n      unsignedTx: tx,\n    };\n  }\n  static fromBase64(data, txFromBuffer) {\n    const buffer = Buffer.from(data, 'base64');\n    return this.fromBuffer(buffer, txFromBuffer);\n  }\n  static fromHex(data, txFromBuffer) {\n    const buffer = Buffer.from(data, 'hex');\n    return this.fromBuffer(buffer, txFromBuffer);\n  }\n  static fromBuffer(buffer, txFromBuffer) {\n    const results = parser_1.psbtFromBuffer(buffer, txFromBuffer);\n    const psbt = new this(results.globalMap.unsignedTx);\n    Object.assign(psbt, results);\n    return psbt;\n  }\n  toBase64() {\n    const buffer = this.toBuffer();\n    return buffer.toString('base64');\n  }\n  toHex() {\n    const buffer = this.toBuffer();\n    return buffer.toString('hex');\n  }\n  toBuffer() {\n    return parser_1.psbtToBuffer(this);\n  }\n  updateGlobal(updateData) {\n    utils_1.updateGlobal(updateData, this.globalMap);\n    return this;\n  }\n  updateInput(inputIndex, updateData) {\n    const input = utils_1.checkForInput(this.inputs, inputIndex);\n    utils_1.updateInput(updateData, input);\n    return this;\n  }\n  updateOutput(outputIndex, updateData) {\n    const output = utils_1.checkForOutput(this.outputs, outputIndex);\n    utils_1.updateOutput(updateData, output);\n    return this;\n  }\n  addUnknownKeyValToGlobal(keyVal) {\n    utils_1.checkHasKey(\n      keyVal,\n      this.globalMap.unknownKeyVals,\n      utils_1.getEnumLength(typeFields_1.GlobalTypes),\n    );\n    if (!this.globalMap.unknownKeyVals) this.globalMap.unknownKeyVals = [];\n    this.globalMap.unknownKeyVals.push(keyVal);\n    return this;\n  }\n  addUnknownKeyValToInput(inputIndex, keyVal) {\n    const input = utils_1.checkForInput(this.inputs, inputIndex);\n    utils_1.checkHasKey(\n      keyVal,\n      input.unknownKeyVals,\n      utils_1.getEnumLength(typeFields_1.InputTypes),\n    );\n    if (!input.unknownKeyVals) input.unknownKeyVals = [];\n    input.unknownKeyVals.push(keyVal);\n    return this;\n  }\n  addUnknownKeyValToOutput(outputIndex, keyVal) {\n    const output = utils_1.checkForOutput(this.outputs, outputIndex);\n    utils_1.checkHasKey(\n      keyVal,\n      output.unknownKeyVals,\n      utils_1.getEnumLength(typeFields_1.OutputTypes),\n    );\n    if (!output.unknownKeyVals) output.unknownKeyVals = [];\n    output.unknownKeyVals.push(keyVal);\n    return this;\n  }\n  addInput(inputData) {\n    this.globalMap.unsignedTx.addInput(inputData);\n    this.inputs.push({\n      unknownKeyVals: [],\n    });\n    const addKeyVals = inputData.unknownKeyVals || [];\n    const inputIndex = this.inputs.length - 1;\n    if (!Array.isArray(addKeyVals)) {\n      throw new Error('unknownKeyVals must be an Array');\n    }\n    addKeyVals.forEach(keyVal =>\n      this.addUnknownKeyValToInput(inputIndex, keyVal),\n    );\n    utils_1.addInputAttributes(this.inputs, inputData);\n    return this;\n  }\n  addOutput(outputData) {\n    this.globalMap.unsignedTx.addOutput(outputData);\n    this.outputs.push({\n      unknownKeyVals: [],\n    });\n    const addKeyVals = outputData.unknownKeyVals || [];\n    const outputIndex = this.outputs.length - 1;\n    if (!Array.isArray(addKeyVals)) {\n      throw new Error('unknownKeyVals must be an Array');\n    }\n    addKeyVals.forEach(keyVal =>\n      this.addUnknownKeyValToInput(outputIndex, keyVal),\n    );\n    utils_1.addOutputAttributes(this.outputs, outputData);\n    return this;\n  }\n  clearFinalizedInput(inputIndex) {\n    const input = utils_1.checkForInput(this.inputs, inputIndex);\n    utils_1.inputCheckUncleanFinalized(inputIndex, input);\n    for (const key of Object.keys(input)) {\n      if (\n        ![\n          'witnessUtxo',\n          'nonWitnessUtxo',\n          'finalScriptSig',\n          'finalScriptWitness',\n          'unknownKeyVals',\n        ].includes(key)\n      ) {\n        // @ts-ignore\n        delete input[key];\n      }\n    }\n    return this;\n  }\n  combine(...those) {\n    // Combine this with those.\n    // Return self for chaining.\n    const result = combiner_1.combine([this].concat(those));\n    Object.assign(this, result);\n    return this;\n  }\n  getTransaction() {\n    return this.globalMap.unsignedTx.toBuffer();\n  }\n}\nexports.Psbt = Psbt;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar GlobalTypes;\n(function(GlobalTypes) {\n  GlobalTypes[(GlobalTypes['UNSIGNED_TX'] = 0)] = 'UNSIGNED_TX';\n  GlobalTypes[(GlobalTypes['GLOBAL_XPUB'] = 1)] = 'GLOBAL_XPUB';\n})((GlobalTypes = exports.GlobalTypes || (exports.GlobalTypes = {})));\nexports.GLOBAL_TYPE_NAMES = ['unsignedTx', 'globalXpub'];\nvar InputTypes;\n(function(InputTypes) {\n  InputTypes[(InputTypes['NON_WITNESS_UTXO'] = 0)] = 'NON_WITNESS_UTXO';\n  InputTypes[(InputTypes['WITNESS_UTXO'] = 1)] = 'WITNESS_UTXO';\n  InputTypes[(InputTypes['PARTIAL_SIG'] = 2)] = 'PARTIAL_SIG';\n  InputTypes[(InputTypes['SIGHASH_TYPE'] = 3)] = 'SIGHASH_TYPE';\n  InputTypes[(InputTypes['REDEEM_SCRIPT'] = 4)] = 'REDEEM_SCRIPT';\n  InputTypes[(InputTypes['WITNESS_SCRIPT'] = 5)] = 'WITNESS_SCRIPT';\n  InputTypes[(InputTypes['BIP32_DERIVATION'] = 6)] = 'BIP32_DERIVATION';\n  InputTypes[(InputTypes['FINAL_SCRIPTSIG'] = 7)] = 'FINAL_SCRIPTSIG';\n  InputTypes[(InputTypes['FINAL_SCRIPTWITNESS'] = 8)] = 'FINAL_SCRIPTWITNESS';\n  InputTypes[(InputTypes['POR_COMMITMENT'] = 9)] = 'POR_COMMITMENT';\n  InputTypes[(InputTypes['TAP_KEY_SIG'] = 19)] = 'TAP_KEY_SIG';\n  InputTypes[(InputTypes['TAP_SCRIPT_SIG'] = 20)] = 'TAP_SCRIPT_SIG';\n  InputTypes[(InputTypes['TAP_LEAF_SCRIPT'] = 21)] = 'TAP_LEAF_SCRIPT';\n  InputTypes[(InputTypes['TAP_BIP32_DERIVATION'] = 22)] =\n    'TAP_BIP32_DERIVATION';\n  InputTypes[(InputTypes['TAP_INTERNAL_KEY'] = 23)] = 'TAP_INTERNAL_KEY';\n  InputTypes[(InputTypes['TAP_MERKLE_ROOT'] = 24)] = 'TAP_MERKLE_ROOT';\n})((InputTypes = exports.InputTypes || (exports.InputTypes = {})));\nexports.INPUT_TYPE_NAMES = [\n  'nonWitnessUtxo',\n  'witnessUtxo',\n  'partialSig',\n  'sighashType',\n  'redeemScript',\n  'witnessScript',\n  'bip32Derivation',\n  'finalScriptSig',\n  'finalScriptWitness',\n  'porCommitment',\n  'tapKeySig',\n  'tapScriptSig',\n  'tapLeafScript',\n  'tapBip32Derivation',\n  'tapInternalKey',\n  'tapMerkleRoot',\n];\nvar OutputTypes;\n(function(OutputTypes) {\n  OutputTypes[(OutputTypes['REDEEM_SCRIPT'] = 0)] = 'REDEEM_SCRIPT';\n  OutputTypes[(OutputTypes['WITNESS_SCRIPT'] = 1)] = 'WITNESS_SCRIPT';\n  OutputTypes[(OutputTypes['BIP32_DERIVATION'] = 2)] = 'BIP32_DERIVATION';\n  OutputTypes[(OutputTypes['TAP_INTERNAL_KEY'] = 5)] = 'TAP_INTERNAL_KEY';\n  OutputTypes[(OutputTypes['TAP_TREE'] = 6)] = 'TAP_TREE';\n  OutputTypes[(OutputTypes['TAP_BIP32_DERIVATION'] = 7)] =\n    'TAP_BIP32_DERIVATION';\n})((OutputTypes = exports.OutputTypes || (exports.OutputTypes = {})));\nexports.OUTPUT_TYPE_NAMES = [\n  'redeemScript',\n  'witnessScript',\n  'bip32Derivation',\n  'tapInternalKey',\n  'tapTree',\n  'tapBip32Derivation',\n];\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst converter = require('./converter');\nfunction checkForInput(inputs, inputIndex) {\n  const input = inputs[inputIndex];\n  if (input === undefined) throw new Error(`No input #${inputIndex}`);\n  return input;\n}\nexports.checkForInput = checkForInput;\nfunction checkForOutput(outputs, outputIndex) {\n  const output = outputs[outputIndex];\n  if (output === undefined) throw new Error(`No output #${outputIndex}`);\n  return output;\n}\nexports.checkForOutput = checkForOutput;\nfunction checkHasKey(checkKeyVal, keyVals, enumLength) {\n  if (checkKeyVal.key[0] < enumLength) {\n    throw new Error(\n      `Use the method for your specific key instead of addUnknownKeyVal*`,\n    );\n  }\n  if (\n    keyVals &&\n    keyVals.filter(kv => kv.key.equals(checkKeyVal.key)).length !== 0\n  ) {\n    throw new Error(`Duplicate Key: ${checkKeyVal.key.toString('hex')}`);\n  }\n}\nexports.checkHasKey = checkHasKey;\nfunction getEnumLength(myenum) {\n  let count = 0;\n  Object.keys(myenum).forEach(val => {\n    if (Number(isNaN(Number(val)))) {\n      count++;\n    }\n  });\n  return count;\n}\nexports.getEnumLength = getEnumLength;\nfunction inputCheckUncleanFinalized(inputIndex, input) {\n  let result = false;\n  if (input.nonWitnessUtxo || input.witnessUtxo) {\n    const needScriptSig = !!input.redeemScript;\n    const needWitnessScript = !!input.witnessScript;\n    const scriptSigOK = !needScriptSig || !!input.finalScriptSig;\n    const witnessScriptOK = !needWitnessScript || !!input.finalScriptWitness;\n    const hasOneFinal = !!input.finalScriptSig || !!input.finalScriptWitness;\n    result = scriptSigOK && witnessScriptOK && hasOneFinal;\n  }\n  if (result === false) {\n    throw new Error(\n      `Input #${inputIndex} has too much or too little data to clean`,\n    );\n  }\n}\nexports.inputCheckUncleanFinalized = inputCheckUncleanFinalized;\nfunction throwForUpdateMaker(typeName, name, expected, data) {\n  throw new Error(\n    `Data for ${typeName} key ${name} is incorrect: Expected ` +\n      `${expected} and got ${JSON.stringify(data)}`,\n  );\n}\nfunction updateMaker(typeName) {\n  return (updateData, mainData) => {\n    for (const name of Object.keys(updateData)) {\n      // @ts-ignore\n      const data = updateData[name];\n      // @ts-ignore\n      const { canAdd, canAddToArray, check, expected } =\n        // @ts-ignore\n        converter[typeName + 's'][name] || {};\n      const isArray = !!canAddToArray;\n      // If unknown data. ignore and do not add\n      if (check) {\n        if (isArray) {\n          if (\n            !Array.isArray(data) ||\n            // @ts-ignore\n            (mainData[name] && !Array.isArray(mainData[name]))\n          ) {\n            throw new Error(`Key type ${name} must be an array`);\n          }\n          if (!data.every(check)) {\n            throwForUpdateMaker(typeName, name, expected, data);\n          }\n          // @ts-ignore\n          const arr = mainData[name] || [];\n          const dupeCheckSet = new Set();\n          if (!data.every(v => canAddToArray(arr, v, dupeCheckSet))) {\n            throw new Error('Can not add duplicate data to array');\n          }\n          // @ts-ignore\n          mainData[name] = arr.concat(data);\n        } else {\n          if (!check(data)) {\n            throwForUpdateMaker(typeName, name, expected, data);\n          }\n          if (!canAdd(mainData, data)) {\n            throw new Error(`Can not add duplicate data to ${typeName}`);\n          }\n          // @ts-ignore\n          mainData[name] = data;\n        }\n      }\n    }\n  };\n}\nexports.updateGlobal = updateMaker('global');\nexports.updateInput = updateMaker('input');\nexports.updateOutput = updateMaker('output');\nfunction addInputAttributes(inputs, data) {\n  const index = inputs.length - 1;\n  const input = checkForInput(inputs, index);\n  exports.updateInput(data, input);\n}\nexports.addInputAttributes = addInputAttributes;\nfunction addOutputAttributes(outputs, data) {\n  const index = outputs.length - 1;\n  const output = checkForOutput(outputs, index);\n  exports.updateOutput(data, output);\n}\nexports.addOutputAttributes = addOutputAttributes;\nfunction defaultVersionSetter(version, txBuf) {\n  if (!Buffer.isBuffer(txBuf) || txBuf.length < 4) {\n    throw new Error('Set Version: Invalid Transaction');\n  }\n  txBuf.writeUInt32LE(version, 0);\n  return txBuf;\n}\nexports.defaultVersionSetter = defaultVersionSetter;\nfunction defaultLocktimeSetter(locktime, txBuf) {\n  if (!Buffer.isBuffer(txBuf) || txBuf.length < 4) {\n    throw new Error('Set Locktime: Invalid Transaction');\n  }\n  txBuf.writeUInt32LE(locktime, txBuf.length - 4);\n  return txBuf;\n}\nexports.defaultLocktimeSetter = defaultLocktimeSetter;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.toOutputScript = exports.fromOutputScript = exports.toBech32 = exports.toBase58Check = exports.fromBech32 = exports.fromBase58Check = void 0;\nconst networks = require('./networks');\nconst payments = require('./payments');\nconst bscript = require('./script');\nconst types = require('./types');\nconst bech32_1 = require('bech32');\nconst bs58check = require('bs58check');\nconst { typeforce } = types;\nconst FUTURE_SEGWIT_MAX_SIZE = 40;\nconst FUTURE_SEGWIT_MIN_SIZE = 2;\nconst FUTURE_SEGWIT_MAX_VERSION = 16;\nconst FUTURE_SEGWIT_MIN_VERSION = 1;\nconst FUTURE_SEGWIT_VERSION_DIFF = 0x50;\nconst FUTURE_SEGWIT_VERSION_WARNING =\n  'WARNING: Sending to a future segwit version address can lead to loss of funds. ' +\n  'End users MUST be warned carefully in the GUI and asked if they wish to proceed ' +\n  'with caution. Wallets should verify the segwit version from the output of fromBech32, ' +\n  'then decide when it is safe to use which version of segwit.';\nfunction _toFutureSegwitAddress(output, network) {\n  const data = output.slice(2);\n  if (\n    data.length < FUTURE_SEGWIT_MIN_SIZE ||\n    data.length > FUTURE_SEGWIT_MAX_SIZE\n  )\n    throw new TypeError('Invalid program length for segwit address');\n  const version = output[0] - FUTURE_SEGWIT_VERSION_DIFF;\n  if (\n    version < FUTURE_SEGWIT_MIN_VERSION ||\n    version > FUTURE_SEGWIT_MAX_VERSION\n  )\n    throw new TypeError('Invalid version for segwit address');\n  if (output[1] !== data.length)\n    throw new TypeError('Invalid script for segwit address');\n  console.warn(FUTURE_SEGWIT_VERSION_WARNING);\n  return toBech32(data, version, network.bech32);\n}\nfunction fromBase58Check(address) {\n  const payload = bs58check.decode(address);\n  // TODO: 4.0.0, move to \"toOutputScript\"\n  if (payload.length < 21) throw new TypeError(address + ' is too short');\n  if (payload.length > 21) throw new TypeError(address + ' is too long');\n  const version = payload.readUInt8(0);\n  const hash = payload.slice(1);\n  return { version, hash };\n}\nexports.fromBase58Check = fromBase58Check;\nfunction fromBech32(address) {\n  let result;\n  let version;\n  try {\n    result = bech32_1.bech32.decode(address);\n  } catch (e) {}\n  if (result) {\n    version = result.words[0];\n    if (version !== 0) throw new TypeError(address + ' uses wrong encoding');\n  } else {\n    result = bech32_1.bech32m.decode(address);\n    version = result.words[0];\n    if (version === 0) throw new TypeError(address + ' uses wrong encoding');\n  }\n  const data = bech32_1.bech32.fromWords(result.words.slice(1));\n  return {\n    version,\n    prefix: result.prefix,\n    data: Buffer.from(data),\n  };\n}\nexports.fromBech32 = fromBech32;\nfunction toBase58Check(hash, version) {\n  typeforce(types.tuple(types.Hash160bit, types.UInt8), arguments);\n  const payload = Buffer.allocUnsafe(21);\n  payload.writeUInt8(version, 0);\n  hash.copy(payload, 1);\n  return bs58check.encode(payload);\n}\nexports.toBase58Check = toBase58Check;\nfunction toBech32(data, version, prefix) {\n  const words = bech32_1.bech32.toWords(data);\n  words.unshift(version);\n  return version === 0\n    ? bech32_1.bech32.encode(prefix, words)\n    : bech32_1.bech32m.encode(prefix, words);\n}\nexports.toBech32 = toBech32;\nfunction fromOutputScript(output, network) {\n  // TODO: Network\n  network = network || networks.bitcoin;\n  try {\n    return payments.p2pkh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return payments.p2sh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return payments.p2wpkh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return payments.p2wsh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return _toFutureSegwitAddress(output, network);\n  } catch (e) {}\n  throw new Error(bscript.toASM(output) + ' has no matching Address');\n}\nexports.fromOutputScript = fromOutputScript;\nfunction toOutputScript(address, network) {\n  network = network || networks.bitcoin;\n  let decodeBase58;\n  let decodeBech32;\n  try {\n    decodeBase58 = fromBase58Check(address);\n  } catch (e) {}\n  if (decodeBase58) {\n    if (decodeBase58.version === network.pubKeyHash)\n      return payments.p2pkh({ hash: decodeBase58.hash }).output;\n    if (decodeBase58.version === network.scriptHash)\n      return payments.p2sh({ hash: decodeBase58.hash }).output;\n  } else {\n    try {\n      decodeBech32 = fromBech32(address);\n    } catch (e) {}\n    if (decodeBech32) {\n      if (decodeBech32.prefix !== network.bech32)\n        throw new Error(address + ' has an invalid prefix');\n      if (decodeBech32.version === 0) {\n        if (decodeBech32.data.length === 20)\n          return payments.p2wpkh({ hash: decodeBech32.data }).output;\n        if (decodeBech32.data.length === 32)\n          return payments.p2wsh({ hash: decodeBech32.data }).output;\n      } else if (\n        decodeBech32.version >= FUTURE_SEGWIT_MIN_VERSION &&\n        decodeBech32.version <= FUTURE_SEGWIT_MAX_VERSION &&\n        decodeBech32.data.length >= FUTURE_SEGWIT_MIN_SIZE &&\n        decodeBech32.data.length <= FUTURE_SEGWIT_MAX_SIZE\n      ) {\n        console.warn(FUTURE_SEGWIT_VERSION_WARNING);\n        return bscript.compile([\n          decodeBech32.version + FUTURE_SEGWIT_VERSION_DIFF,\n          decodeBech32.data,\n        ]);\n      }\n    }\n  }\n  throw new Error(address + ' has no matching Script');\n}\nexports.toOutputScript = toOutputScript;\n","'use strict';\n// Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki\n// Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n// NOTE: SIGHASH byte ignored AND restricted, truncate before use\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.encode = exports.decode = exports.check = void 0;\nfunction check(buffer) {\n  if (buffer.length < 8) return false;\n  if (buffer.length > 72) return false;\n  if (buffer[0] !== 0x30) return false;\n  if (buffer[1] !== buffer.length - 2) return false;\n  if (buffer[2] !== 0x02) return false;\n  const lenR = buffer[3];\n  if (lenR === 0) return false;\n  if (5 + lenR >= buffer.length) return false;\n  if (buffer[4 + lenR] !== 0x02) return false;\n  const lenS = buffer[5 + lenR];\n  if (lenS === 0) return false;\n  if (6 + lenR + lenS !== buffer.length) return false;\n  if (buffer[4] & 0x80) return false;\n  if (lenR > 1 && buffer[4] === 0x00 && !(buffer[5] & 0x80)) return false;\n  if (buffer[lenR + 6] & 0x80) return false;\n  if (lenS > 1 && buffer[lenR + 6] === 0x00 && !(buffer[lenR + 7] & 0x80))\n    return false;\n  return true;\n}\nexports.check = check;\nfunction decode(buffer) {\n  if (buffer.length < 8) throw new Error('DER sequence length is too short');\n  if (buffer.length > 72) throw new Error('DER sequence length is too long');\n  if (buffer[0] !== 0x30) throw new Error('Expected DER sequence');\n  if (buffer[1] !== buffer.length - 2)\n    throw new Error('DER sequence length is invalid');\n  if (buffer[2] !== 0x02) throw new Error('Expected DER integer');\n  const lenR = buffer[3];\n  if (lenR === 0) throw new Error('R length is zero');\n  if (5 + lenR >= buffer.length) throw new Error('R length is too long');\n  if (buffer[4 + lenR] !== 0x02) throw new Error('Expected DER integer (2)');\n  const lenS = buffer[5 + lenR];\n  if (lenS === 0) throw new Error('S length is zero');\n  if (6 + lenR + lenS !== buffer.length) throw new Error('S length is invalid');\n  if (buffer[4] & 0x80) throw new Error('R value is negative');\n  if (lenR > 1 && buffer[4] === 0x00 && !(buffer[5] & 0x80))\n    throw new Error('R value excessively padded');\n  if (buffer[lenR + 6] & 0x80) throw new Error('S value is negative');\n  if (lenS > 1 && buffer[lenR + 6] === 0x00 && !(buffer[lenR + 7] & 0x80))\n    throw new Error('S value excessively padded');\n  // non-BIP66 - extract R, S values\n  return {\n    r: buffer.slice(4, 4 + lenR),\n    s: buffer.slice(6 + lenR),\n  };\n}\nexports.decode = decode;\n/*\n * Expects r and s to be positive DER integers.\n *\n * The DER format uses the most significant bit as a sign bit (& 0x80).\n * If the significant bit is set AND the integer is positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n */\nfunction encode(r, s) {\n  const lenR = r.length;\n  const lenS = s.length;\n  if (lenR === 0) throw new Error('R length is zero');\n  if (lenS === 0) throw new Error('S length is zero');\n  if (lenR > 33) throw new Error('R length is too long');\n  if (lenS > 33) throw new Error('S length is too long');\n  if (r[0] & 0x80) throw new Error('R value is negative');\n  if (s[0] & 0x80) throw new Error('S value is negative');\n  if (lenR > 1 && r[0] === 0x00 && !(r[1] & 0x80))\n    throw new Error('R value excessively padded');\n  if (lenS > 1 && s[0] === 0x00 && !(s[1] & 0x80))\n    throw new Error('S value excessively padded');\n  const signature = Buffer.allocUnsafe(6 + lenR + lenS);\n  // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n  signature[0] = 0x30;\n  signature[1] = signature.length - 2;\n  signature[2] = 0x02;\n  signature[3] = r.length;\n  r.copy(signature, 4);\n  signature[4 + lenR] = 0x02;\n  signature[5 + lenR] = s.length;\n  s.copy(signature, 6 + lenR);\n  return signature;\n}\nexports.encode = encode;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.Block = void 0;\nconst bufferutils_1 = require('./bufferutils');\nconst bcrypto = require('./crypto');\nconst merkle_1 = require('./merkle');\nconst transaction_1 = require('./transaction');\nconst types = require('./types');\nconst { typeforce } = types;\nconst errorMerkleNoTxes = new TypeError(\n  'Cannot compute merkle root for zero transactions',\n);\nconst errorWitnessNotSegwit = new TypeError(\n  'Cannot compute witness commit for non-segwit block',\n);\nclass Block {\n  constructor() {\n    this.version = 1;\n    this.prevHash = undefined;\n    this.merkleRoot = undefined;\n    this.timestamp = 0;\n    this.witnessCommit = undefined;\n    this.bits = 0;\n    this.nonce = 0;\n    this.transactions = undefined;\n  }\n  static fromBuffer(buffer) {\n    if (buffer.length < 80) throw new Error('Buffer too small (< 80 bytes)');\n    const bufferReader = new bufferutils_1.BufferReader(buffer);\n    const block = new Block();\n    block.version = bufferReader.readInt32();\n    block.prevHash = bufferReader.readSlice(32);\n    block.merkleRoot = bufferReader.readSlice(32);\n    block.timestamp = bufferReader.readUInt32();\n    block.bits = bufferReader.readUInt32();\n    block.nonce = bufferReader.readUInt32();\n    if (buffer.length === 80) return block;\n    const readTransaction = () => {\n      const tx = transaction_1.Transaction.fromBuffer(\n        bufferReader.buffer.slice(bufferReader.offset),\n        true,\n      );\n      bufferReader.offset += tx.byteLength();\n      return tx;\n    };\n    const nTransactions = bufferReader.readVarInt();\n    block.transactions = [];\n    for (let i = 0; i < nTransactions; ++i) {\n      const tx = readTransaction();\n      block.transactions.push(tx);\n    }\n    const witnessCommit = block.getWitnessCommit();\n    // This Block contains a witness commit\n    if (witnessCommit) block.witnessCommit = witnessCommit;\n    return block;\n  }\n  static fromHex(hex) {\n    return Block.fromBuffer(Buffer.from(hex, 'hex'));\n  }\n  static calculateTarget(bits) {\n    const exponent = ((bits & 0xff000000) >> 24) - 3;\n    const mantissa = bits & 0x007fffff;\n    const target = Buffer.alloc(32, 0);\n    target.writeUIntBE(mantissa, 29 - exponent, 3);\n    return target;\n  }\n  static calculateMerkleRoot(transactions, forWitness) {\n    typeforce([{ getHash: types.Function }], transactions);\n    if (transactions.length === 0) throw errorMerkleNoTxes;\n    if (forWitness && !txesHaveWitnessCommit(transactions))\n      throw errorWitnessNotSegwit;\n    const hashes = transactions.map(transaction =>\n      transaction.getHash(forWitness),\n    );\n    const rootHash = (0, merkle_1.fastMerkleRoot)(hashes, bcrypto.hash256);\n    return forWitness\n      ? bcrypto.hash256(\n          Buffer.concat([rootHash, transactions[0].ins[0].witness[0]]),\n        )\n      : rootHash;\n  }\n  getWitnessCommit() {\n    if (!txesHaveWitnessCommit(this.transactions)) return null;\n    // The merkle root for the witness data is in an OP_RETURN output.\n    // There is no rule for the index of the output, so use filter to find it.\n    // The root is prepended with 0xaa21a9ed so check for 0x6a24aa21a9ed\n    // If multiple commits are found, the output with highest index is assumed.\n    const witnessCommits = this.transactions[0].outs\n      .filter(out =>\n        out.script.slice(0, 6).equals(Buffer.from('6a24aa21a9ed', 'hex')),\n      )\n      .map(out => out.script.slice(6, 38));\n    if (witnessCommits.length === 0) return null;\n    // Use the commit with the highest output (should only be one though)\n    const result = witnessCommits[witnessCommits.length - 1];\n    if (!(result instanceof Buffer && result.length === 32)) return null;\n    return result;\n  }\n  hasWitnessCommit() {\n    if (\n      this.witnessCommit instanceof Buffer &&\n      this.witnessCommit.length === 32\n    )\n      return true;\n    if (this.getWitnessCommit() !== null) return true;\n    return false;\n  }\n  hasWitness() {\n    return anyTxHasWitness(this.transactions);\n  }\n  weight() {\n    const base = this.byteLength(false, false);\n    const total = this.byteLength(false, true);\n    return base * 3 + total;\n  }\n  byteLength(headersOnly, allowWitness = true) {\n    if (headersOnly || !this.transactions) return 80;\n    return (\n      80 +\n      bufferutils_1.varuint.encodingLength(this.transactions.length) +\n      this.transactions.reduce((a, x) => a + x.byteLength(allowWitness), 0)\n    );\n  }\n  getHash() {\n    return bcrypto.hash256(this.toBuffer(true));\n  }\n  getId() {\n    return (0, bufferutils_1.reverseBuffer)(this.getHash()).toString('hex');\n  }\n  getUTCDate() {\n    const date = new Date(0); // epoch\n    date.setUTCSeconds(this.timestamp);\n    return date;\n  }\n  // TODO: buffer, offset compatibility\n  toBuffer(headersOnly) {\n    const buffer = Buffer.allocUnsafe(this.byteLength(headersOnly));\n    const bufferWriter = new bufferutils_1.BufferWriter(buffer);\n    bufferWriter.writeInt32(this.version);\n    bufferWriter.writeSlice(this.prevHash);\n    bufferWriter.writeSlice(this.merkleRoot);\n    bufferWriter.writeUInt32(this.timestamp);\n    bufferWriter.writeUInt32(this.bits);\n    bufferWriter.writeUInt32(this.nonce);\n    if (headersOnly || !this.transactions) return buffer;\n    bufferutils_1.varuint.encode(\n      this.transactions.length,\n      buffer,\n      bufferWriter.offset,\n    );\n    bufferWriter.offset += bufferutils_1.varuint.encode.bytes;\n    this.transactions.forEach(tx => {\n      const txSize = tx.byteLength(); // TODO: extract from toBuffer?\n      tx.toBuffer(buffer, bufferWriter.offset);\n      bufferWriter.offset += txSize;\n    });\n    return buffer;\n  }\n  toHex(headersOnly) {\n    return this.toBuffer(headersOnly).toString('hex');\n  }\n  checkTxRoots() {\n    // If the Block has segwit transactions but no witness commit,\n    // there's no way it can be valid, so fail the check.\n    const hasWitnessCommit = this.hasWitnessCommit();\n    if (!hasWitnessCommit && this.hasWitness()) return false;\n    return (\n      this.__checkMerkleRoot() &&\n      (hasWitnessCommit ? this.__checkWitnessCommit() : true)\n    );\n  }\n  checkProofOfWork() {\n    const hash = (0, bufferutils_1.reverseBuffer)(this.getHash());\n    const target = Block.calculateTarget(this.bits);\n    return hash.compare(target) <= 0;\n  }\n  __checkMerkleRoot() {\n    if (!this.transactions) throw errorMerkleNoTxes;\n    const actualMerkleRoot = Block.calculateMerkleRoot(this.transactions);\n    return this.merkleRoot.compare(actualMerkleRoot) === 0;\n  }\n  __checkWitnessCommit() {\n    if (!this.transactions) throw errorMerkleNoTxes;\n    if (!this.hasWitnessCommit()) throw errorWitnessNotSegwit;\n    const actualWitnessCommit = Block.calculateMerkleRoot(\n      this.transactions,\n      true,\n    );\n    return this.witnessCommit.compare(actualWitnessCommit) === 0;\n  }\n}\nexports.Block = Block;\nfunction txesHaveWitnessCommit(transactions) {\n  return (\n    transactions instanceof Array &&\n    transactions[0] &&\n    transactions[0].ins &&\n    transactions[0].ins instanceof Array &&\n    transactions[0].ins[0] &&\n    transactions[0].ins[0].witness &&\n    transactions[0].ins[0].witness instanceof Array &&\n    transactions[0].ins[0].witness.length > 0\n  );\n}\nfunction anyTxHasWitness(transactions) {\n  return (\n    transactions instanceof Array &&\n    transactions.some(\n      tx =>\n        typeof tx === 'object' &&\n        tx.ins instanceof Array &&\n        tx.ins.some(\n          input =>\n            typeof input === 'object' &&\n            input.witness instanceof Array &&\n            input.witness.length > 0,\n        ),\n    )\n  );\n}\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.BufferReader = exports.BufferWriter = exports.cloneBuffer = exports.reverseBuffer = exports.writeUInt64LE = exports.readUInt64LE = exports.varuint = void 0;\nconst types = require('./types');\nconst { typeforce } = types;\nconst varuint = require('varuint-bitcoin');\nexports.varuint = varuint;\n// https://github.com/feross/buffer/blob/master/index.js#L1127\nfunction verifuint(value, max) {\n  if (typeof value !== 'number')\n    throw new Error('cannot write a non-number as a number');\n  if (value < 0)\n    throw new Error('specified a negative value for writing an unsigned value');\n  if (value > max) throw new Error('RangeError: value out of range');\n  if (Math.floor(value) !== value)\n    throw new Error('value has a fractional component');\n}\nfunction readUInt64LE(buffer, offset) {\n  const a = buffer.readUInt32LE(offset);\n  let b = buffer.readUInt32LE(offset + 4);\n  b *= 0x100000000;\n  verifuint(b + a, 0x001fffffffffffff);\n  return b + a;\n}\nexports.readUInt64LE = readUInt64LE;\nfunction writeUInt64LE(buffer, value, offset) {\n  verifuint(value, 0x001fffffffffffff);\n  buffer.writeInt32LE(value & -1, offset);\n  buffer.writeUInt32LE(Math.floor(value / 0x100000000), offset + 4);\n  return offset + 8;\n}\nexports.writeUInt64LE = writeUInt64LE;\nfunction reverseBuffer(buffer) {\n  if (buffer.length < 1) return buffer;\n  let j = buffer.length - 1;\n  let tmp = 0;\n  for (let i = 0; i < buffer.length / 2; i++) {\n    tmp = buffer[i];\n    buffer[i] = buffer[j];\n    buffer[j] = tmp;\n    j--;\n  }\n  return buffer;\n}\nexports.reverseBuffer = reverseBuffer;\nfunction cloneBuffer(buffer) {\n  const clone = Buffer.allocUnsafe(buffer.length);\n  buffer.copy(clone);\n  return clone;\n}\nexports.cloneBuffer = cloneBuffer;\n/**\n * Helper class for serialization of bitcoin data types into a pre-allocated buffer.\n */\nclass BufferWriter {\n  constructor(buffer, offset = 0) {\n    this.buffer = buffer;\n    this.offset = offset;\n    typeforce(types.tuple(types.Buffer, types.UInt32), [buffer, offset]);\n  }\n  static withCapacity(size) {\n    return new BufferWriter(Buffer.alloc(size));\n  }\n  writeUInt8(i) {\n    this.offset = this.buffer.writeUInt8(i, this.offset);\n  }\n  writeInt32(i) {\n    this.offset = this.buffer.writeInt32LE(i, this.offset);\n  }\n  writeUInt32(i) {\n    this.offset = this.buffer.writeUInt32LE(i, this.offset);\n  }\n  writeUInt64(i) {\n    this.offset = writeUInt64LE(this.buffer, i, this.offset);\n  }\n  writeVarInt(i) {\n    varuint.encode(i, this.buffer, this.offset);\n    this.offset += varuint.encode.bytes;\n  }\n  writeSlice(slice) {\n    if (this.buffer.length < this.offset + slice.length) {\n      throw new Error('Cannot write slice out of bounds');\n    }\n    this.offset += slice.copy(this.buffer, this.offset);\n  }\n  writeVarSlice(slice) {\n    this.writeVarInt(slice.length);\n    this.writeSlice(slice);\n  }\n  writeVector(vector) {\n    this.writeVarInt(vector.length);\n    vector.forEach(buf => this.writeVarSlice(buf));\n  }\n  end() {\n    if (this.buffer.length === this.offset) {\n      return this.buffer;\n    }\n    throw new Error(`buffer size ${this.buffer.length}, offset ${this.offset}`);\n  }\n}\nexports.BufferWriter = BufferWriter;\n/**\n * Helper class for reading of bitcoin data types from a buffer.\n */\nclass BufferReader {\n  constructor(buffer, offset = 0) {\n    this.buffer = buffer;\n    this.offset = offset;\n    typeforce(types.tuple(types.Buffer, types.UInt32), [buffer, offset]);\n  }\n  readUInt8() {\n    const result = this.buffer.readUInt8(this.offset);\n    this.offset++;\n    return result;\n  }\n  readInt32() {\n    const result = this.buffer.readInt32LE(this.offset);\n    this.offset += 4;\n    return result;\n  }\n  readUInt32() {\n    const result = this.buffer.readUInt32LE(this.offset);\n    this.offset += 4;\n    return result;\n  }\n  readUInt64() {\n    const result = readUInt64LE(this.buffer, this.offset);\n    this.offset += 8;\n    return result;\n  }\n  readVarInt() {\n    const vi = varuint.decode(this.buffer, this.offset);\n    this.offset += varuint.decode.bytes;\n    return vi;\n  }\n  readSlice(n) {\n    if (this.buffer.length < this.offset + n) {\n      throw new Error('Cannot read slice out of bounds');\n    }\n    const result = this.buffer.slice(this.offset, this.offset + n);\n    this.offset += n;\n    return result;\n  }\n  readVarSlice() {\n    return this.readSlice(this.readVarInt());\n  }\n  readVector() {\n    const count = this.readVarInt();\n    const vector = [];\n    for (let i = 0; i < count; i++) vector.push(this.readVarSlice());\n    return vector;\n  }\n}\nexports.BufferReader = BufferReader;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.taggedHash = exports.hash256 = exports.hash160 = exports.sha256 = exports.sha1 = exports.ripemd160 = void 0;\nconst createHash = require('create-hash');\nfunction ripemd160(buffer) {\n  try {\n    return createHash('rmd160')\n      .update(buffer)\n      .digest();\n  } catch (err) {\n    return createHash('ripemd160')\n      .update(buffer)\n      .digest();\n  }\n}\nexports.ripemd160 = ripemd160;\nfunction sha1(buffer) {\n  return createHash('sha1')\n    .update(buffer)\n    .digest();\n}\nexports.sha1 = sha1;\nfunction sha256(buffer) {\n  return createHash('sha256')\n    .update(buffer)\n    .digest();\n}\nexports.sha256 = sha256;\nfunction hash160(buffer) {\n  return ripemd160(sha256(buffer));\n}\nexports.hash160 = hash160;\nfunction hash256(buffer) {\n  return sha256(sha256(buffer));\n}\nexports.hash256 = hash256;\nconst TAGS = [\n  'BIP0340/challenge',\n  'BIP0340/aux',\n  'BIP0340/nonce',\n  'TapLeaf',\n  'TapBranch',\n  'TapSighash',\n  'TapTweak',\n  'KeyAgg list',\n  'KeyAgg coefficient',\n];\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = Object.fromEntries(\n  TAGS.map(tag => {\n    const tagHash = sha256(Buffer.from(tag));\n    return [tag, Buffer.concat([tagHash, tagHash])];\n  }),\n);\nfunction taggedHash(prefix, data) {\n  return sha256(Buffer.concat([TAGGED_HASH_PREFIXES[prefix], data]));\n}\nexports.taggedHash = taggedHash;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.Transaction = exports.opcodes = exports.Psbt = exports.Block = exports.script = exports.payments = exports.networks = exports.crypto = exports.address = void 0;\nconst address = require('./address');\nexports.address = address;\nconst crypto = require('./crypto');\nexports.crypto = crypto;\nconst networks = require('./networks');\nexports.networks = networks;\nconst payments = require('./payments');\nexports.payments = payments;\nconst script = require('./script');\nexports.script = script;\nvar block_1 = require('./block');\nObject.defineProperty(exports, 'Block', {\n  enumerable: true,\n  get: function() {\n    return block_1.Block;\n  },\n});\nvar psbt_1 = require('./psbt');\nObject.defineProperty(exports, 'Psbt', {\n  enumerable: true,\n  get: function() {\n    return psbt_1.Psbt;\n  },\n});\nvar ops_1 = require('./ops');\nObject.defineProperty(exports, 'opcodes', {\n  enumerable: true,\n  get: function() {\n    return ops_1.OPS;\n  },\n});\nvar transaction_1 = require('./transaction');\nObject.defineProperty(exports, 'Transaction', {\n  enumerable: true,\n  get: function() {\n    return transaction_1.Transaction;\n  },\n});\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.fastMerkleRoot = void 0;\nfunction fastMerkleRoot(values, digestFn) {\n  if (!Array.isArray(values)) throw TypeError('Expected values Array');\n  if (typeof digestFn !== 'function')\n    throw TypeError('Expected digest Function');\n  let length = values.length;\n  const results = values.concat();\n  while (length > 1) {\n    let j = 0;\n    for (let i = 0; i < length; i += 2, ++j) {\n      const left = results[i];\n      const right = i + 1 === length ? left : results[i + 1];\n      const data = Buffer.concat([left, right]);\n      results[j] = digestFn(data);\n    }\n    length = j;\n  }\n  return results[0];\n}\nexports.fastMerkleRoot = fastMerkleRoot;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.testnet = exports.regtest = exports.bitcoin = void 0;\nexports.bitcoin = {\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  bech32: 'bc',\n  bip32: {\n    public: 0x0488b21e,\n    private: 0x0488ade4,\n  },\n  pubKeyHash: 0x00,\n  scriptHash: 0x05,\n  wif: 0x80,\n};\nexports.regtest = {\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  bech32: 'bcrt',\n  bip32: {\n    public: 0x043587cf,\n    private: 0x04358394,\n  },\n  pubKeyHash: 0x6f,\n  scriptHash: 0xc4,\n  wif: 0xef,\n};\nexports.testnet = {\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  bech32: 'tb',\n  bip32: {\n    public: 0x043587cf,\n    private: 0x04358394,\n  },\n  pubKeyHash: 0x6f,\n  scriptHash: 0xc4,\n  wif: 0xef,\n};\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.REVERSE_OPS = exports.OPS = void 0;\nconst OPS = {\n  OP_FALSE: 0,\n  OP_0: 0,\n  OP_PUSHDATA1: 76,\n  OP_PUSHDATA2: 77,\n  OP_PUSHDATA4: 78,\n  OP_1NEGATE: 79,\n  OP_RESERVED: 80,\n  OP_TRUE: 81,\n  OP_1: 81,\n  OP_2: 82,\n  OP_3: 83,\n  OP_4: 84,\n  OP_5: 85,\n  OP_6: 86,\n  OP_7: 87,\n  OP_8: 88,\n  OP_9: 89,\n  OP_10: 90,\n  OP_11: 91,\n  OP_12: 92,\n  OP_13: 93,\n  OP_14: 94,\n  OP_15: 95,\n  OP_16: 96,\n  OP_NOP: 97,\n  OP_VER: 98,\n  OP_IF: 99,\n  OP_NOTIF: 100,\n  OP_VERIF: 101,\n  OP_VERNOTIF: 102,\n  OP_ELSE: 103,\n  OP_ENDIF: 104,\n  OP_VERIFY: 105,\n  OP_RETURN: 106,\n  OP_TOALTSTACK: 107,\n  OP_FROMALTSTACK: 108,\n  OP_2DROP: 109,\n  OP_2DUP: 110,\n  OP_3DUP: 111,\n  OP_2OVER: 112,\n  OP_2ROT: 113,\n  OP_2SWAP: 114,\n  OP_IFDUP: 115,\n  OP_DEPTH: 116,\n  OP_DROP: 117,\n  OP_DUP: 118,\n  OP_NIP: 119,\n  OP_OVER: 120,\n  OP_PICK: 121,\n  OP_ROLL: 122,\n  OP_ROT: 123,\n  OP_SWAP: 124,\n  OP_TUCK: 125,\n  OP_CAT: 126,\n  OP_SUBSTR: 127,\n  OP_LEFT: 128,\n  OP_RIGHT: 129,\n  OP_SIZE: 130,\n  OP_INVERT: 131,\n  OP_AND: 132,\n  OP_OR: 133,\n  OP_XOR: 134,\n  OP_EQUAL: 135,\n  OP_EQUALVERIFY: 136,\n  OP_RESERVED1: 137,\n  OP_RESERVED2: 138,\n  OP_1ADD: 139,\n  OP_1SUB: 140,\n  OP_2MUL: 141,\n  OP_2DIV: 142,\n  OP_NEGATE: 143,\n  OP_ABS: 144,\n  OP_NOT: 145,\n  OP_0NOTEQUAL: 146,\n  OP_ADD: 147,\n  OP_SUB: 148,\n  OP_MUL: 149,\n  OP_DIV: 150,\n  OP_MOD: 151,\n  OP_LSHIFT: 152,\n  OP_RSHIFT: 153,\n  OP_BOOLAND: 154,\n  OP_BOOLOR: 155,\n  OP_NUMEQUAL: 156,\n  OP_NUMEQUALVERIFY: 157,\n  OP_NUMNOTEQUAL: 158,\n  OP_LESSTHAN: 159,\n  OP_GREATERTHAN: 160,\n  OP_LESSTHANOREQUAL: 161,\n  OP_GREATERTHANOREQUAL: 162,\n  OP_MIN: 163,\n  OP_MAX: 164,\n  OP_WITHIN: 165,\n  OP_RIPEMD160: 166,\n  OP_SHA1: 167,\n  OP_SHA256: 168,\n  OP_HASH160: 169,\n  OP_HASH256: 170,\n  OP_CODESEPARATOR: 171,\n  OP_CHECKSIG: 172,\n  OP_CHECKSIGVERIFY: 173,\n  OP_CHECKMULTISIG: 174,\n  OP_CHECKMULTISIGVERIFY: 175,\n  OP_NOP1: 176,\n  OP_NOP2: 177,\n  OP_CHECKLOCKTIMEVERIFY: 177,\n  OP_NOP3: 178,\n  OP_CHECKSEQUENCEVERIFY: 178,\n  OP_NOP4: 179,\n  OP_NOP5: 180,\n  OP_NOP6: 181,\n  OP_NOP7: 182,\n  OP_NOP8: 183,\n  OP_NOP9: 184,\n  OP_NOP10: 185,\n  OP_PUBKEYHASH: 253,\n  OP_PUBKEY: 254,\n  OP_INVALIDOPCODE: 255,\n};\nexports.OPS = OPS;\nconst REVERSE_OPS = {};\nexports.REVERSE_OPS = REVERSE_OPS;\nfor (const op of Object.keys(OPS)) {\n  const code = OPS[op];\n  REVERSE_OPS[code] = op;\n}\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2data = void 0;\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst OPS = bscript.OPS;\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\n// output: OP_RETURN ...\nfunction p2data(a, opts) {\n  if (!a.data && !a.output) throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n      data: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n      ),\n    },\n    a,\n  );\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'embed', network };\n  lazy.prop(o, 'output', () => {\n    if (!a.data) return;\n    return bscript.compile([OPS.OP_RETURN].concat(a.data));\n  });\n  lazy.prop(o, 'data', () => {\n    if (!a.output) return;\n    return bscript.decompile(a.output).slice(1);\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      const chunks = bscript.decompile(a.output);\n      if (chunks[0] !== OPS.OP_RETURN) throw new TypeError('Output is invalid');\n      if (!chunks.slice(1).every(types_1.typeforce.Buffer))\n        throw new TypeError('Output is invalid');\n      if (a.data && !stacksEqual(a.data, o.data))\n        throw new TypeError('Data mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2data = p2data;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2wsh = exports.p2wpkh = exports.p2sh = exports.p2pkh = exports.p2pk = exports.p2ms = exports.embed = void 0;\nconst embed_1 = require('./embed');\nObject.defineProperty(exports, 'embed', {\n  enumerable: true,\n  get: function() {\n    return embed_1.p2data;\n  },\n});\nconst p2ms_1 = require('./p2ms');\nObject.defineProperty(exports, 'p2ms', {\n  enumerable: true,\n  get: function() {\n    return p2ms_1.p2ms;\n  },\n});\nconst p2pk_1 = require('./p2pk');\nObject.defineProperty(exports, 'p2pk', {\n  enumerable: true,\n  get: function() {\n    return p2pk_1.p2pk;\n  },\n});\nconst p2pkh_1 = require('./p2pkh');\nObject.defineProperty(exports, 'p2pkh', {\n  enumerable: true,\n  get: function() {\n    return p2pkh_1.p2pkh;\n  },\n});\nconst p2sh_1 = require('./p2sh');\nObject.defineProperty(exports, 'p2sh', {\n  enumerable: true,\n  get: function() {\n    return p2sh_1.p2sh;\n  },\n});\nconst p2wpkh_1 = require('./p2wpkh');\nObject.defineProperty(exports, 'p2wpkh', {\n  enumerable: true,\n  get: function() {\n    return p2wpkh_1.p2wpkh;\n  },\n});\nconst p2wsh_1 = require('./p2wsh');\nObject.defineProperty(exports, 'p2wsh', {\n  enumerable: true,\n  get: function() {\n    return p2wsh_1.p2wsh;\n  },\n});\n// TODO\n// witness commitment\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.value = exports.prop = void 0;\nfunction prop(object, name, f) {\n  Object.defineProperty(object, name, {\n    configurable: true,\n    enumerable: true,\n    get() {\n      const _value = f.call(this);\n      this[name] = _value;\n      return _value;\n    },\n    set(_value) {\n      Object.defineProperty(this, name, {\n        configurable: true,\n        enumerable: true,\n        value: _value,\n        writable: true,\n      });\n    },\n  });\n}\nexports.prop = prop;\nfunction value(f) {\n  let _value;\n  return () => {\n    if (_value !== undefined) return _value;\n    _value = f();\n    return _value;\n  };\n}\nexports.value = value;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2ms = void 0;\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst OPS = bscript.OPS;\nconst OP_INT_BASE = OPS.OP_RESERVED; // OP_1 - 1\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\n// input: OP_0 [signatures ...]\n// output: m [pubKeys ...] n OP_CHECKMULTISIG\nfunction p2ms(a, opts) {\n  if (\n    !a.input &&\n    !a.output &&\n    !(a.pubkeys && a.m !== undefined) &&\n    !a.signatures\n  )\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  function isAcceptableSignature(x) {\n    return (\n      bscript.isCanonicalScriptSignature(x) ||\n      (opts.allowIncomplete && x === OPS.OP_0) !== undefined\n    );\n  }\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      m: types_1.typeforce.maybe(types_1.typeforce.Number),\n      n: types_1.typeforce.maybe(types_1.typeforce.Number),\n      output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n      pubkeys: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.isPoint),\n      ),\n      signatures: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(isAcceptableSignature),\n      ),\n      input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n    },\n    a,\n  );\n  const network = a.network || networks_1.bitcoin;\n  const o = { network };\n  let chunks = [];\n  let decoded = false;\n  function decode(output) {\n    if (decoded) return;\n    decoded = true;\n    chunks = bscript.decompile(output);\n    o.m = chunks[0] - OP_INT_BASE;\n    o.n = chunks[chunks.length - 2] - OP_INT_BASE;\n    o.pubkeys = chunks.slice(1, -2);\n  }\n  lazy.prop(o, 'output', () => {\n    if (!a.m) return;\n    if (!o.n) return;\n    if (!a.pubkeys) return;\n    return bscript.compile(\n      [].concat(\n        OP_INT_BASE + a.m,\n        a.pubkeys,\n        OP_INT_BASE + o.n,\n        OPS.OP_CHECKMULTISIG,\n      ),\n    );\n  });\n  lazy.prop(o, 'm', () => {\n    if (!o.output) return;\n    decode(o.output);\n    return o.m;\n  });\n  lazy.prop(o, 'n', () => {\n    if (!o.pubkeys) return;\n    return o.pubkeys.length;\n  });\n  lazy.prop(o, 'pubkeys', () => {\n    if (!a.output) return;\n    decode(a.output);\n    return o.pubkeys;\n  });\n  lazy.prop(o, 'signatures', () => {\n    if (!a.input) return;\n    return bscript.decompile(a.input).slice(1);\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.signatures) return;\n    return bscript.compile([OPS.OP_0].concat(a.signatures));\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  lazy.prop(o, 'name', () => {\n    if (!o.m || !o.n) return;\n    return `p2ms(${o.m} of ${o.n})`;\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      decode(a.output);\n      if (!types_1.typeforce.Number(chunks[0]))\n        throw new TypeError('Output is invalid');\n      if (!types_1.typeforce.Number(chunks[chunks.length - 2]))\n        throw new TypeError('Output is invalid');\n      if (chunks[chunks.length - 1] !== OPS.OP_CHECKMULTISIG)\n        throw new TypeError('Output is invalid');\n      if (o.m <= 0 || o.n > 16 || o.m > o.n || o.n !== chunks.length - 3)\n        throw new TypeError('Output is invalid');\n      if (!o.pubkeys.every(x => (0, types_1.isPoint)(x)))\n        throw new TypeError('Output is invalid');\n      if (a.m !== undefined && a.m !== o.m) throw new TypeError('m mismatch');\n      if (a.n !== undefined && a.n !== o.n) throw new TypeError('n mismatch');\n      if (a.pubkeys && !stacksEqual(a.pubkeys, o.pubkeys))\n        throw new TypeError('Pubkeys mismatch');\n    }\n    if (a.pubkeys) {\n      if (a.n !== undefined && a.n !== a.pubkeys.length)\n        throw new TypeError('Pubkey count mismatch');\n      o.n = a.pubkeys.length;\n      if (o.n < o.m) throw new TypeError('Pubkey count cannot be less than m');\n    }\n    if (a.signatures) {\n      if (a.signatures.length < o.m)\n        throw new TypeError('Not enough signatures provided');\n      if (a.signatures.length > o.m)\n        throw new TypeError('Too many signatures provided');\n    }\n    if (a.input) {\n      if (a.input[0] !== OPS.OP_0) throw new TypeError('Input is invalid');\n      if (\n        o.signatures.length === 0 ||\n        !o.signatures.every(isAcceptableSignature)\n      )\n        throw new TypeError('Input has invalid signature(s)');\n      if (a.signatures && !stacksEqual(a.signatures, o.signatures))\n        throw new TypeError('Signature mismatch');\n      if (a.m !== undefined && a.m !== a.signatures.length)\n        throw new TypeError('Signature count mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2ms = p2ms;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2pk = void 0;\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst OPS = bscript.OPS;\n// input: {signature}\n// output: {pubKey} OP_CHECKSIG\nfunction p2pk(a, opts) {\n  if (!a.input && !a.output && !a.pubkey && !a.input && !a.signature)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n      pubkey: types_1.typeforce.maybe(types_1.isPoint),\n      signature: types_1.typeforce.maybe(bscript.isCanonicalScriptSignature),\n      input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n    },\n    a,\n  );\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2pk', network };\n  lazy.prop(o, 'output', () => {\n    if (!a.pubkey) return;\n    return bscript.compile([a.pubkey, OPS.OP_CHECKSIG]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (!a.output) return;\n    return a.output.slice(1, -1);\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.signature) return;\n    return bscript.compile([a.signature]);\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      if (a.output[a.output.length - 1] !== OPS.OP_CHECKSIG)\n        throw new TypeError('Output is invalid');\n      if (!(0, types_1.isPoint)(o.pubkey))\n        throw new TypeError('Output pubkey is invalid');\n      if (a.pubkey && !a.pubkey.equals(o.pubkey))\n        throw new TypeError('Pubkey mismatch');\n    }\n    if (a.signature) {\n      if (a.input && !a.input.equals(o.input))\n        throw new TypeError('Signature mismatch');\n    }\n    if (a.input) {\n      if (_chunks().length !== 1) throw new TypeError('Input is invalid');\n      if (!bscript.isCanonicalScriptSignature(o.signature))\n        throw new TypeError('Input has invalid signature');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2pk = p2pk;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2pkh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bs58check = require('bs58check');\nconst OPS = bscript.OPS;\n// input: {signature} {pubkey}\n// output: OP_DUP OP_HASH160 {hash160(pubkey)} OP_EQUALVERIFY OP_CHECKSIG\nfunction p2pkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.input)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(20)),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(25)),\n      pubkey: types_1.typeforce.maybe(types_1.isPoint),\n      signature: types_1.typeforce.maybe(bscript.isCanonicalScriptSignature),\n      input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const payload = bs58check.decode(a.address);\n    const version = payload.readUInt8(0);\n    const hash = payload.slice(1);\n    return { version, hash };\n  });\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2pkh', network };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(network.pubKeyHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(3, 23);\n    if (a.address) return _address().hash;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([\n      OPS.OP_DUP,\n      OPS.OP_HASH160,\n      o.hash,\n      OPS.OP_EQUALVERIFY,\n      OPS.OP_CHECKSIG,\n    ]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (!a.input) return;\n    return _chunks()[1];\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return bscript.compile([a.signature, a.pubkey]);\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().version !== network.pubKeyHash)\n        throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 25 ||\n        a.output[0] !== OPS.OP_DUP ||\n        a.output[1] !== OPS.OP_HASH160 ||\n        a.output[2] !== 0x14 ||\n        a.output[23] !== OPS.OP_EQUALVERIFY ||\n        a.output[24] !== OPS.OP_CHECKSIG\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(3, 23);\n      if (hash.length > 0 && !hash.equals(hash2))\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n      else hash = pkh;\n    }\n    if (a.input) {\n      const chunks = _chunks();\n      if (chunks.length !== 2) throw new TypeError('Input is invalid');\n      if (!bscript.isCanonicalScriptSignature(chunks[0]))\n        throw new TypeError('Input has invalid signature');\n      if (!(0, types_1.isPoint)(chunks[1]))\n        throw new TypeError('Input has invalid pubkey');\n      if (a.signature && !a.signature.equals(chunks[0]))\n        throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(chunks[1]))\n        throw new TypeError('Pubkey mismatch');\n      const pkh = bcrypto.hash160(chunks[1]);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2pkh = p2pkh;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2sh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bs58check = require('bs58check');\nconst OPS = bscript.OPS;\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\n// input: [redeemScriptSig ...] {redeemScript}\n// witness: <?>\n// output: OP_HASH160 {hash160(redeemScript)} OP_EQUAL\nfunction p2sh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.input)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(20)),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(23)),\n      redeem: types_1.typeforce.maybe({\n        network: types_1.typeforce.maybe(types_1.typeforce.Object),\n        output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n        input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n        witness: types_1.typeforce.maybe(\n          types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n        ),\n      }),\n      input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n      witness: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n      ),\n    },\n    a,\n  );\n  let network = a.network;\n  if (!network) {\n    network = (a.redeem && a.redeem.network) || networks_1.bitcoin;\n  }\n  const o = { network };\n  const _address = lazy.value(() => {\n    const payload = bs58check.decode(a.address);\n    const version = payload.readUInt8(0);\n    const hash = payload.slice(1);\n    return { version, hash };\n  });\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const _redeem = lazy.value(() => {\n    const chunks = _chunks();\n    return {\n      network,\n      output: chunks[chunks.length - 1],\n      input: bscript.compile(chunks.slice(0, -1)),\n      witness: a.witness || [],\n    };\n  });\n  // output dependents\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(o.network.scriptHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', () => {\n    // in order of least effort\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().hash;\n    if (o.redeem && o.redeem.output) return bcrypto.hash160(o.redeem.output);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_HASH160, o.hash, OPS.OP_EQUAL]);\n  });\n  // input dependents\n  lazy.prop(o, 'redeem', () => {\n    if (!a.input) return;\n    return _redeem();\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.redeem || !a.redeem.input || !a.redeem.output) return;\n    return bscript.compile(\n      [].concat(bscript.decompile(a.redeem.input), a.redeem.output),\n    );\n  });\n  lazy.prop(o, 'witness', () => {\n    if (o.redeem && o.redeem.witness) return o.redeem.witness;\n    if (o.input) return [];\n  });\n  lazy.prop(o, 'name', () => {\n    const nameParts = ['p2sh'];\n    if (o.redeem !== undefined && o.redeem.name !== undefined)\n      nameParts.push(o.redeem.name);\n    return nameParts.join('-');\n  });\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().version !== network.scriptHash)\n        throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 23 ||\n        a.output[0] !== OPS.OP_HASH160 ||\n        a.output[1] !== 0x14 ||\n        a.output[22] !== OPS.OP_EQUAL\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(2, 22);\n      if (hash.length > 0 && !hash.equals(hash2))\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    // inlined to prevent 'no-inner-declarations' failing\n    const checkRedeem = redeem => {\n      // is the redeem output empty/invalid?\n      if (redeem.output) {\n        const decompile = bscript.decompile(redeem.output);\n        if (!decompile || decompile.length < 1)\n          throw new TypeError('Redeem.output too short');\n        // match hash against other sources\n        const hash2 = bcrypto.hash160(redeem.output);\n        if (hash.length > 0 && !hash.equals(hash2))\n          throw new TypeError('Hash mismatch');\n        else hash = hash2;\n      }\n      if (redeem.input) {\n        const hasInput = redeem.input.length > 0;\n        const hasWitness = redeem.witness && redeem.witness.length > 0;\n        if (!hasInput && !hasWitness) throw new TypeError('Empty input');\n        if (hasInput && hasWitness)\n          throw new TypeError('Input and witness provided');\n        if (hasInput) {\n          const richunks = bscript.decompile(redeem.input);\n          if (!bscript.isPushOnly(richunks))\n            throw new TypeError('Non push-only scriptSig');\n        }\n      }\n    };\n    if (a.input) {\n      const chunks = _chunks();\n      if (!chunks || chunks.length < 1) throw new TypeError('Input too short');\n      if (!Buffer.isBuffer(_redeem().output))\n        throw new TypeError('Input is invalid');\n      checkRedeem(_redeem());\n    }\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network)\n        throw new TypeError('Network mismatch');\n      if (a.input) {\n        const redeem = _redeem();\n        if (a.redeem.output && !a.redeem.output.equals(redeem.output))\n          throw new TypeError('Redeem.output mismatch');\n        if (a.redeem.input && !a.redeem.input.equals(redeem.input))\n          throw new TypeError('Redeem.input mismatch');\n      }\n      checkRedeem(a.redeem);\n    }\n    if (a.witness) {\n      if (\n        a.redeem &&\n        a.redeem.witness &&\n        !stacksEqual(a.redeem.witness, a.witness)\n      )\n        throw new TypeError('Witness and redeem.witness mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2sh = p2sh;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2wpkh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bech32_1 = require('bech32');\nconst OPS = bscript.OPS;\nconst EMPTY_BUFFER = Buffer.alloc(0);\n// witness: {signature} {pubKey}\n// input: <>\n// output: OP_0 {pubKeyHash}\nfunction p2wpkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.witness)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(20)),\n      input: types_1.typeforce.maybe(types_1.typeforce.BufferN(0)),\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(22)),\n      pubkey: types_1.typeforce.maybe(types_1.isPoint),\n      signature: types_1.typeforce.maybe(bscript.isCanonicalScriptSignature),\n      witness: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n      ),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const result = bech32_1.bech32.decode(a.address);\n    const version = result.words.shift();\n    const data = bech32_1.bech32.fromWords(result.words);\n    return {\n      version,\n      prefix: result.prefix,\n      data: Buffer.from(data),\n    };\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2wpkh', network };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const words = bech32_1.bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32_1.bech32.encode(network.bech32, words);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().data;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_0, o.hash]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (a.pubkey) return a.pubkey;\n    if (!a.witness) return;\n    return a.witness[1];\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.witness) return;\n    return a.witness[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return [a.signature, a.pubkey];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (network && network.bech32 !== _address().prefix)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 20)\n        throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 22 ||\n        a.output[0] !== OPS.OP_0 ||\n        a.output[1] !== 0x14\n      )\n        throw new TypeError('Output is invalid');\n      if (hash.length > 0 && !hash.equals(a.output.slice(2)))\n        throw new TypeError('Hash mismatch');\n      else hash = a.output.slice(2);\n    }\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n      else hash = pkh;\n      if (!(0, types_1.isPoint)(a.pubkey) || a.pubkey.length !== 33)\n        throw new TypeError('Invalid pubkey for p2wpkh');\n    }\n    if (a.witness) {\n      if (a.witness.length !== 2) throw new TypeError('Witness is invalid');\n      if (!bscript.isCanonicalScriptSignature(a.witness[0]))\n        throw new TypeError('Witness has invalid signature');\n      if (!(0, types_1.isPoint)(a.witness[1]) || a.witness[1].length !== 33)\n        throw new TypeError('Witness has invalid pubkey');\n      if (a.signature && !a.signature.equals(a.witness[0]))\n        throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(a.witness[1]))\n        throw new TypeError('Pubkey mismatch');\n      const pkh = bcrypto.hash160(a.witness[1]);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2wpkh = p2wpkh;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2wsh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bech32_1 = require('bech32');\nconst OPS = bscript.OPS;\nconst EMPTY_BUFFER = Buffer.alloc(0);\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\nfunction chunkHasUncompressedPubkey(chunk) {\n  if (\n    Buffer.isBuffer(chunk) &&\n    chunk.length === 65 &&\n    chunk[0] === 0x04 &&\n    (0, types_1.isPoint)(chunk)\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n// input: <>\n// witness: [redeemScriptSig ...] {redeemScript}\n// output: OP_0 {sha256(redeemScript)}\nfunction p2wsh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.witness)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(32)),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(34)),\n      redeem: types_1.typeforce.maybe({\n        input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n        network: types_1.typeforce.maybe(types_1.typeforce.Object),\n        output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n        witness: types_1.typeforce.maybe(\n          types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n        ),\n      }),\n      input: types_1.typeforce.maybe(types_1.typeforce.BufferN(0)),\n      witness: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n      ),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const result = bech32_1.bech32.decode(a.address);\n    const version = result.words.shift();\n    const data = bech32_1.bech32.fromWords(result.words);\n    return {\n      version,\n      prefix: result.prefix,\n      data: Buffer.from(data),\n    };\n  });\n  const _rchunks = lazy.value(() => {\n    return bscript.decompile(a.redeem.input);\n  });\n  let network = a.network;\n  if (!network) {\n    network = (a.redeem && a.redeem.network) || networks_1.bitcoin;\n  }\n  const o = { network };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const words = bech32_1.bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32_1.bech32.encode(network.bech32, words);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(2);\n    if (a.address) return _address().data;\n    if (o.redeem && o.redeem.output) return bcrypto.sha256(o.redeem.output);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_0, o.hash]);\n  });\n  lazy.prop(o, 'redeem', () => {\n    if (!a.witness) return;\n    return {\n      output: a.witness[a.witness.length - 1],\n      input: EMPTY_BUFFER,\n      witness: a.witness.slice(0, -1),\n    };\n  });\n  lazy.prop(o, 'input', () => {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  lazy.prop(o, 'witness', () => {\n    // transform redeem input to witness stack?\n    if (\n      a.redeem &&\n      a.redeem.input &&\n      a.redeem.input.length > 0 &&\n      a.redeem.output &&\n      a.redeem.output.length > 0\n    ) {\n      const stack = bscript.toStack(_rchunks());\n      // assign, and blank the existing input\n      o.redeem = Object.assign({ witness: stack }, a.redeem);\n      o.redeem.input = EMPTY_BUFFER;\n      return [].concat(stack, a.redeem.output);\n    }\n    if (!a.redeem) return;\n    if (!a.redeem.output) return;\n    if (!a.redeem.witness) return;\n    return [].concat(a.redeem.witness, a.redeem.output);\n  });\n  lazy.prop(o, 'name', () => {\n    const nameParts = ['p2wsh'];\n    if (o.redeem !== undefined && o.redeem.name !== undefined)\n      nameParts.push(o.redeem.name);\n    return nameParts.join('-');\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().prefix !== network.bech32)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 32)\n        throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 34 ||\n        a.output[0] !== OPS.OP_0 ||\n        a.output[1] !== 0x20\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(2);\n      if (hash.length > 0 && !hash.equals(hash2))\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network)\n        throw new TypeError('Network mismatch');\n      // is there two redeem sources?\n      if (\n        a.redeem.input &&\n        a.redeem.input.length > 0 &&\n        a.redeem.witness &&\n        a.redeem.witness.length > 0\n      )\n        throw new TypeError('Ambiguous witness source');\n      // is the redeem output non-empty?\n      if (a.redeem.output) {\n        if (bscript.decompile(a.redeem.output).length === 0)\n          throw new TypeError('Redeem.output is invalid');\n        // match hash against other sources\n        const hash2 = bcrypto.sha256(a.redeem.output);\n        if (hash.length > 0 && !hash.equals(hash2))\n          throw new TypeError('Hash mismatch');\n        else hash = hash2;\n      }\n      if (a.redeem.input && !bscript.isPushOnly(_rchunks()))\n        throw new TypeError('Non push-only scriptSig');\n      if (\n        a.witness &&\n        a.redeem.witness &&\n        !stacksEqual(a.witness, a.redeem.witness)\n      )\n        throw new TypeError('Witness and redeem.witness mismatch');\n      if (\n        (a.redeem.input && _rchunks().some(chunkHasUncompressedPubkey)) ||\n        (a.redeem.output &&\n          (bscript.decompile(a.redeem.output) || []).some(\n            chunkHasUncompressedPubkey,\n          ))\n      ) {\n        throw new TypeError(\n          'redeem.input or redeem.output contains uncompressed pubkey',\n        );\n      }\n    }\n    if (a.witness && a.witness.length > 0) {\n      const wScript = a.witness[a.witness.length - 1];\n      if (a.redeem && a.redeem.output && !a.redeem.output.equals(wScript))\n        throw new TypeError('Witness and redeem.output mismatch');\n      if (\n        a.witness.some(chunkHasUncompressedPubkey) ||\n        (bscript.decompile(wScript) || []).some(chunkHasUncompressedPubkey)\n      )\n        throw new TypeError('Witness contains uncompressed pubkey');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2wsh = p2wsh;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.Psbt = void 0;\nconst bip174_1 = require('bip174');\nconst varuint = require('bip174/src/lib/converter/varint');\nconst utils_1 = require('bip174/src/lib/utils');\nconst address_1 = require('./address');\nconst bufferutils_1 = require('./bufferutils');\nconst crypto_1 = require('./crypto');\nconst networks_1 = require('./networks');\nconst payments = require('./payments');\nconst bscript = require('./script');\nconst transaction_1 = require('./transaction');\n/**\n * These are the default arguments for a Psbt instance.\n */\nconst DEFAULT_OPTS = {\n  /**\n   * A bitcoinjs Network object. This is only used if you pass an `address`\n   * parameter to addOutput. Otherwise it is not needed and can be left default.\n   */\n  network: networks_1.bitcoin,\n  /**\n   * When extractTransaction is called, the fee rate is checked.\n   * THIS IS NOT TO BE RELIED ON.\n   * It is only here as a last ditch effort to prevent sending a 500 BTC fee etc.\n   */\n  maximumFeeRate: 5000, // satoshi per byte\n};\n/**\n * Psbt class can parse and generate a PSBT binary based off of the BIP174.\n * There are 6 roles that this class fulfills. (Explained in BIP174)\n *\n * Creator: This can be done with `new Psbt()`\n * Updater: This can be done with `psbt.addInput(input)`, `psbt.addInputs(inputs)`,\n *   `psbt.addOutput(output)`, `psbt.addOutputs(outputs)` when you are looking to\n *   add new inputs and outputs to the PSBT, and `psbt.updateGlobal(itemObject)`,\n *   `psbt.updateInput(itemObject)`, `psbt.updateOutput(itemObject)`\n *   addInput requires hash: Buffer | string; and index: number; as attributes\n *   and can also include any attributes that are used in updateInput method.\n *   addOutput requires script: Buffer; and value: number; and likewise can include\n *   data for updateOutput.\n *   For a list of what attributes should be what types. Check the bip174 library.\n *   Also, check the integration tests for some examples of usage.\n * Signer: There are a few methods. signAllInputs and signAllInputsAsync, which will search all input\n *   information for your pubkey or pubkeyhash, and only sign inputs where it finds\n *   your info. Or you can explicitly sign a specific input with signInput and\n *   signInputAsync. For the async methods you can create a SignerAsync object\n *   and use something like a hardware wallet to sign with. (You must implement this)\n * Combiner: psbts can be combined easily with `psbt.combine(psbt2, psbt3, psbt4 ...)`\n *   the psbt calling combine will always have precedence when a conflict occurs.\n *   Combine checks if the internal bitcoin transaction is the same, so be sure that\n *   all sequences, version, locktime, etc. are the same before combining.\n * Input Finalizer: This role is fairly important. Not only does it need to construct\n *   the input scriptSigs and witnesses, but it SHOULD verify the signatures etc.\n *   Before running `psbt.finalizeAllInputs()` please run `psbt.validateSignaturesOfAllInputs()`\n *   Running any finalize method will delete any data in the input(s) that are no longer\n *   needed due to the finalized scripts containing the information.\n * Transaction Extractor: This role will perform some checks before returning a\n *   Transaction object. Such as fee rate not being larger than maximumFeeRate etc.\n */\nclass Psbt {\n  constructor(opts = {}, data = new bip174_1.Psbt(new PsbtTransaction())) {\n    this.data = data;\n    // set defaults\n    this.opts = Object.assign({}, DEFAULT_OPTS, opts);\n    this.__CACHE = {\n      __NON_WITNESS_UTXO_TX_CACHE: [],\n      __NON_WITNESS_UTXO_BUF_CACHE: [],\n      __TX_IN_CACHE: {},\n      __TX: this.data.globalMap.unsignedTx.tx,\n      // Psbt's predecesor (TransactionBuilder - now removed) behavior\n      // was to not confirm input values  before signing.\n      // Even though we highly encourage people to get\n      // the full parent transaction to verify values, the ability to\n      // sign non-segwit inputs without the full transaction was often\n      // requested. So the only way to activate is to use @ts-ignore.\n      // We will disable exporting the Psbt when unsafe sign is active.\n      // because it is not BIP174 compliant.\n      __UNSAFE_SIGN_NONSEGWIT: false,\n    };\n    if (this.data.inputs.length === 0) this.setVersion(2);\n    // Make data hidden when enumerating\n    const dpew = (obj, attr, enumerable, writable) =>\n      Object.defineProperty(obj, attr, {\n        enumerable,\n        writable,\n      });\n    dpew(this, '__CACHE', false, true);\n    dpew(this, 'opts', false, true);\n  }\n  static fromBase64(data, opts = {}) {\n    const buffer = Buffer.from(data, 'base64');\n    return this.fromBuffer(buffer, opts);\n  }\n  static fromHex(data, opts = {}) {\n    const buffer = Buffer.from(data, 'hex');\n    return this.fromBuffer(buffer, opts);\n  }\n  static fromBuffer(buffer, opts = {}) {\n    const psbtBase = bip174_1.Psbt.fromBuffer(buffer, transactionFromBuffer);\n    const psbt = new Psbt(opts, psbtBase);\n    checkTxForDupeIns(psbt.__CACHE.__TX, psbt.__CACHE);\n    return psbt;\n  }\n  get inputCount() {\n    return this.data.inputs.length;\n  }\n  get version() {\n    return this.__CACHE.__TX.version;\n  }\n  set version(version) {\n    this.setVersion(version);\n  }\n  get locktime() {\n    return this.__CACHE.__TX.locktime;\n  }\n  set locktime(locktime) {\n    this.setLocktime(locktime);\n  }\n  get txInputs() {\n    return this.__CACHE.__TX.ins.map(input => ({\n      hash: (0, bufferutils_1.cloneBuffer)(input.hash),\n      index: input.index,\n      sequence: input.sequence,\n    }));\n  }\n  get txOutputs() {\n    return this.__CACHE.__TX.outs.map(output => {\n      let address;\n      try {\n        address = (0, address_1.fromOutputScript)(\n          output.script,\n          this.opts.network,\n        );\n      } catch (_) {}\n      return {\n        script: (0, bufferutils_1.cloneBuffer)(output.script),\n        value: output.value,\n        address,\n      };\n    });\n  }\n  combine(...those) {\n    this.data.combine(...those.map(o => o.data));\n    return this;\n  }\n  clone() {\n    // TODO: more efficient cloning\n    const res = Psbt.fromBuffer(this.data.toBuffer());\n    res.opts = JSON.parse(JSON.stringify(this.opts));\n    return res;\n  }\n  setMaximumFeeRate(satoshiPerByte) {\n    check32Bit(satoshiPerByte); // 42.9 BTC per byte IS excessive... so throw\n    this.opts.maximumFeeRate = satoshiPerByte;\n  }\n  setVersion(version) {\n    check32Bit(version);\n    checkInputsForPartialSig(this.data.inputs, 'setVersion');\n    const c = this.__CACHE;\n    c.__TX.version = version;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  setLocktime(locktime) {\n    check32Bit(locktime);\n    checkInputsForPartialSig(this.data.inputs, 'setLocktime');\n    const c = this.__CACHE;\n    c.__TX.locktime = locktime;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  setInputSequence(inputIndex, sequence) {\n    check32Bit(sequence);\n    checkInputsForPartialSig(this.data.inputs, 'setInputSequence');\n    const c = this.__CACHE;\n    if (c.__TX.ins.length <= inputIndex) {\n      throw new Error('Input index too high');\n    }\n    c.__TX.ins[inputIndex].sequence = sequence;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  addInputs(inputDatas) {\n    inputDatas.forEach(inputData => this.addInput(inputData));\n    return this;\n  }\n  addInput(inputData) {\n    if (\n      arguments.length > 1 ||\n      !inputData ||\n      inputData.hash === undefined ||\n      inputData.index === undefined\n    ) {\n      throw new Error(\n        `Invalid arguments for Psbt.addInput. ` +\n          `Requires single object with at least [hash] and [index]`,\n      );\n    }\n    checkInputsForPartialSig(this.data.inputs, 'addInput');\n    if (inputData.witnessScript) checkInvalidP2WSH(inputData.witnessScript);\n    const c = this.__CACHE;\n    this.data.addInput(inputData);\n    const txIn = c.__TX.ins[c.__TX.ins.length - 1];\n    checkTxInputCache(c, txIn);\n    const inputIndex = this.data.inputs.length - 1;\n    const input = this.data.inputs[inputIndex];\n    if (input.nonWitnessUtxo) {\n      addNonWitnessTxCache(this.__CACHE, input, inputIndex);\n    }\n    c.__FEE = undefined;\n    c.__FEE_RATE = undefined;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  addOutputs(outputDatas) {\n    outputDatas.forEach(outputData => this.addOutput(outputData));\n    return this;\n  }\n  addOutput(outputData) {\n    if (\n      arguments.length > 1 ||\n      !outputData ||\n      outputData.value === undefined ||\n      (outputData.address === undefined && outputData.script === undefined)\n    ) {\n      throw new Error(\n        `Invalid arguments for Psbt.addOutput. ` +\n          `Requires single object with at least [script or address] and [value]`,\n      );\n    }\n    checkInputsForPartialSig(this.data.inputs, 'addOutput');\n    const { address } = outputData;\n    if (typeof address === 'string') {\n      const { network } = this.opts;\n      const script = (0, address_1.toOutputScript)(address, network);\n      outputData = Object.assign(outputData, { script });\n    }\n    const c = this.__CACHE;\n    this.data.addOutput(outputData);\n    c.__FEE = undefined;\n    c.__FEE_RATE = undefined;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  extractTransaction(disableFeeCheck) {\n    if (!this.data.inputs.every(isFinalized)) throw new Error('Not finalized');\n    const c = this.__CACHE;\n    if (!disableFeeCheck) {\n      checkFees(this, c, this.opts);\n    }\n    if (c.__EXTRACTED_TX) return c.__EXTRACTED_TX;\n    const tx = c.__TX.clone();\n    inputFinalizeGetAmts(this.data.inputs, tx, c, true);\n    return tx;\n  }\n  getFeeRate() {\n    return getTxCacheValue(\n      '__FEE_RATE',\n      'fee rate',\n      this.data.inputs,\n      this.__CACHE,\n    );\n  }\n  getFee() {\n    return getTxCacheValue('__FEE', 'fee', this.data.inputs, this.__CACHE);\n  }\n  finalizeAllInputs() {\n    (0, utils_1.checkForInput)(this.data.inputs, 0); // making sure we have at least one\n    range(this.data.inputs.length).forEach(idx => this.finalizeInput(idx));\n    return this;\n  }\n  finalizeInput(inputIndex, finalScriptsFunc = getFinalScripts) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    const { script, isP2SH, isP2WSH, isSegwit } = getScriptFromInput(\n      inputIndex,\n      input,\n      this.__CACHE,\n    );\n    if (!script) throw new Error(`No script found for input #${inputIndex}`);\n    checkPartialSigSighashes(input);\n    const { finalScriptSig, finalScriptWitness } = finalScriptsFunc(\n      inputIndex,\n      input,\n      script,\n      isSegwit,\n      isP2SH,\n      isP2WSH,\n    );\n    if (finalScriptSig) this.data.updateInput(inputIndex, { finalScriptSig });\n    if (finalScriptWitness)\n      this.data.updateInput(inputIndex, { finalScriptWitness });\n    if (!finalScriptSig && !finalScriptWitness)\n      throw new Error(`Unknown error finalizing input #${inputIndex}`);\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n  getInputType(inputIndex) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    const script = getScriptFromUtxo(inputIndex, input, this.__CACHE);\n    const result = getMeaningfulScript(\n      script,\n      inputIndex,\n      'input',\n      input.redeemScript || redeemFromFinalScriptSig(input.finalScriptSig),\n      input.witnessScript ||\n        redeemFromFinalWitnessScript(input.finalScriptWitness),\n    );\n    const type = result.type === 'raw' ? '' : result.type + '-';\n    const mainType = classifyScript(result.meaningfulScript);\n    return type + mainType;\n  }\n  inputHasPubkey(inputIndex, pubkey) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    return pubkeyInInput(pubkey, input, inputIndex, this.__CACHE);\n  }\n  inputHasHDKey(inputIndex, root) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    const derivationIsMine = bip32DerivationIsMine(root);\n    return (\n      !!input.bip32Derivation && input.bip32Derivation.some(derivationIsMine)\n    );\n  }\n  outputHasPubkey(outputIndex, pubkey) {\n    const output = (0, utils_1.checkForOutput)(this.data.outputs, outputIndex);\n    return pubkeyInOutput(pubkey, output, outputIndex, this.__CACHE);\n  }\n  outputHasHDKey(outputIndex, root) {\n    const output = (0, utils_1.checkForOutput)(this.data.outputs, outputIndex);\n    const derivationIsMine = bip32DerivationIsMine(root);\n    return (\n      !!output.bip32Derivation && output.bip32Derivation.some(derivationIsMine)\n    );\n  }\n  validateSignaturesOfAllInputs(validator) {\n    (0, utils_1.checkForInput)(this.data.inputs, 0); // making sure we have at least one\n    const results = range(this.data.inputs.length).map(idx =>\n      this.validateSignaturesOfInput(idx, validator),\n    );\n    return results.reduce((final, res) => res === true && final, true);\n  }\n  validateSignaturesOfInput(inputIndex, validator, pubkey) {\n    const input = this.data.inputs[inputIndex];\n    const partialSig = (input || {}).partialSig;\n    if (!input || !partialSig || partialSig.length < 1)\n      throw new Error('No signatures to validate');\n    if (typeof validator !== 'function')\n      throw new Error('Need validator function to validate signatures');\n    const mySigs = pubkey\n      ? partialSig.filter(sig => sig.pubkey.equals(pubkey))\n      : partialSig;\n    if (mySigs.length < 1) throw new Error('No signatures for this pubkey');\n    const results = [];\n    let hashCache;\n    let scriptCache;\n    let sighashCache;\n    for (const pSig of mySigs) {\n      const sig = bscript.signature.decode(pSig.signature);\n      const { hash, script } =\n        sighashCache !== sig.hashType\n          ? getHashForSig(\n              inputIndex,\n              Object.assign({}, input, { sighashType: sig.hashType }),\n              this.__CACHE,\n              true,\n            )\n          : { hash: hashCache, script: scriptCache };\n      sighashCache = sig.hashType;\n      hashCache = hash;\n      scriptCache = script;\n      checkScriptForPubkey(pSig.pubkey, script, 'verify');\n      results.push(validator(pSig.pubkey, hash, sig.signature));\n    }\n    return results.every(res => res === true);\n  }\n  signAllInputsHD(\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n      throw new Error('Need HDSigner to sign input');\n    }\n    const results = [];\n    for (const i of range(this.data.inputs.length)) {\n      try {\n        this.signInputHD(i, hdKeyPair, sighashTypes);\n        results.push(true);\n      } catch (err) {\n        results.push(false);\n      }\n    }\n    if (results.every(v => v === false)) {\n      throw new Error('No inputs were signed');\n    }\n    return this;\n  }\n  signAllInputsHDAsync(\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    return new Promise((resolve, reject) => {\n      if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n        return reject(new Error('Need HDSigner to sign input'));\n      }\n      const results = [];\n      const promises = [];\n      for (const i of range(this.data.inputs.length)) {\n        promises.push(\n          this.signInputHDAsync(i, hdKeyPair, sighashTypes).then(\n            () => {\n              results.push(true);\n            },\n            () => {\n              results.push(false);\n            },\n          ),\n        );\n      }\n      return Promise.all(promises).then(() => {\n        if (results.every(v => v === false)) {\n          return reject(new Error('No inputs were signed'));\n        }\n        resolve();\n      });\n    });\n  }\n  signInputHD(\n    inputIndex,\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n      throw new Error('Need HDSigner to sign input');\n    }\n    const signers = getSignersFromHD(inputIndex, this.data.inputs, hdKeyPair);\n    signers.forEach(signer => this.signInput(inputIndex, signer, sighashTypes));\n    return this;\n  }\n  signInputHDAsync(\n    inputIndex,\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    return new Promise((resolve, reject) => {\n      if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n        return reject(new Error('Need HDSigner to sign input'));\n      }\n      const signers = getSignersFromHD(inputIndex, this.data.inputs, hdKeyPair);\n      const promises = signers.map(signer =>\n        this.signInputAsync(inputIndex, signer, sighashTypes),\n      );\n      return Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(reject);\n    });\n  }\n  signAllInputs(\n    keyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    // TODO: Add a pubkey/pubkeyhash cache to each input\n    // as input information is added, then eventually\n    // optimize this method.\n    const results = [];\n    for (const i of range(this.data.inputs.length)) {\n      try {\n        this.signInput(i, keyPair, sighashTypes);\n        results.push(true);\n      } catch (err) {\n        results.push(false);\n      }\n    }\n    if (results.every(v => v === false)) {\n      throw new Error('No inputs were signed');\n    }\n    return this;\n  }\n  signAllInputsAsync(\n    keyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    return new Promise((resolve, reject) => {\n      if (!keyPair || !keyPair.publicKey)\n        return reject(new Error('Need Signer to sign input'));\n      // TODO: Add a pubkey/pubkeyhash cache to each input\n      // as input information is added, then eventually\n      // optimize this method.\n      const results = [];\n      const promises = [];\n      for (const [i] of this.data.inputs.entries()) {\n        promises.push(\n          this.signInputAsync(i, keyPair, sighashTypes).then(\n            () => {\n              results.push(true);\n            },\n            () => {\n              results.push(false);\n            },\n          ),\n        );\n      }\n      return Promise.all(promises).then(() => {\n        if (results.every(v => v === false)) {\n          return reject(new Error('No inputs were signed'));\n        }\n        resolve();\n      });\n    });\n  }\n  signInput(\n    inputIndex,\n    keyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    const { hash, sighashType } = getHashAndSighashType(\n      this.data.inputs,\n      inputIndex,\n      keyPair.publicKey,\n      this.__CACHE,\n      sighashTypes,\n    );\n    const partialSig = [\n      {\n        pubkey: keyPair.publicKey,\n        signature: bscript.signature.encode(keyPair.sign(hash), sighashType),\n      },\n    ];\n    this.data.updateInput(inputIndex, { partialSig });\n    return this;\n  }\n  signInputAsync(\n    inputIndex,\n    keyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    return Promise.resolve().then(() => {\n      if (!keyPair || !keyPair.publicKey)\n        throw new Error('Need Signer to sign input');\n      const { hash, sighashType } = getHashAndSighashType(\n        this.data.inputs,\n        inputIndex,\n        keyPair.publicKey,\n        this.__CACHE,\n        sighashTypes,\n      );\n      return Promise.resolve(keyPair.sign(hash)).then(signature => {\n        const partialSig = [\n          {\n            pubkey: keyPair.publicKey,\n            signature: bscript.signature.encode(signature, sighashType),\n          },\n        ];\n        this.data.updateInput(inputIndex, { partialSig });\n      });\n    });\n  }\n  toBuffer() {\n    checkCache(this.__CACHE);\n    return this.data.toBuffer();\n  }\n  toHex() {\n    checkCache(this.__CACHE);\n    return this.data.toHex();\n  }\n  toBase64() {\n    checkCache(this.__CACHE);\n    return this.data.toBase64();\n  }\n  updateGlobal(updateData) {\n    this.data.updateGlobal(updateData);\n    return this;\n  }\n  updateInput(inputIndex, updateData) {\n    if (updateData.witnessScript) checkInvalidP2WSH(updateData.witnessScript);\n    this.data.updateInput(inputIndex, updateData);\n    if (updateData.nonWitnessUtxo) {\n      addNonWitnessTxCache(\n        this.__CACHE,\n        this.data.inputs[inputIndex],\n        inputIndex,\n      );\n    }\n    return this;\n  }\n  updateOutput(outputIndex, updateData) {\n    this.data.updateOutput(outputIndex, updateData);\n    return this;\n  }\n  addUnknownKeyValToGlobal(keyVal) {\n    this.data.addUnknownKeyValToGlobal(keyVal);\n    return this;\n  }\n  addUnknownKeyValToInput(inputIndex, keyVal) {\n    this.data.addUnknownKeyValToInput(inputIndex, keyVal);\n    return this;\n  }\n  addUnknownKeyValToOutput(outputIndex, keyVal) {\n    this.data.addUnknownKeyValToOutput(outputIndex, keyVal);\n    return this;\n  }\n  clearFinalizedInput(inputIndex) {\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n}\nexports.Psbt = Psbt;\n/**\n * This function is needed to pass to the bip174 base class's fromBuffer.\n * It takes the \"transaction buffer\" portion of the psbt buffer and returns a\n * Transaction (From the bip174 library) interface.\n */\nconst transactionFromBuffer = buffer => new PsbtTransaction(buffer);\n/**\n * This class implements the Transaction interface from bip174 library.\n * It contains a bitcoinjs-lib Transaction object.\n */\nclass PsbtTransaction {\n  constructor(buffer = Buffer.from([2, 0, 0, 0, 0, 0, 0, 0, 0, 0])) {\n    this.tx = transaction_1.Transaction.fromBuffer(buffer);\n    checkTxEmpty(this.tx);\n    Object.defineProperty(this, 'tx', {\n      enumerable: false,\n      writable: true,\n    });\n  }\n  getInputOutputCounts() {\n    return {\n      inputCount: this.tx.ins.length,\n      outputCount: this.tx.outs.length,\n    };\n  }\n  addInput(input) {\n    if (\n      input.hash === undefined ||\n      input.index === undefined ||\n      (!Buffer.isBuffer(input.hash) && typeof input.hash !== 'string') ||\n      typeof input.index !== 'number'\n    ) {\n      throw new Error('Error adding input.');\n    }\n    const hash =\n      typeof input.hash === 'string'\n        ? (0, bufferutils_1.reverseBuffer)(Buffer.from(input.hash, 'hex'))\n        : input.hash;\n    this.tx.addInput(hash, input.index, input.sequence);\n  }\n  addOutput(output) {\n    if (\n      output.script === undefined ||\n      output.value === undefined ||\n      !Buffer.isBuffer(output.script) ||\n      typeof output.value !== 'number'\n    ) {\n      throw new Error('Error adding output.');\n    }\n    this.tx.addOutput(output.script, output.value);\n  }\n  toBuffer() {\n    return this.tx.toBuffer();\n  }\n}\nfunction canFinalize(input, script, scriptType) {\n  switch (scriptType) {\n    case 'pubkey':\n    case 'pubkeyhash':\n    case 'witnesspubkeyhash':\n      return hasSigs(1, input.partialSig);\n    case 'multisig':\n      const p2ms = payments.p2ms({ output: script });\n      return hasSigs(p2ms.m, input.partialSig, p2ms.pubkeys);\n    default:\n      return false;\n  }\n}\nfunction checkCache(cache) {\n  if (cache.__UNSAFE_SIGN_NONSEGWIT !== false) {\n    throw new Error('Not BIP174 compliant, can not export');\n  }\n}\nfunction hasSigs(neededSigs, partialSig, pubkeys) {\n  if (!partialSig) return false;\n  let sigs;\n  if (pubkeys) {\n    sigs = pubkeys\n      .map(pkey => {\n        const pubkey = compressPubkey(pkey);\n        return partialSig.find(pSig => pSig.pubkey.equals(pubkey));\n      })\n      .filter(v => !!v);\n  } else {\n    sigs = partialSig;\n  }\n  if (sigs.length > neededSigs) throw new Error('Too many signatures');\n  return sigs.length === neededSigs;\n}\nfunction isFinalized(input) {\n  return !!input.finalScriptSig || !!input.finalScriptWitness;\n}\nfunction isPaymentFactory(payment) {\n  return script => {\n    try {\n      payment({ output: script });\n      return true;\n    } catch (err) {\n      return false;\n    }\n  };\n}\nconst isP2MS = isPaymentFactory(payments.p2ms);\nconst isP2PK = isPaymentFactory(payments.p2pk);\nconst isP2PKH = isPaymentFactory(payments.p2pkh);\nconst isP2WPKH = isPaymentFactory(payments.p2wpkh);\nconst isP2WSHScript = isPaymentFactory(payments.p2wsh);\nconst isP2SHScript = isPaymentFactory(payments.p2sh);\nfunction bip32DerivationIsMine(root) {\n  return d => {\n    if (!d.masterFingerprint.equals(root.fingerprint)) return false;\n    if (!root.derivePath(d.path).publicKey.equals(d.pubkey)) return false;\n    return true;\n  };\n}\nfunction check32Bit(num) {\n  if (\n    typeof num !== 'number' ||\n    num !== Math.floor(num) ||\n    num > 0xffffffff ||\n    num < 0\n  ) {\n    throw new Error('Invalid 32 bit integer');\n  }\n}\nfunction checkFees(psbt, cache, opts) {\n  const feeRate = cache.__FEE_RATE || psbt.getFeeRate();\n  const vsize = cache.__EXTRACTED_TX.virtualSize();\n  const satoshis = feeRate * vsize;\n  if (feeRate >= opts.maximumFeeRate) {\n    throw new Error(\n      `Warning: You are paying around ${(satoshis / 1e8).toFixed(8)} in ` +\n        `fees, which is ${feeRate} satoshi per byte for a transaction ` +\n        `with a VSize of ${vsize} bytes (segwit counted as 0.25 byte per ` +\n        `byte). Use setMaximumFeeRate method to raise your threshold, or ` +\n        `pass true to the first arg of extractTransaction.`,\n    );\n  }\n}\nfunction checkInputsForPartialSig(inputs, action) {\n  inputs.forEach(input => {\n    let throws = false;\n    let pSigs = [];\n    if ((input.partialSig || []).length === 0) {\n      if (!input.finalScriptSig && !input.finalScriptWitness) return;\n      pSigs = getPsigsFromInputFinalScripts(input);\n    } else {\n      pSigs = input.partialSig;\n    }\n    pSigs.forEach(pSig => {\n      const { hashType } = bscript.signature.decode(pSig.signature);\n      const whitelist = [];\n      const isAnyoneCanPay =\n        hashType & transaction_1.Transaction.SIGHASH_ANYONECANPAY;\n      if (isAnyoneCanPay) whitelist.push('addInput');\n      const hashMod = hashType & 0x1f;\n      switch (hashMod) {\n        case transaction_1.Transaction.SIGHASH_ALL:\n          break;\n        case transaction_1.Transaction.SIGHASH_SINGLE:\n        case transaction_1.Transaction.SIGHASH_NONE:\n          whitelist.push('addOutput');\n          whitelist.push('setInputSequence');\n          break;\n      }\n      if (whitelist.indexOf(action) === -1) {\n        throws = true;\n      }\n    });\n    if (throws) {\n      throw new Error('Can not modify transaction, signatures exist.');\n    }\n  });\n}\nfunction checkPartialSigSighashes(input) {\n  if (!input.sighashType || !input.partialSig) return;\n  const { partialSig, sighashType } = input;\n  partialSig.forEach(pSig => {\n    const { hashType } = bscript.signature.decode(pSig.signature);\n    if (sighashType !== hashType) {\n      throw new Error('Signature sighash does not match input sighash type');\n    }\n  });\n}\nfunction checkScriptForPubkey(pubkey, script, action) {\n  if (!pubkeyInScript(pubkey, script)) {\n    throw new Error(\n      `Can not ${action} for this input with the key ${pubkey.toString('hex')}`,\n    );\n  }\n}\nfunction checkTxEmpty(tx) {\n  const isEmpty = tx.ins.every(\n    input =>\n      input.script &&\n      input.script.length === 0 &&\n      input.witness &&\n      input.witness.length === 0,\n  );\n  if (!isEmpty) {\n    throw new Error('Format Error: Transaction ScriptSigs are not empty');\n  }\n}\nfunction checkTxForDupeIns(tx, cache) {\n  tx.ins.forEach(input => {\n    checkTxInputCache(cache, input);\n  });\n}\nfunction checkTxInputCache(cache, input) {\n  const key =\n    (0, bufferutils_1.reverseBuffer)(Buffer.from(input.hash)).toString('hex') +\n    ':' +\n    input.index;\n  if (cache.__TX_IN_CACHE[key]) throw new Error('Duplicate input detected.');\n  cache.__TX_IN_CACHE[key] = 1;\n}\nfunction scriptCheckerFactory(payment, paymentScriptName) {\n  return (inputIndex, scriptPubKey, redeemScript, ioType) => {\n    const redeemScriptOutput = payment({\n      redeem: { output: redeemScript },\n    }).output;\n    if (!scriptPubKey.equals(redeemScriptOutput)) {\n      throw new Error(\n        `${paymentScriptName} for ${ioType} #${inputIndex} doesn't match the scriptPubKey in the prevout`,\n      );\n    }\n  };\n}\nconst checkRedeemScript = scriptCheckerFactory(payments.p2sh, 'Redeem script');\nconst checkWitnessScript = scriptCheckerFactory(\n  payments.p2wsh,\n  'Witness script',\n);\nfunction getTxCacheValue(key, name, inputs, c) {\n  if (!inputs.every(isFinalized))\n    throw new Error(`PSBT must be finalized to calculate ${name}`);\n  if (key === '__FEE_RATE' && c.__FEE_RATE) return c.__FEE_RATE;\n  if (key === '__FEE' && c.__FEE) return c.__FEE;\n  let tx;\n  let mustFinalize = true;\n  if (c.__EXTRACTED_TX) {\n    tx = c.__EXTRACTED_TX;\n    mustFinalize = false;\n  } else {\n    tx = c.__TX.clone();\n  }\n  inputFinalizeGetAmts(inputs, tx, c, mustFinalize);\n  if (key === '__FEE_RATE') return c.__FEE_RATE;\n  else if (key === '__FEE') return c.__FEE;\n}\nfunction getFinalScripts(inputIndex, input, script, isSegwit, isP2SH, isP2WSH) {\n  const scriptType = classifyScript(script);\n  if (!canFinalize(input, script, scriptType))\n    throw new Error(`Can not finalize input #${inputIndex}`);\n  return prepareFinalScripts(\n    script,\n    scriptType,\n    input.partialSig,\n    isSegwit,\n    isP2SH,\n    isP2WSH,\n  );\n}\nfunction prepareFinalScripts(\n  script,\n  scriptType,\n  partialSig,\n  isSegwit,\n  isP2SH,\n  isP2WSH,\n) {\n  let finalScriptSig;\n  let finalScriptWitness;\n  // Wow, the payments API is very handy\n  const payment = getPayment(script, scriptType, partialSig);\n  const p2wsh = !isP2WSH ? null : payments.p2wsh({ redeem: payment });\n  const p2sh = !isP2SH ? null : payments.p2sh({ redeem: p2wsh || payment });\n  if (isSegwit) {\n    if (p2wsh) {\n      finalScriptWitness = witnessStackToScriptWitness(p2wsh.witness);\n    } else {\n      finalScriptWitness = witnessStackToScriptWitness(payment.witness);\n    }\n    if (p2sh) {\n      finalScriptSig = p2sh.input;\n    }\n  } else {\n    if (p2sh) {\n      finalScriptSig = p2sh.input;\n    } else {\n      finalScriptSig = payment.input;\n    }\n  }\n  return {\n    finalScriptSig,\n    finalScriptWitness,\n  };\n}\nfunction getHashAndSighashType(\n  inputs,\n  inputIndex,\n  pubkey,\n  cache,\n  sighashTypes,\n) {\n  const input = (0, utils_1.checkForInput)(inputs, inputIndex);\n  const { hash, sighashType, script } = getHashForSig(\n    inputIndex,\n    input,\n    cache,\n    false,\n    sighashTypes,\n  );\n  checkScriptForPubkey(pubkey, script, 'sign');\n  return {\n    hash,\n    sighashType,\n  };\n}\nfunction getHashForSig(inputIndex, input, cache, forValidate, sighashTypes) {\n  const unsignedTx = cache.__TX;\n  const sighashType =\n    input.sighashType || transaction_1.Transaction.SIGHASH_ALL;\n  if (sighashTypes && sighashTypes.indexOf(sighashType) < 0) {\n    const str = sighashTypeToString(sighashType);\n    throw new Error(\n      `Sighash type is not allowed. Retry the sign method passing the ` +\n        `sighashTypes array of whitelisted types. Sighash type: ${str}`,\n    );\n  }\n  let hash;\n  let prevout;\n  if (input.nonWitnessUtxo) {\n    const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n      cache,\n      input,\n      inputIndex,\n    );\n    const prevoutHash = unsignedTx.ins[inputIndex].hash;\n    const utxoHash = nonWitnessUtxoTx.getHash();\n    // If a non-witness UTXO is provided, its hash must match the hash specified in the prevout\n    if (!prevoutHash.equals(utxoHash)) {\n      throw new Error(\n        `Non-witness UTXO hash for input #${inputIndex} doesn't match the hash specified in the prevout`,\n      );\n    }\n    const prevoutIndex = unsignedTx.ins[inputIndex].index;\n    prevout = nonWitnessUtxoTx.outs[prevoutIndex];\n  } else if (input.witnessUtxo) {\n    prevout = input.witnessUtxo;\n  } else {\n    throw new Error('Need a Utxo input item for signing');\n  }\n  const { meaningfulScript, type } = getMeaningfulScript(\n    prevout.script,\n    inputIndex,\n    'input',\n    input.redeemScript,\n    input.witnessScript,\n  );\n  if (['p2sh-p2wsh', 'p2wsh'].indexOf(type) >= 0) {\n    hash = unsignedTx.hashForWitnessV0(\n      inputIndex,\n      meaningfulScript,\n      prevout.value,\n      sighashType,\n    );\n  } else if (isP2WPKH(meaningfulScript)) {\n    // P2WPKH uses the P2PKH template for prevoutScript when signing\n    const signingScript = payments.p2pkh({ hash: meaningfulScript.slice(2) })\n      .output;\n    hash = unsignedTx.hashForWitnessV0(\n      inputIndex,\n      signingScript,\n      prevout.value,\n      sighashType,\n    );\n  } else {\n    // non-segwit\n    if (\n      input.nonWitnessUtxo === undefined &&\n      cache.__UNSAFE_SIGN_NONSEGWIT === false\n    )\n      throw new Error(\n        `Input #${inputIndex} has witnessUtxo but non-segwit script: ` +\n          `${meaningfulScript.toString('hex')}`,\n      );\n    if (!forValidate && cache.__UNSAFE_SIGN_NONSEGWIT !== false)\n      console.warn(\n        'Warning: Signing non-segwit inputs without the full parent transaction ' +\n          'means there is a chance that a miner could feed you incorrect information ' +\n          \"to trick you into paying large fees. This behavior is the same as Psbt's predecesor \" +\n          '(TransactionBuilder - now removed) when signing non-segwit scripts. You are not ' +\n          'able to export this Psbt with toBuffer|toBase64|toHex since it is not ' +\n          'BIP174 compliant.\\n*********************\\nPROCEED WITH CAUTION!\\n' +\n          '*********************',\n      );\n    hash = unsignedTx.hashForSignature(\n      inputIndex,\n      meaningfulScript,\n      sighashType,\n    );\n  }\n  return {\n    script: meaningfulScript,\n    sighashType,\n    hash,\n  };\n}\nfunction getPayment(script, scriptType, partialSig) {\n  let payment;\n  switch (scriptType) {\n    case 'multisig':\n      const sigs = getSortedSigs(script, partialSig);\n      payment = payments.p2ms({\n        output: script,\n        signatures: sigs,\n      });\n      break;\n    case 'pubkey':\n      payment = payments.p2pk({\n        output: script,\n        signature: partialSig[0].signature,\n      });\n      break;\n    case 'pubkeyhash':\n      payment = payments.p2pkh({\n        output: script,\n        pubkey: partialSig[0].pubkey,\n        signature: partialSig[0].signature,\n      });\n      break;\n    case 'witnesspubkeyhash':\n      payment = payments.p2wpkh({\n        output: script,\n        pubkey: partialSig[0].pubkey,\n        signature: partialSig[0].signature,\n      });\n      break;\n  }\n  return payment;\n}\nfunction getPsigsFromInputFinalScripts(input) {\n  const scriptItems = !input.finalScriptSig\n    ? []\n    : bscript.decompile(input.finalScriptSig) || [];\n  const witnessItems = !input.finalScriptWitness\n    ? []\n    : bscript.decompile(input.finalScriptWitness) || [];\n  return scriptItems\n    .concat(witnessItems)\n    .filter(item => {\n      return Buffer.isBuffer(item) && bscript.isCanonicalScriptSignature(item);\n    })\n    .map(sig => ({ signature: sig }));\n}\nfunction getScriptFromInput(inputIndex, input, cache) {\n  const unsignedTx = cache.__TX;\n  const res = {\n    script: null,\n    isSegwit: false,\n    isP2SH: false,\n    isP2WSH: false,\n  };\n  res.isP2SH = !!input.redeemScript;\n  res.isP2WSH = !!input.witnessScript;\n  if (input.witnessScript) {\n    res.script = input.witnessScript;\n  } else if (input.redeemScript) {\n    res.script = input.redeemScript;\n  } else {\n    if (input.nonWitnessUtxo) {\n      const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n        cache,\n        input,\n        inputIndex,\n      );\n      const prevoutIndex = unsignedTx.ins[inputIndex].index;\n      res.script = nonWitnessUtxoTx.outs[prevoutIndex].script;\n    } else if (input.witnessUtxo) {\n      res.script = input.witnessUtxo.script;\n    }\n  }\n  if (input.witnessScript || isP2WPKH(res.script)) {\n    res.isSegwit = true;\n  }\n  return res;\n}\nfunction getSignersFromHD(inputIndex, inputs, hdKeyPair) {\n  const input = (0, utils_1.checkForInput)(inputs, inputIndex);\n  if (!input.bip32Derivation || input.bip32Derivation.length === 0) {\n    throw new Error('Need bip32Derivation to sign with HD');\n  }\n  const myDerivations = input.bip32Derivation\n    .map(bipDv => {\n      if (bipDv.masterFingerprint.equals(hdKeyPair.fingerprint)) {\n        return bipDv;\n      } else {\n        return;\n      }\n    })\n    .filter(v => !!v);\n  if (myDerivations.length === 0) {\n    throw new Error(\n      'Need one bip32Derivation masterFingerprint to match the HDSigner fingerprint',\n    );\n  }\n  const signers = myDerivations.map(bipDv => {\n    const node = hdKeyPair.derivePath(bipDv.path);\n    if (!bipDv.pubkey.equals(node.publicKey)) {\n      throw new Error('pubkey did not match bip32Derivation');\n    }\n    return node;\n  });\n  return signers;\n}\nfunction getSortedSigs(script, partialSig) {\n  const p2ms = payments.p2ms({ output: script });\n  // for each pubkey in order of p2ms script\n  return p2ms.pubkeys\n    .map(pk => {\n      // filter partialSig array by pubkey being equal\n      return (\n        partialSig.filter(ps => {\n          return ps.pubkey.equals(pk);\n        })[0] || {}\n      ).signature;\n      // Any pubkey without a match will return undefined\n      // this last filter removes all the undefined items in the array.\n    })\n    .filter(v => !!v);\n}\nfunction scriptWitnessToWitnessStack(buffer) {\n  let offset = 0;\n  function readSlice(n) {\n    offset += n;\n    return buffer.slice(offset - n, offset);\n  }\n  function readVarInt() {\n    const vi = varuint.decode(buffer, offset);\n    offset += varuint.decode.bytes;\n    return vi;\n  }\n  function readVarSlice() {\n    return readSlice(readVarInt());\n  }\n  function readVector() {\n    const count = readVarInt();\n    const vector = [];\n    for (let i = 0; i < count; i++) vector.push(readVarSlice());\n    return vector;\n  }\n  return readVector();\n}\nfunction sighashTypeToString(sighashType) {\n  let text =\n    sighashType & transaction_1.Transaction.SIGHASH_ANYONECANPAY\n      ? 'SIGHASH_ANYONECANPAY | '\n      : '';\n  const sigMod = sighashType & 0x1f;\n  switch (sigMod) {\n    case transaction_1.Transaction.SIGHASH_ALL:\n      text += 'SIGHASH_ALL';\n      break;\n    case transaction_1.Transaction.SIGHASH_SINGLE:\n      text += 'SIGHASH_SINGLE';\n      break;\n    case transaction_1.Transaction.SIGHASH_NONE:\n      text += 'SIGHASH_NONE';\n      break;\n  }\n  return text;\n}\nfunction witnessStackToScriptWitness(witness) {\n  let buffer = Buffer.allocUnsafe(0);\n  function writeSlice(slice) {\n    buffer = Buffer.concat([buffer, Buffer.from(slice)]);\n  }\n  function writeVarInt(i) {\n    const currentLen = buffer.length;\n    const varintLen = varuint.encodingLength(i);\n    buffer = Buffer.concat([buffer, Buffer.allocUnsafe(varintLen)]);\n    varuint.encode(i, buffer, currentLen);\n  }\n  function writeVarSlice(slice) {\n    writeVarInt(slice.length);\n    writeSlice(slice);\n  }\n  function writeVector(vector) {\n    writeVarInt(vector.length);\n    vector.forEach(writeVarSlice);\n  }\n  writeVector(witness);\n  return buffer;\n}\nfunction addNonWitnessTxCache(cache, input, inputIndex) {\n  cache.__NON_WITNESS_UTXO_BUF_CACHE[inputIndex] = input.nonWitnessUtxo;\n  const tx = transaction_1.Transaction.fromBuffer(input.nonWitnessUtxo);\n  cache.__NON_WITNESS_UTXO_TX_CACHE[inputIndex] = tx;\n  const self = cache;\n  const selfIndex = inputIndex;\n  delete input.nonWitnessUtxo;\n  Object.defineProperty(input, 'nonWitnessUtxo', {\n    enumerable: true,\n    get() {\n      const buf = self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex];\n      const txCache = self.__NON_WITNESS_UTXO_TX_CACHE[selfIndex];\n      if (buf !== undefined) {\n        return buf;\n      } else {\n        const newBuf = txCache.toBuffer();\n        self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex] = newBuf;\n        return newBuf;\n      }\n    },\n    set(data) {\n      self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex] = data;\n    },\n  });\n}\nfunction inputFinalizeGetAmts(inputs, tx, cache, mustFinalize) {\n  let inputAmount = 0;\n  inputs.forEach((input, idx) => {\n    if (mustFinalize && input.finalScriptSig)\n      tx.ins[idx].script = input.finalScriptSig;\n    if (mustFinalize && input.finalScriptWitness) {\n      tx.ins[idx].witness = scriptWitnessToWitnessStack(\n        input.finalScriptWitness,\n      );\n    }\n    if (input.witnessUtxo) {\n      inputAmount += input.witnessUtxo.value;\n    } else if (input.nonWitnessUtxo) {\n      const nwTx = nonWitnessUtxoTxFromCache(cache, input, idx);\n      const vout = tx.ins[idx].index;\n      const out = nwTx.outs[vout];\n      inputAmount += out.value;\n    }\n  });\n  const outputAmount = tx.outs.reduce((total, o) => total + o.value, 0);\n  const fee = inputAmount - outputAmount;\n  if (fee < 0) {\n    throw new Error('Outputs are spending more than Inputs');\n  }\n  const bytes = tx.virtualSize();\n  cache.__FEE = fee;\n  cache.__EXTRACTED_TX = tx;\n  cache.__FEE_RATE = Math.floor(fee / bytes);\n}\nfunction nonWitnessUtxoTxFromCache(cache, input, inputIndex) {\n  const c = cache.__NON_WITNESS_UTXO_TX_CACHE;\n  if (!c[inputIndex]) {\n    addNonWitnessTxCache(cache, input, inputIndex);\n  }\n  return c[inputIndex];\n}\nfunction getScriptFromUtxo(inputIndex, input, cache) {\n  if (input.witnessUtxo !== undefined) {\n    return input.witnessUtxo.script;\n  } else if (input.nonWitnessUtxo !== undefined) {\n    const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n      cache,\n      input,\n      inputIndex,\n    );\n    return nonWitnessUtxoTx.outs[cache.__TX.ins[inputIndex].index].script;\n  } else {\n    throw new Error(\"Can't find pubkey in input without Utxo data\");\n  }\n}\nfunction pubkeyInInput(pubkey, input, inputIndex, cache) {\n  const script = getScriptFromUtxo(inputIndex, input, cache);\n  const { meaningfulScript } = getMeaningfulScript(\n    script,\n    inputIndex,\n    'input',\n    input.redeemScript,\n    input.witnessScript,\n  );\n  return pubkeyInScript(pubkey, meaningfulScript);\n}\nfunction pubkeyInOutput(pubkey, output, outputIndex, cache) {\n  const script = cache.__TX.outs[outputIndex].script;\n  const { meaningfulScript } = getMeaningfulScript(\n    script,\n    outputIndex,\n    'output',\n    output.redeemScript,\n    output.witnessScript,\n  );\n  return pubkeyInScript(pubkey, meaningfulScript);\n}\nfunction redeemFromFinalScriptSig(finalScript) {\n  if (!finalScript) return;\n  const decomp = bscript.decompile(finalScript);\n  if (!decomp) return;\n  const lastItem = decomp[decomp.length - 1];\n  if (\n    !Buffer.isBuffer(lastItem) ||\n    isPubkeyLike(lastItem) ||\n    isSigLike(lastItem)\n  )\n    return;\n  const sDecomp = bscript.decompile(lastItem);\n  if (!sDecomp) return;\n  return lastItem;\n}\nfunction redeemFromFinalWitnessScript(finalScript) {\n  if (!finalScript) return;\n  const decomp = scriptWitnessToWitnessStack(finalScript);\n  const lastItem = decomp[decomp.length - 1];\n  if (isPubkeyLike(lastItem)) return;\n  const sDecomp = bscript.decompile(lastItem);\n  if (!sDecomp) return;\n  return lastItem;\n}\nfunction compressPubkey(pubkey) {\n  if (pubkey.length === 65) {\n    const parity = pubkey[64] & 1;\n    const newKey = pubkey.slice(0, 33);\n    newKey[0] = 2 | parity;\n    return newKey;\n  }\n  return pubkey.slice();\n}\nfunction isPubkeyLike(buf) {\n  return buf.length === 33 && bscript.isCanonicalPubKey(buf);\n}\nfunction isSigLike(buf) {\n  return bscript.isCanonicalScriptSignature(buf);\n}\nfunction getMeaningfulScript(\n  script,\n  index,\n  ioType,\n  redeemScript,\n  witnessScript,\n) {\n  const isP2SH = isP2SHScript(script);\n  const isP2SHP2WSH = isP2SH && redeemScript && isP2WSHScript(redeemScript);\n  const isP2WSH = isP2WSHScript(script);\n  if (isP2SH && redeemScript === undefined)\n    throw new Error('scriptPubkey is P2SH but redeemScript missing');\n  if ((isP2WSH || isP2SHP2WSH) && witnessScript === undefined)\n    throw new Error(\n      'scriptPubkey or redeemScript is P2WSH but witnessScript missing',\n    );\n  let meaningfulScript;\n  if (isP2SHP2WSH) {\n    meaningfulScript = witnessScript;\n    checkRedeemScript(index, script, redeemScript, ioType);\n    checkWitnessScript(index, redeemScript, witnessScript, ioType);\n    checkInvalidP2WSH(meaningfulScript);\n  } else if (isP2WSH) {\n    meaningfulScript = witnessScript;\n    checkWitnessScript(index, script, witnessScript, ioType);\n    checkInvalidP2WSH(meaningfulScript);\n  } else if (isP2SH) {\n    meaningfulScript = redeemScript;\n    checkRedeemScript(index, script, redeemScript, ioType);\n  } else {\n    meaningfulScript = script;\n  }\n  return {\n    meaningfulScript,\n    type: isP2SHP2WSH\n      ? 'p2sh-p2wsh'\n      : isP2SH\n      ? 'p2sh'\n      : isP2WSH\n      ? 'p2wsh'\n      : 'raw',\n  };\n}\nfunction checkInvalidP2WSH(script) {\n  if (isP2WPKH(script) || isP2SHScript(script)) {\n    throw new Error('P2WPKH or P2SH can not be contained within P2WSH');\n  }\n}\nfunction pubkeyInScript(pubkey, script) {\n  const pubkeyHash = (0, crypto_1.hash160)(pubkey);\n  const decompiled = bscript.decompile(script);\n  if (decompiled === null) throw new Error('Unknown script error');\n  return decompiled.some(element => {\n    if (typeof element === 'number') return false;\n    return element.equals(pubkey) || element.equals(pubkeyHash);\n  });\n}\nfunction classifyScript(script) {\n  if (isP2WPKH(script)) return 'witnesspubkeyhash';\n  if (isP2PKH(script)) return 'pubkeyhash';\n  if (isP2MS(script)) return 'multisig';\n  if (isP2PK(script)) return 'pubkey';\n  return 'nonstandard';\n}\nfunction range(n) {\n  return [...Array(n).keys()];\n}\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.decode = exports.encode = exports.encodingLength = void 0;\nconst ops_1 = require('./ops');\nfunction encodingLength(i) {\n  return i < ops_1.OPS.OP_PUSHDATA1 ? 1 : i <= 0xff ? 2 : i <= 0xffff ? 3 : 5;\n}\nexports.encodingLength = encodingLength;\nfunction encode(buffer, num, offset) {\n  const size = encodingLength(num);\n  // ~6 bit\n  if (size === 1) {\n    buffer.writeUInt8(num, offset);\n    // 8 bit\n  } else if (size === 2) {\n    buffer.writeUInt8(ops_1.OPS.OP_PUSHDATA1, offset);\n    buffer.writeUInt8(num, offset + 1);\n    // 16 bit\n  } else if (size === 3) {\n    buffer.writeUInt8(ops_1.OPS.OP_PUSHDATA2, offset);\n    buffer.writeUInt16LE(num, offset + 1);\n    // 32 bit\n  } else {\n    buffer.writeUInt8(ops_1.OPS.OP_PUSHDATA4, offset);\n    buffer.writeUInt32LE(num, offset + 1);\n  }\n  return size;\n}\nexports.encode = encode;\nfunction decode(buffer, offset) {\n  const opcode = buffer.readUInt8(offset);\n  let num;\n  let size;\n  // ~6 bit\n  if (opcode < ops_1.OPS.OP_PUSHDATA1) {\n    num = opcode;\n    size = 1;\n    // 8 bit\n  } else if (opcode === ops_1.OPS.OP_PUSHDATA1) {\n    if (offset + 2 > buffer.length) return null;\n    num = buffer.readUInt8(offset + 1);\n    size = 2;\n    // 16 bit\n  } else if (opcode === ops_1.OPS.OP_PUSHDATA2) {\n    if (offset + 3 > buffer.length) return null;\n    num = buffer.readUInt16LE(offset + 1);\n    size = 3;\n    // 32 bit\n  } else {\n    if (offset + 5 > buffer.length) return null;\n    if (opcode !== ops_1.OPS.OP_PUSHDATA4) throw new Error('Unexpected opcode');\n    num = buffer.readUInt32LE(offset + 1);\n    size = 5;\n  }\n  return {\n    opcode,\n    number: num,\n    size,\n  };\n}\nexports.decode = decode;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.signature = exports.number = exports.isCanonicalScriptSignature = exports.isDefinedHashType = exports.isCanonicalPubKey = exports.toStack = exports.fromASM = exports.toASM = exports.decompile = exports.compile = exports.isPushOnly = exports.OPS = void 0;\nconst bip66 = require('./bip66');\nconst ops_1 = require('./ops');\nObject.defineProperty(exports, 'OPS', {\n  enumerable: true,\n  get: function() {\n    return ops_1.OPS;\n  },\n});\nconst pushdata = require('./push_data');\nconst scriptNumber = require('./script_number');\nconst scriptSignature = require('./script_signature');\nconst types = require('./types');\nconst { typeforce } = types;\nconst OP_INT_BASE = ops_1.OPS.OP_RESERVED; // OP_1 - 1\nfunction isOPInt(value) {\n  return (\n    types.Number(value) &&\n    (value === ops_1.OPS.OP_0 ||\n      (value >= ops_1.OPS.OP_1 && value <= ops_1.OPS.OP_16) ||\n      value === ops_1.OPS.OP_1NEGATE)\n  );\n}\nfunction isPushOnlyChunk(value) {\n  return types.Buffer(value) || isOPInt(value);\n}\nfunction isPushOnly(value) {\n  return types.Array(value) && value.every(isPushOnlyChunk);\n}\nexports.isPushOnly = isPushOnly;\nfunction asMinimalOP(buffer) {\n  if (buffer.length === 0) return ops_1.OPS.OP_0;\n  if (buffer.length !== 1) return;\n  if (buffer[0] >= 1 && buffer[0] <= 16) return OP_INT_BASE + buffer[0];\n  if (buffer[0] === 0x81) return ops_1.OPS.OP_1NEGATE;\n}\nfunction chunksIsBuffer(buf) {\n  return Buffer.isBuffer(buf);\n}\nfunction chunksIsArray(buf) {\n  return types.Array(buf);\n}\nfunction singleChunkIsBuffer(buf) {\n  return Buffer.isBuffer(buf);\n}\nfunction compile(chunks) {\n  // TODO: remove me\n  if (chunksIsBuffer(chunks)) return chunks;\n  typeforce(types.Array, chunks);\n  const bufferSize = chunks.reduce((accum, chunk) => {\n    // data chunk\n    if (singleChunkIsBuffer(chunk)) {\n      // adhere to BIP62.3, minimal push policy\n      if (chunk.length === 1 && asMinimalOP(chunk) !== undefined) {\n        return accum + 1;\n      }\n      return accum + pushdata.encodingLength(chunk.length) + chunk.length;\n    }\n    // opcode\n    return accum + 1;\n  }, 0.0);\n  const buffer = Buffer.allocUnsafe(bufferSize);\n  let offset = 0;\n  chunks.forEach(chunk => {\n    // data chunk\n    if (singleChunkIsBuffer(chunk)) {\n      // adhere to BIP62.3, minimal push policy\n      const opcode = asMinimalOP(chunk);\n      if (opcode !== undefined) {\n        buffer.writeUInt8(opcode, offset);\n        offset += 1;\n        return;\n      }\n      offset += pushdata.encode(buffer, chunk.length, offset);\n      chunk.copy(buffer, offset);\n      offset += chunk.length;\n      // opcode\n    } else {\n      buffer.writeUInt8(chunk, offset);\n      offset += 1;\n    }\n  });\n  if (offset !== buffer.length) throw new Error('Could not decode chunks');\n  return buffer;\n}\nexports.compile = compile;\nfunction decompile(buffer) {\n  // TODO: remove me\n  if (chunksIsArray(buffer)) return buffer;\n  typeforce(types.Buffer, buffer);\n  const chunks = [];\n  let i = 0;\n  while (i < buffer.length) {\n    const opcode = buffer[i];\n    // data chunk\n    if (opcode > ops_1.OPS.OP_0 && opcode <= ops_1.OPS.OP_PUSHDATA4) {\n      const d = pushdata.decode(buffer, i);\n      // did reading a pushDataInt fail?\n      if (d === null) return null;\n      i += d.size;\n      // attempt to read too much data?\n      if (i + d.number > buffer.length) return null;\n      const data = buffer.slice(i, i + d.number);\n      i += d.number;\n      // decompile minimally\n      const op = asMinimalOP(data);\n      if (op !== undefined) {\n        chunks.push(op);\n      } else {\n        chunks.push(data);\n      }\n      // opcode\n    } else {\n      chunks.push(opcode);\n      i += 1;\n    }\n  }\n  return chunks;\n}\nexports.decompile = decompile;\nfunction toASM(chunks) {\n  if (chunksIsBuffer(chunks)) {\n    chunks = decompile(chunks);\n  }\n  return chunks\n    .map(chunk => {\n      // data?\n      if (singleChunkIsBuffer(chunk)) {\n        const op = asMinimalOP(chunk);\n        if (op === undefined) return chunk.toString('hex');\n        chunk = op;\n      }\n      // opcode!\n      return ops_1.REVERSE_OPS[chunk];\n    })\n    .join(' ');\n}\nexports.toASM = toASM;\nfunction fromASM(asm) {\n  typeforce(types.String, asm);\n  return compile(\n    asm.split(' ').map(chunkStr => {\n      // opcode?\n      if (ops_1.OPS[chunkStr] !== undefined) return ops_1.OPS[chunkStr];\n      typeforce(types.Hex, chunkStr);\n      // data!\n      return Buffer.from(chunkStr, 'hex');\n    }),\n  );\n}\nexports.fromASM = fromASM;\nfunction toStack(chunks) {\n  chunks = decompile(chunks);\n  typeforce(isPushOnly, chunks);\n  return chunks.map(op => {\n    if (singleChunkIsBuffer(op)) return op;\n    if (op === ops_1.OPS.OP_0) return Buffer.allocUnsafe(0);\n    return scriptNumber.encode(op - OP_INT_BASE);\n  });\n}\nexports.toStack = toStack;\nfunction isCanonicalPubKey(buffer) {\n  return types.isPoint(buffer);\n}\nexports.isCanonicalPubKey = isCanonicalPubKey;\nfunction isDefinedHashType(hashType) {\n  const hashTypeMod = hashType & ~0x80;\n  // return hashTypeMod > SIGHASH_ALL && hashTypeMod < SIGHASH_SINGLE\n  return hashTypeMod > 0x00 && hashTypeMod < 0x04;\n}\nexports.isDefinedHashType = isDefinedHashType;\nfunction isCanonicalScriptSignature(buffer) {\n  if (!Buffer.isBuffer(buffer)) return false;\n  if (!isDefinedHashType(buffer[buffer.length - 1])) return false;\n  return bip66.check(buffer.slice(0, -1));\n}\nexports.isCanonicalScriptSignature = isCanonicalScriptSignature;\n// tslint:disable-next-line variable-name\nexports.number = scriptNumber;\nexports.signature = scriptSignature;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.encode = exports.decode = void 0;\nfunction decode(buffer, maxLength, minimal) {\n  maxLength = maxLength || 4;\n  minimal = minimal === undefined ? true : minimal;\n  const length = buffer.length;\n  if (length === 0) return 0;\n  if (length > maxLength) throw new TypeError('Script number overflow');\n  if (minimal) {\n    if ((buffer[length - 1] & 0x7f) === 0) {\n      if (length <= 1 || (buffer[length - 2] & 0x80) === 0)\n        throw new Error('Non-minimally encoded script number');\n    }\n  }\n  // 40-bit\n  if (length === 5) {\n    const a = buffer.readUInt32LE(0);\n    const b = buffer.readUInt8(4);\n    if (b & 0x80) return -((b & ~0x80) * 0x100000000 + a);\n    return b * 0x100000000 + a;\n  }\n  // 32-bit / 24-bit / 16-bit / 8-bit\n  let result = 0;\n  for (let i = 0; i < length; ++i) {\n    result |= buffer[i] << (8 * i);\n  }\n  if (buffer[length - 1] & 0x80)\n    return -(result & ~(0x80 << (8 * (length - 1))));\n  return result;\n}\nexports.decode = decode;\nfunction scriptNumSize(i) {\n  return i > 0x7fffffff\n    ? 5\n    : i > 0x7fffff\n    ? 4\n    : i > 0x7fff\n    ? 3\n    : i > 0x7f\n    ? 2\n    : i > 0x00\n    ? 1\n    : 0;\n}\nfunction encode(_number) {\n  let value = Math.abs(_number);\n  const size = scriptNumSize(value);\n  const buffer = Buffer.allocUnsafe(size);\n  const negative = _number < 0;\n  for (let i = 0; i < size; ++i) {\n    buffer.writeUInt8(value & 0xff, i);\n    value >>= 8;\n  }\n  if (buffer[size - 1] & 0x80) {\n    buffer.writeUInt8(negative ? 0x80 : 0x00, size - 1);\n  } else if (negative) {\n    buffer[size - 1] |= 0x80;\n  }\n  return buffer;\n}\nexports.encode = encode;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.encode = exports.decode = void 0;\nconst bip66 = require('./bip66');\nconst types = require('./types');\nconst { typeforce } = types;\nconst ZERO = Buffer.alloc(1, 0);\nfunction toDER(x) {\n  let i = 0;\n  while (x[i] === 0) ++i;\n  if (i === x.length) return ZERO;\n  x = x.slice(i);\n  if (x[0] & 0x80) return Buffer.concat([ZERO, x], 1 + x.length);\n  return x;\n}\nfunction fromDER(x) {\n  if (x[0] === 0x00) x = x.slice(1);\n  const buffer = Buffer.alloc(32, 0);\n  const bstart = Math.max(0, 32 - x.length);\n  x.copy(buffer, bstart);\n  return buffer;\n}\n// BIP62: 1 byte hashType flag (only 0x01, 0x02, 0x03, 0x81, 0x82 and 0x83 are allowed)\nfunction decode(buffer) {\n  const hashType = buffer.readUInt8(buffer.length - 1);\n  const hashTypeMod = hashType & ~0x80;\n  if (hashTypeMod <= 0 || hashTypeMod >= 4)\n    throw new Error('Invalid hashType ' + hashType);\n  const decoded = bip66.decode(buffer.slice(0, -1));\n  const r = fromDER(decoded.r);\n  const s = fromDER(decoded.s);\n  const signature = Buffer.concat([r, s], 64);\n  return { signature, hashType };\n}\nexports.decode = decode;\nfunction encode(signature, hashType) {\n  typeforce(\n    {\n      signature: types.BufferN(64),\n      hashType: types.UInt8,\n    },\n    { signature, hashType },\n  );\n  const hashTypeMod = hashType & ~0x80;\n  if (hashTypeMod <= 0 || hashTypeMod >= 4)\n    throw new Error('Invalid hashType ' + hashType);\n  const hashTypeBuffer = Buffer.allocUnsafe(1);\n  hashTypeBuffer.writeUInt8(hashType, 0);\n  const r = toDER(signature.slice(0, 32));\n  const s = toDER(signature.slice(32, 64));\n  return Buffer.concat([bip66.encode(r, s), hashTypeBuffer]);\n}\nexports.encode = encode;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.Transaction = void 0;\nconst bufferutils_1 = require('./bufferutils');\nconst bcrypto = require('./crypto');\nconst bscript = require('./script');\nconst script_1 = require('./script');\nconst types = require('./types');\nconst { typeforce } = types;\nfunction varSliceSize(someScript) {\n  const length = someScript.length;\n  return bufferutils_1.varuint.encodingLength(length) + length;\n}\nfunction vectorSize(someVector) {\n  const length = someVector.length;\n  return (\n    bufferutils_1.varuint.encodingLength(length) +\n    someVector.reduce((sum, witness) => {\n      return sum + varSliceSize(witness);\n    }, 0)\n  );\n}\nconst EMPTY_BUFFER = Buffer.allocUnsafe(0);\nconst EMPTY_WITNESS = [];\nconst ZERO = Buffer.from(\n  '0000000000000000000000000000000000000000000000000000000000000000',\n  'hex',\n);\nconst ONE = Buffer.from(\n  '0000000000000000000000000000000000000000000000000000000000000001',\n  'hex',\n);\nconst VALUE_UINT64_MAX = Buffer.from('ffffffffffffffff', 'hex');\nconst BLANK_OUTPUT = {\n  script: EMPTY_BUFFER,\n  valueBuffer: VALUE_UINT64_MAX,\n};\nfunction isOutput(out) {\n  return out.value !== undefined;\n}\nclass Transaction {\n  constructor() {\n    this.version = 1;\n    this.locktime = 0;\n    this.ins = [];\n    this.outs = [];\n  }\n  static fromBuffer(buffer, _NO_STRICT) {\n    const bufferReader = new bufferutils_1.BufferReader(buffer);\n    const tx = new Transaction();\n    tx.version = bufferReader.readInt32();\n    const marker = bufferReader.readUInt8();\n    const flag = bufferReader.readUInt8();\n    let hasWitnesses = false;\n    if (\n      marker === Transaction.ADVANCED_TRANSACTION_MARKER &&\n      flag === Transaction.ADVANCED_TRANSACTION_FLAG\n    ) {\n      hasWitnesses = true;\n    } else {\n      bufferReader.offset -= 2;\n    }\n    const vinLen = bufferReader.readVarInt();\n    for (let i = 0; i < vinLen; ++i) {\n      tx.ins.push({\n        hash: bufferReader.readSlice(32),\n        index: bufferReader.readUInt32(),\n        script: bufferReader.readVarSlice(),\n        sequence: bufferReader.readUInt32(),\n        witness: EMPTY_WITNESS,\n      });\n    }\n    const voutLen = bufferReader.readVarInt();\n    for (let i = 0; i < voutLen; ++i) {\n      tx.outs.push({\n        value: bufferReader.readUInt64(),\n        script: bufferReader.readVarSlice(),\n      });\n    }\n    if (hasWitnesses) {\n      for (let i = 0; i < vinLen; ++i) {\n        tx.ins[i].witness = bufferReader.readVector();\n      }\n      // was this pointless?\n      if (!tx.hasWitnesses())\n        throw new Error('Transaction has superfluous witness data');\n    }\n    tx.locktime = bufferReader.readUInt32();\n    if (_NO_STRICT) return tx;\n    if (bufferReader.offset !== buffer.length)\n      throw new Error('Transaction has unexpected data');\n    return tx;\n  }\n  static fromHex(hex) {\n    return Transaction.fromBuffer(Buffer.from(hex, 'hex'), false);\n  }\n  static isCoinbaseHash(buffer) {\n    typeforce(types.Hash256bit, buffer);\n    for (let i = 0; i < 32; ++i) {\n      if (buffer[i] !== 0) return false;\n    }\n    return true;\n  }\n  isCoinbase() {\n    return (\n      this.ins.length === 1 && Transaction.isCoinbaseHash(this.ins[0].hash)\n    );\n  }\n  addInput(hash, index, sequence, scriptSig) {\n    typeforce(\n      types.tuple(\n        types.Hash256bit,\n        types.UInt32,\n        types.maybe(types.UInt32),\n        types.maybe(types.Buffer),\n      ),\n      arguments,\n    );\n    if (types.Null(sequence)) {\n      sequence = Transaction.DEFAULT_SEQUENCE;\n    }\n    // Add the input and return the input's index\n    return (\n      this.ins.push({\n        hash,\n        index,\n        script: scriptSig || EMPTY_BUFFER,\n        sequence: sequence,\n        witness: EMPTY_WITNESS,\n      }) - 1\n    );\n  }\n  addOutput(scriptPubKey, value) {\n    typeforce(types.tuple(types.Buffer, types.Satoshi), arguments);\n    // Add the output and return the output's index\n    return (\n      this.outs.push({\n        script: scriptPubKey,\n        value,\n      }) - 1\n    );\n  }\n  hasWitnesses() {\n    return this.ins.some(x => {\n      return x.witness.length !== 0;\n    });\n  }\n  weight() {\n    const base = this.byteLength(false);\n    const total = this.byteLength(true);\n    return base * 3 + total;\n  }\n  virtualSize() {\n    return Math.ceil(this.weight() / 4);\n  }\n  byteLength(_ALLOW_WITNESS = true) {\n    const hasWitnesses = _ALLOW_WITNESS && this.hasWitnesses();\n    return (\n      (hasWitnesses ? 10 : 8) +\n      bufferutils_1.varuint.encodingLength(this.ins.length) +\n      bufferutils_1.varuint.encodingLength(this.outs.length) +\n      this.ins.reduce((sum, input) => {\n        return sum + 40 + varSliceSize(input.script);\n      }, 0) +\n      this.outs.reduce((sum, output) => {\n        return sum + 8 + varSliceSize(output.script);\n      }, 0) +\n      (hasWitnesses\n        ? this.ins.reduce((sum, input) => {\n            return sum + vectorSize(input.witness);\n          }, 0)\n        : 0)\n    );\n  }\n  clone() {\n    const newTx = new Transaction();\n    newTx.version = this.version;\n    newTx.locktime = this.locktime;\n    newTx.ins = this.ins.map(txIn => {\n      return {\n        hash: txIn.hash,\n        index: txIn.index,\n        script: txIn.script,\n        sequence: txIn.sequence,\n        witness: txIn.witness,\n      };\n    });\n    newTx.outs = this.outs.map(txOut => {\n      return {\n        script: txOut.script,\n        value: txOut.value,\n      };\n    });\n    return newTx;\n  }\n  /**\n   * Hash transaction for signing a specific input.\n   *\n   * Bitcoin uses a different hash for each signed transaction input.\n   * This method copies the transaction, makes the necessary changes based on the\n   * hashType, and then hashes the result.\n   * This hash can then be used to sign the provided transaction input.\n   */\n  hashForSignature(inIndex, prevOutScript, hashType) {\n    typeforce(\n      types.tuple(types.UInt32, types.Buffer, /* types.UInt8 */ types.Number),\n      arguments,\n    );\n    // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L29\n    if (inIndex >= this.ins.length) return ONE;\n    // ignore OP_CODESEPARATOR\n    const ourScript = bscript.compile(\n      bscript.decompile(prevOutScript).filter(x => {\n        return x !== script_1.OPS.OP_CODESEPARATOR;\n      }),\n    );\n    const txTmp = this.clone();\n    // SIGHASH_NONE: ignore all outputs? (wildcard payee)\n    if ((hashType & 0x1f) === Transaction.SIGHASH_NONE) {\n      txTmp.outs = [];\n      // ignore sequence numbers (except at inIndex)\n      txTmp.ins.forEach((input, i) => {\n        if (i === inIndex) return;\n        input.sequence = 0;\n      });\n      // SIGHASH_SINGLE: ignore all outputs, except at the same index?\n    } else if ((hashType & 0x1f) === Transaction.SIGHASH_SINGLE) {\n      // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L60\n      if (inIndex >= this.outs.length) return ONE;\n      // truncate outputs after\n      txTmp.outs.length = inIndex + 1;\n      // \"blank\" outputs before\n      for (let i = 0; i < inIndex; i++) {\n        txTmp.outs[i] = BLANK_OUTPUT;\n      }\n      // ignore sequence numbers (except at inIndex)\n      txTmp.ins.forEach((input, y) => {\n        if (y === inIndex) return;\n        input.sequence = 0;\n      });\n    }\n    // SIGHASH_ANYONECANPAY: ignore inputs entirely?\n    if (hashType & Transaction.SIGHASH_ANYONECANPAY) {\n      txTmp.ins = [txTmp.ins[inIndex]];\n      txTmp.ins[0].script = ourScript;\n      // SIGHASH_ALL: only ignore input scripts\n    } else {\n      // \"blank\" others input scripts\n      txTmp.ins.forEach(input => {\n        input.script = EMPTY_BUFFER;\n      });\n      txTmp.ins[inIndex].script = ourScript;\n    }\n    // serialize and hash\n    const buffer = Buffer.allocUnsafe(txTmp.byteLength(false) + 4);\n    buffer.writeInt32LE(hashType, buffer.length - 4);\n    txTmp.__toBuffer(buffer, 0, false);\n    return bcrypto.hash256(buffer);\n  }\n  hashForWitnessV1(inIndex, prevOutScripts, values, hashType, leafHash, annex) {\n    // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#common-signature-message\n    typeforce(\n      types.tuple(\n        types.UInt32,\n        typeforce.arrayOf(types.Buffer),\n        typeforce.arrayOf(types.Satoshi),\n        types.UInt32,\n      ),\n      arguments,\n    );\n    if (\n      values.length !== this.ins.length ||\n      prevOutScripts.length !== this.ins.length\n    ) {\n      throw new Error('Must supply prevout script and value for all inputs');\n    }\n    const outputType =\n      hashType === Transaction.SIGHASH_DEFAULT\n        ? Transaction.SIGHASH_ALL\n        : hashType & Transaction.SIGHASH_OUTPUT_MASK;\n    const inputType = hashType & Transaction.SIGHASH_INPUT_MASK;\n    const isAnyoneCanPay = inputType === Transaction.SIGHASH_ANYONECANPAY;\n    const isNone = outputType === Transaction.SIGHASH_NONE;\n    const isSingle = outputType === Transaction.SIGHASH_SINGLE;\n    let hashPrevouts = EMPTY_BUFFER;\n    let hashAmounts = EMPTY_BUFFER;\n    let hashScriptPubKeys = EMPTY_BUFFER;\n    let hashSequences = EMPTY_BUFFER;\n    let hashOutputs = EMPTY_BUFFER;\n    if (!isAnyoneCanPay) {\n      let bufferWriter = bufferutils_1.BufferWriter.withCapacity(\n        36 * this.ins.length,\n      );\n      this.ins.forEach(txIn => {\n        bufferWriter.writeSlice(txIn.hash);\n        bufferWriter.writeUInt32(txIn.index);\n      });\n      hashPrevouts = bcrypto.sha256(bufferWriter.end());\n      bufferWriter = bufferutils_1.BufferWriter.withCapacity(\n        8 * this.ins.length,\n      );\n      values.forEach(value => bufferWriter.writeUInt64(value));\n      hashAmounts = bcrypto.sha256(bufferWriter.end());\n      bufferWriter = bufferutils_1.BufferWriter.withCapacity(\n        prevOutScripts.map(varSliceSize).reduce((a, b) => a + b),\n      );\n      prevOutScripts.forEach(prevOutScript =>\n        bufferWriter.writeVarSlice(prevOutScript),\n      );\n      hashScriptPubKeys = bcrypto.sha256(bufferWriter.end());\n      bufferWriter = bufferutils_1.BufferWriter.withCapacity(\n        4 * this.ins.length,\n      );\n      this.ins.forEach(txIn => bufferWriter.writeUInt32(txIn.sequence));\n      hashSequences = bcrypto.sha256(bufferWriter.end());\n    }\n    if (!(isNone || isSingle)) {\n      const txOutsSize = this.outs\n        .map(output => 8 + varSliceSize(output.script))\n        .reduce((a, b) => a + b);\n      const bufferWriter = bufferutils_1.BufferWriter.withCapacity(txOutsSize);\n      this.outs.forEach(out => {\n        bufferWriter.writeUInt64(out.value);\n        bufferWriter.writeVarSlice(out.script);\n      });\n      hashOutputs = bcrypto.sha256(bufferWriter.end());\n    } else if (isSingle && inIndex < this.outs.length) {\n      const output = this.outs[inIndex];\n      const bufferWriter = bufferutils_1.BufferWriter.withCapacity(\n        8 + varSliceSize(output.script),\n      );\n      bufferWriter.writeUInt64(output.value);\n      bufferWriter.writeVarSlice(output.script);\n      hashOutputs = bcrypto.sha256(bufferWriter.end());\n    }\n    const spendType = (leafHash ? 2 : 0) + (annex ? 1 : 0);\n    // Length calculation from:\n    // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#cite_note-14\n    // With extension from:\n    // https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki#signature-validation\n    const sigMsgSize =\n      174 -\n      (isAnyoneCanPay ? 49 : 0) -\n      (isNone ? 32 : 0) +\n      (annex ? 32 : 0) +\n      (leafHash ? 37 : 0);\n    const sigMsgWriter = bufferutils_1.BufferWriter.withCapacity(sigMsgSize);\n    sigMsgWriter.writeUInt8(hashType);\n    // Transaction\n    sigMsgWriter.writeInt32(this.version);\n    sigMsgWriter.writeUInt32(this.locktime);\n    sigMsgWriter.writeSlice(hashPrevouts);\n    sigMsgWriter.writeSlice(hashAmounts);\n    sigMsgWriter.writeSlice(hashScriptPubKeys);\n    sigMsgWriter.writeSlice(hashSequences);\n    if (!(isNone || isSingle)) {\n      sigMsgWriter.writeSlice(hashOutputs);\n    }\n    // Input\n    sigMsgWriter.writeUInt8(spendType);\n    if (isAnyoneCanPay) {\n      const input = this.ins[inIndex];\n      sigMsgWriter.writeSlice(input.hash);\n      sigMsgWriter.writeUInt32(input.index);\n      sigMsgWriter.writeUInt64(values[inIndex]);\n      sigMsgWriter.writeVarSlice(prevOutScripts[inIndex]);\n      sigMsgWriter.writeUInt32(input.sequence);\n    } else {\n      sigMsgWriter.writeUInt32(inIndex);\n    }\n    if (annex) {\n      const bufferWriter = bufferutils_1.BufferWriter.withCapacity(\n        varSliceSize(annex),\n      );\n      bufferWriter.writeVarSlice(annex);\n      sigMsgWriter.writeSlice(bcrypto.sha256(bufferWriter.end()));\n    }\n    // Output\n    if (isSingle) {\n      sigMsgWriter.writeSlice(hashOutputs);\n    }\n    // BIP342 extension\n    if (leafHash) {\n      sigMsgWriter.writeSlice(leafHash);\n      sigMsgWriter.writeUInt8(0);\n      sigMsgWriter.writeUInt32(0xffffffff);\n    }\n    // Extra zero byte because:\n    // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#cite_note-19\n    return bcrypto.taggedHash(\n      'TapSighash',\n      Buffer.concat([Buffer.of(0x00), sigMsgWriter.end()]),\n    );\n  }\n  hashForWitnessV0(inIndex, prevOutScript, value, hashType) {\n    typeforce(\n      types.tuple(types.UInt32, types.Buffer, types.Satoshi, types.UInt32),\n      arguments,\n    );\n    let tbuffer = Buffer.from([]);\n    let bufferWriter;\n    let hashOutputs = ZERO;\n    let hashPrevouts = ZERO;\n    let hashSequence = ZERO;\n    if (!(hashType & Transaction.SIGHASH_ANYONECANPAY)) {\n      tbuffer = Buffer.allocUnsafe(36 * this.ins.length);\n      bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n      this.ins.forEach(txIn => {\n        bufferWriter.writeSlice(txIn.hash);\n        bufferWriter.writeUInt32(txIn.index);\n      });\n      hashPrevouts = bcrypto.hash256(tbuffer);\n    }\n    if (\n      !(hashType & Transaction.SIGHASH_ANYONECANPAY) &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_SINGLE &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_NONE\n    ) {\n      tbuffer = Buffer.allocUnsafe(4 * this.ins.length);\n      bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n      this.ins.forEach(txIn => {\n        bufferWriter.writeUInt32(txIn.sequence);\n      });\n      hashSequence = bcrypto.hash256(tbuffer);\n    }\n    if (\n      (hashType & 0x1f) !== Transaction.SIGHASH_SINGLE &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_NONE\n    ) {\n      const txOutsSize = this.outs.reduce((sum, output) => {\n        return sum + 8 + varSliceSize(output.script);\n      }, 0);\n      tbuffer = Buffer.allocUnsafe(txOutsSize);\n      bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n      this.outs.forEach(out => {\n        bufferWriter.writeUInt64(out.value);\n        bufferWriter.writeVarSlice(out.script);\n      });\n      hashOutputs = bcrypto.hash256(tbuffer);\n    } else if (\n      (hashType & 0x1f) === Transaction.SIGHASH_SINGLE &&\n      inIndex < this.outs.length\n    ) {\n      const output = this.outs[inIndex];\n      tbuffer = Buffer.allocUnsafe(8 + varSliceSize(output.script));\n      bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n      bufferWriter.writeUInt64(output.value);\n      bufferWriter.writeVarSlice(output.script);\n      hashOutputs = bcrypto.hash256(tbuffer);\n    }\n    tbuffer = Buffer.allocUnsafe(156 + varSliceSize(prevOutScript));\n    bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n    const input = this.ins[inIndex];\n    bufferWriter.writeInt32(this.version);\n    bufferWriter.writeSlice(hashPrevouts);\n    bufferWriter.writeSlice(hashSequence);\n    bufferWriter.writeSlice(input.hash);\n    bufferWriter.writeUInt32(input.index);\n    bufferWriter.writeVarSlice(prevOutScript);\n    bufferWriter.writeUInt64(value);\n    bufferWriter.writeUInt32(input.sequence);\n    bufferWriter.writeSlice(hashOutputs);\n    bufferWriter.writeUInt32(this.locktime);\n    bufferWriter.writeUInt32(hashType);\n    return bcrypto.hash256(tbuffer);\n  }\n  getHash(forWitness) {\n    // wtxid for coinbase is always 32 bytes of 0x00\n    if (forWitness && this.isCoinbase()) return Buffer.alloc(32, 0);\n    return bcrypto.hash256(this.__toBuffer(undefined, undefined, forWitness));\n  }\n  getId() {\n    // transaction hash's are displayed in reverse order\n    return (0, bufferutils_1.reverseBuffer)(this.getHash(false)).toString(\n      'hex',\n    );\n  }\n  toBuffer(buffer, initialOffset) {\n    return this.__toBuffer(buffer, initialOffset, true);\n  }\n  toHex() {\n    return this.toBuffer(undefined, undefined).toString('hex');\n  }\n  setInputScript(index, scriptSig) {\n    typeforce(types.tuple(types.Number, types.Buffer), arguments);\n    this.ins[index].script = scriptSig;\n  }\n  setWitness(index, witness) {\n    typeforce(types.tuple(types.Number, [types.Buffer]), arguments);\n    this.ins[index].witness = witness;\n  }\n  __toBuffer(buffer, initialOffset, _ALLOW_WITNESS = false) {\n    if (!buffer) buffer = Buffer.allocUnsafe(this.byteLength(_ALLOW_WITNESS));\n    const bufferWriter = new bufferutils_1.BufferWriter(\n      buffer,\n      initialOffset || 0,\n    );\n    bufferWriter.writeInt32(this.version);\n    const hasWitnesses = _ALLOW_WITNESS && this.hasWitnesses();\n    if (hasWitnesses) {\n      bufferWriter.writeUInt8(Transaction.ADVANCED_TRANSACTION_MARKER);\n      bufferWriter.writeUInt8(Transaction.ADVANCED_TRANSACTION_FLAG);\n    }\n    bufferWriter.writeVarInt(this.ins.length);\n    this.ins.forEach(txIn => {\n      bufferWriter.writeSlice(txIn.hash);\n      bufferWriter.writeUInt32(txIn.index);\n      bufferWriter.writeVarSlice(txIn.script);\n      bufferWriter.writeUInt32(txIn.sequence);\n    });\n    bufferWriter.writeVarInt(this.outs.length);\n    this.outs.forEach(txOut => {\n      if (isOutput(txOut)) {\n        bufferWriter.writeUInt64(txOut.value);\n      } else {\n        bufferWriter.writeSlice(txOut.valueBuffer);\n      }\n      bufferWriter.writeVarSlice(txOut.script);\n    });\n    if (hasWitnesses) {\n      this.ins.forEach(input => {\n        bufferWriter.writeVector(input.witness);\n      });\n    }\n    bufferWriter.writeUInt32(this.locktime);\n    // avoid slicing unless necessary\n    if (initialOffset !== undefined)\n      return buffer.slice(initialOffset, bufferWriter.offset);\n    return buffer;\n  }\n}\nexports.Transaction = Transaction;\nTransaction.DEFAULT_SEQUENCE = 0xffffffff;\nTransaction.SIGHASH_DEFAULT = 0x00;\nTransaction.SIGHASH_ALL = 0x01;\nTransaction.SIGHASH_NONE = 0x02;\nTransaction.SIGHASH_SINGLE = 0x03;\nTransaction.SIGHASH_ANYONECANPAY = 0x80;\nTransaction.SIGHASH_OUTPUT_MASK = 0x03;\nTransaction.SIGHASH_INPUT_MASK = 0x80;\nTransaction.ADVANCED_TRANSACTION_MARKER = 0x00;\nTransaction.ADVANCED_TRANSACTION_FLAG = 0x01;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.oneOf = exports.Null = exports.BufferN = exports.Function = exports.UInt32 = exports.UInt8 = exports.tuple = exports.maybe = exports.Hex = exports.Buffer = exports.String = exports.Boolean = exports.Array = exports.Number = exports.Hash256bit = exports.Hash160bit = exports.Buffer256bit = exports.Network = exports.ECPoint = exports.Satoshi = exports.Signer = exports.BIP32Path = exports.UInt31 = exports.isPoint = exports.typeforce = void 0;\nconst buffer_1 = require('buffer');\nexports.typeforce = require('typeforce');\nconst ZERO32 = buffer_1.Buffer.alloc(32, 0);\nconst EC_P = buffer_1.Buffer.from(\n  'fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f',\n  'hex',\n);\nfunction isPoint(p) {\n  if (!buffer_1.Buffer.isBuffer(p)) return false;\n  if (p.length < 33) return false;\n  const t = p[0];\n  const x = p.slice(1, 33);\n  if (x.compare(ZERO32) === 0) return false;\n  if (x.compare(EC_P) >= 0) return false;\n  if ((t === 0x02 || t === 0x03) && p.length === 33) {\n    return true;\n  }\n  const y = p.slice(33);\n  if (y.compare(ZERO32) === 0) return false;\n  if (y.compare(EC_P) >= 0) return false;\n  if (t === 0x04 && p.length === 65) return true;\n  return false;\n}\nexports.isPoint = isPoint;\nconst UINT31_MAX = Math.pow(2, 31) - 1;\nfunction UInt31(value) {\n  return exports.typeforce.UInt32(value) && value <= UINT31_MAX;\n}\nexports.UInt31 = UInt31;\nfunction BIP32Path(value) {\n  return (\n    exports.typeforce.String(value) && !!value.match(/^(m\\/)?(\\d+'?\\/)*\\d+'?$/)\n  );\n}\nexports.BIP32Path = BIP32Path;\nBIP32Path.toJSON = () => {\n  return 'BIP32 derivation path';\n};\nfunction Signer(obj) {\n  return (\n    (exports.typeforce.Buffer(obj.publicKey) ||\n      typeof obj.getPublicKey === 'function') &&\n    typeof obj.sign === 'function'\n  );\n}\nexports.Signer = Signer;\nconst SATOSHI_MAX = 21 * 1e14;\nfunction Satoshi(value) {\n  return exports.typeforce.UInt53(value) && value <= SATOSHI_MAX;\n}\nexports.Satoshi = Satoshi;\n// external dependent types\nexports.ECPoint = exports.typeforce.quacksLike('Point');\n// exposed, external API\nexports.Network = exports.typeforce.compile({\n  messagePrefix: exports.typeforce.oneOf(\n    exports.typeforce.Buffer,\n    exports.typeforce.String,\n  ),\n  bip32: {\n    public: exports.typeforce.UInt32,\n    private: exports.typeforce.UInt32,\n  },\n  pubKeyHash: exports.typeforce.UInt8,\n  scriptHash: exports.typeforce.UInt8,\n  wif: exports.typeforce.UInt8,\n});\nexports.Buffer256bit = exports.typeforce.BufferN(32);\nexports.Hash160bit = exports.typeforce.BufferN(20);\nexports.Hash256bit = exports.typeforce.BufferN(32);\nexports.Number = exports.typeforce.Number; // tslint:disable-line variable-name\nexports.Array = exports.typeforce.Array;\nexports.Boolean = exports.typeforce.Boolean; // tslint:disable-line variable-name\nexports.String = exports.typeforce.String; // tslint:disable-line variable-name\nexports.Buffer = exports.typeforce.Buffer;\nexports.Hex = exports.typeforce.Hex;\nexports.maybe = exports.typeforce.maybe;\nexports.tuple = exports.typeforce.tuple;\nexports.UInt8 = exports.typeforce.UInt8;\nexports.UInt32 = exports.typeforce.UInt32;\nexports.Function = exports.typeforce.Function;\nexports.BufferN = exports.typeforce.BufferN;\nexports.Null = exports.typeforce.Null;\nexports.oneOf = exports.typeforce.oneOf;\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n\nvar base58 = require('bs58')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (checksumFn) {\n  // Encode a buffer as a base58-check encoded string\n  function encode (payload) {\n    var checksum = checksumFn(payload)\n\n    return base58.encode(Buffer.concat([\n      payload,\n      checksum\n    ], payload.length + 4))\n  }\n\n  function decodeRaw (buffer) {\n    var payload = buffer.slice(0, -4)\n    var checksum = buffer.slice(-4)\n    var newChecksum = checksumFn(payload)\n\n    if (checksum[0] ^ newChecksum[0] |\n        checksum[1] ^ newChecksum[1] |\n        checksum[2] ^ newChecksum[2] |\n        checksum[3] ^ newChecksum[3]) return\n\n    return payload\n  }\n\n  // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n  function decodeUnsafe (string) {\n    var buffer = base58.decodeUnsafe(string)\n    if (!buffer) return\n\n    return decodeRaw(buffer)\n  }\n\n  function decode (string) {\n    var buffer = base58.decode(string)\n    var payload = decodeRaw(buffer, checksumFn)\n    if (!payload) throw new Error('Invalid checksum')\n    return payload\n  }\n\n  return {\n    encode: encode,\n    decode: decode,\n    decodeUnsafe: decodeUnsafe\n  }\n}\n","'use strict'\n\nvar createHash = require('create-hash')\nvar bs58checkBase = require('./base')\n\n// SHA256(SHA256(buffer))\nfunction sha256x2 (buffer) {\n  var tmp = createHash('sha256').update(buffer).digest()\n  return createHash('sha256').update(tmp).digest()\n}\n\nmodule.exports = bs58checkBase(sha256x2)\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","exports.quote = function (xs) {\n    return xs.map(function (s) {\n        if (s && typeof s === 'object') {\n            return s.op.replace(/(.)/g, '\\\\$1');\n        }\n        else if (/[\"\\s]/.test(s) && !/'/.test(s)) {\n            return \"'\" + s.replace(/(['\\\\])/g, '\\\\$1') + \"'\";\n        }\n        else if (/[\"'\\s]/.test(s)) {\n            return '\"' + s.replace(/([\"\\\\$`!])/g, '\\\\$1') + '\"';\n        }\n        else {\n            return String(s).replace(/([A-Za-z]:)?([#!\"$&'()*,:;<=>?@\\[\\\\\\]^`{|}])/g, '$1\\\\$2');\n        }\n    }).join(' ');\n};\n\n// '<(' is process substitution operator and\n// can be parsed the same as control operator\nvar CONTROL = '(?:' + [\n    '\\\\|\\\\|', '\\\\&\\\\&', ';;', '\\\\|\\\\&', '\\\\<\\\\(', '>>', '>\\\\&', '[&;()|<>]'\n].join('|') + ')';\nvar META = '|&;()<> \\\\t';\nvar BAREWORD = '(\\\\\\\\[\\'\"' + META + ']|[^\\\\s\\'\"' + META + '])+';\nvar SINGLE_QUOTE = '\"((\\\\\\\\\"|[^\"])*?)\"';\nvar DOUBLE_QUOTE = '\\'((\\\\\\\\\\'|[^\\'])*?)\\'';\n\nvar TOKEN = '';\nfor (var i = 0; i < 4; i++) {\n    TOKEN += (Math.pow(16,8)*Math.random()).toString(16);\n}\n\nexports.parse = function (s, env, opts) {\n    var mapped = parse(s, env, opts);\n    if (typeof env !== 'function') return mapped;\n    return mapped.reduce(function (acc, s) {\n        if (typeof s === 'object') return acc.concat(s);\n        var xs = s.split(RegExp('(' + TOKEN + '.*?' + TOKEN + ')', 'g'));\n        if (xs.length === 1) return acc.concat(xs[0]);\n        return acc.concat(xs.filter(Boolean).map(function (x) {\n            if (RegExp('^' + TOKEN).test(x)) {\n                return JSON.parse(x.split(TOKEN)[1]);\n            }\n            else return x;\n        }));\n    }, []);\n};\n\nfunction parse (s, env, opts) {\n    var chunker = new RegExp([\n        '(' + CONTROL + ')', // control chars\n        '(' + BAREWORD + '|' + SINGLE_QUOTE + '|' + DOUBLE_QUOTE + ')*'\n    ].join('|'), 'g');\n    var match = s.match(chunker).filter(Boolean);\n    var commented = false;\n\n    if (!match) return [];\n    if (!env) env = {};\n    if (!opts) opts = {};\n    return match.map(function (s, j) {\n        if (commented) {\n            return;\n        }\n        if (RegExp('^' + CONTROL + '$').test(s)) {\n            return { op: s };\n        }\n\n        // Hand-written scanner/parser for Bash quoting rules:\n        //\n        //  1. inside single quotes, all characters are printed literally.\n        //  2. inside double quotes, all characters are printed literally\n        //     except variables prefixed by '$' and backslashes followed by\n        //     either a double quote or another backslash.\n        //  3. outside of any quotes, backslashes are treated as escape\n        //     characters and not printed (unless they are themselves escaped)\n        //  4. quote context can switch mid-token if there is no whitespace\n        //     between the two quote contexts (e.g. all'one'\"token\" parses as\n        //     \"allonetoken\")\n        var SQ = \"'\";\n        var DQ = '\"';\n        var DS = '$';\n        var BS = opts.escape || '\\\\';\n        var quote = false;\n        var esc = false;\n        var out = '';\n        var isGlob = false;\n\n        for (var i = 0, len = s.length; i < len; i++) {\n            var c = s.charAt(i);\n            isGlob = isGlob || (!quote && (c === '*' || c === '?'));\n            if (esc) {\n                out += c;\n                esc = false;\n            }\n            else if (quote) {\n                if (c === quote) {\n                    quote = false;\n                }\n                else if (quote == SQ) {\n                    out += c;\n                }\n                else { // Double quote\n                    if (c === BS) {\n                        i += 1;\n                        c = s.charAt(i);\n                        if (c === DQ || c === BS || c === DS) {\n                            out += c;\n                        } else {\n                            out += BS + c;\n                        }\n                    }\n                    else if (c === DS) {\n                        out += parseEnvVar();\n                    }\n                    else {\n                        out += c;\n                    }\n                }\n            }\n            else if (c === DQ || c === SQ) {\n                quote = c;\n            }\n            else if (RegExp('^' + CONTROL + '$').test(c)) {\n                return { op: s };\n            }\n            else if (RegExp('^#$').test(c)) {\n                commented = true;\n                if (out.length){\n                    return [out, { comment: s.slice(i+1) + match.slice(j+1).join(' ') }];\n                }\n                return [{ comment: s.slice(i+1) + match.slice(j+1).join(' ') }];\n            }\n            else if (c === BS) {\n                esc = true;\n            }\n            else if (c === DS) {\n                out += parseEnvVar();\n            }\n            else out += c;\n        }\n\n        if (isGlob) return {op: 'glob', pattern: out};\n\n        return out;\n\n        function parseEnvVar() {\n            i += 1;\n            var varend, varname;\n            //debugger\n            if (s.charAt(i) === '{') {\n                i += 1;\n                if (s.charAt(i) === '}') {\n                    throw new Error(\"Bad substitution: \" + s.substr(i - 2, 3));\n                }\n                varend = s.indexOf('}', i);\n                if (varend < 0) {\n                    throw new Error(\"Bad substitution: \" + s.substr(i));\n                }\n                varname = s.substr(i, varend - i);\n                i = varend;\n            }\n            else if (/[*@#?$!_\\-]/.test(s.charAt(i))) {\n                varname = s.charAt(i);\n                i += 1;\n            }\n            else {\n                varend = s.substr(i).match(/[^\\w\\d_]/);\n                if (!varend) {\n                    varname = s.substr(i);\n                    i = s.length;\n                } else {\n                    varname = s.substr(i, varend.index);\n                    i += varend.index - 1;\n                }\n            }\n            return getVar(null, '', varname);\n        }\n    })\n    // finalize parsed aruments\n    .reduce(function(prev, arg){\n        if (arg === undefined){\n            return prev;\n        }\n        return prev.concat(arg);\n    },[]);\n\n    function getVar (_, pre, key) {\n        var r = typeof env === 'function' ? env(key) : env[key];\n        if (r === undefined && key != '')\n            r = '';\n        else if (r === undefined)\n            r = '$';\n\n        if (typeof r === 'object') {\n            return pre + TOKEN + JSON.stringify(r) + TOKEN;\n        }\n        else return pre + r;\n    }\n}\n","var native = require('./native')\n\nfunction getTypeName (fn) {\n  return fn.name || fn.toString().match(/function (.*?)\\s*\\(/)[1]\n}\n\nfunction getValueTypeName (value) {\n  return native.Nil(value) ? '' : getTypeName(value.constructor)\n}\n\nfunction getValue (value) {\n  if (native.Function(value)) return ''\n  if (native.String(value)) return JSON.stringify(value)\n  if (value && native.Object(value)) return ''\n  return value\n}\n\nfunction captureStackTrace (e, t) {\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(e, t)\n  }\n}\n\nfunction tfJSON (type) {\n  if (native.Function(type)) return type.toJSON ? type.toJSON() : getTypeName(type)\n  if (native.Array(type)) return 'Array'\n  if (type && native.Object(type)) return 'Object'\n\n  return type !== undefined ? type : ''\n}\n\nfunction tfErrorString (type, value, valueTypeName) {\n  var valueJson = getValue(value)\n\n  return 'Expected ' + tfJSON(type) + ', got' +\n    (valueTypeName !== '' ? ' ' + valueTypeName : '') +\n    (valueJson !== '' ? ' ' + valueJson : '')\n}\n\nfunction TfTypeError (type, value, valueTypeName) {\n  valueTypeName = valueTypeName || getValueTypeName(value)\n  this.message = tfErrorString(type, value, valueTypeName)\n\n  captureStackTrace(this, TfTypeError)\n  this.__type = type\n  this.__value = value\n  this.__valueTypeName = valueTypeName\n}\n\nTfTypeError.prototype = Object.create(Error.prototype)\nTfTypeError.prototype.constructor = TfTypeError\n\nfunction tfPropertyErrorString (type, label, name, value, valueTypeName) {\n  var description = '\" of type '\n  if (label === 'key') description = '\" with key type '\n\n  return tfErrorString('property \"' + tfJSON(name) + description + tfJSON(type), value, valueTypeName)\n}\n\nfunction TfPropertyTypeError (type, property, label, value, valueTypeName) {\n  if (type) {\n    valueTypeName = valueTypeName || getValueTypeName(value)\n    this.message = tfPropertyErrorString(type, label, property, value, valueTypeName)\n  } else {\n    this.message = 'Unexpected property \"' + property + '\"'\n  }\n\n  captureStackTrace(this, TfTypeError)\n  this.__label = label\n  this.__property = property\n  this.__type = type\n  this.__value = value\n  this.__valueTypeName = valueTypeName\n}\n\nTfPropertyTypeError.prototype = Object.create(Error.prototype)\nTfPropertyTypeError.prototype.constructor = TfTypeError\n\nfunction tfCustomError (expected, actual) {\n  return new TfTypeError(expected, {}, actual)\n}\n\nfunction tfSubError (e, property, label) {\n  // sub child?\n  if (e instanceof TfPropertyTypeError) {\n    property = property + '.' + e.__property\n\n    e = new TfPropertyTypeError(\n      e.__type, property, e.__label, e.__value, e.__valueTypeName\n    )\n\n  // child?\n  } else if (e instanceof TfTypeError) {\n    e = new TfPropertyTypeError(\n      e.__type, property, label, e.__value, e.__valueTypeName\n    )\n  }\n\n  captureStackTrace(e)\n  return e\n}\n\nmodule.exports = {\n  TfTypeError: TfTypeError,\n  TfPropertyTypeError: TfPropertyTypeError,\n  tfCustomError: tfCustomError,\n  tfSubError: tfSubError,\n  tfJSON: tfJSON,\n  getValueTypeName: getValueTypeName\n}\n","var NATIVE = require('./native')\nvar ERRORS = require('./errors')\n\nfunction _Buffer (value) {\n  return Buffer.isBuffer(value)\n}\n\nfunction Hex (value) {\n  return typeof value === 'string' && /^([0-9a-f]{2})+$/i.test(value)\n}\n\nfunction _LengthN (type, length) {\n  var name = type.toJSON()\n\n  function Length (value) {\n    if (!type(value)) return false\n    if (value.length === length) return true\n\n    throw ERRORS.tfCustomError(name + '(Length: ' + length + ')', name + '(Length: ' + value.length + ')')\n  }\n  Length.toJSON = function () { return name }\n\n  return Length\n}\n\nvar _ArrayN = _LengthN.bind(null, NATIVE.Array)\nvar _BufferN = _LengthN.bind(null, _Buffer)\nvar _HexN = _LengthN.bind(null, Hex)\nvar _StringN = _LengthN.bind(null, NATIVE.String)\n\nfunction Range (a, b, f) {\n  f = f || NATIVE.Number\n  function _range (value, strict) {\n    return f(value, strict) && (value > a) && (value < b)\n  }\n  _range.toJSON = function () {\n    return `${f.toJSON()} between [${a}, ${b}]`\n  }\n  return _range\n}\n\nvar INT53_MAX = Math.pow(2, 53) - 1\n\nfunction Finite (value) {\n  return typeof value === 'number' && isFinite(value)\n}\nfunction Int8 (value) { return ((value << 24) >> 24) === value }\nfunction Int16 (value) { return ((value << 16) >> 16) === value }\nfunction Int32 (value) { return (value | 0) === value }\nfunction Int53 (value) {\n  return typeof value === 'number' &&\n    value >= -INT53_MAX &&\n    value <= INT53_MAX &&\n    Math.floor(value) === value\n}\nfunction UInt8 (value) { return (value & 0xff) === value }\nfunction UInt16 (value) { return (value & 0xffff) === value }\nfunction UInt32 (value) { return (value >>> 0) === value }\nfunction UInt53 (value) {\n  return typeof value === 'number' &&\n    value >= 0 &&\n    value <= INT53_MAX &&\n    Math.floor(value) === value\n}\n\nvar types = {\n  ArrayN: _ArrayN,\n  Buffer: _Buffer,\n  BufferN: _BufferN,\n  Finite: Finite,\n  Hex: Hex,\n  HexN: _HexN,\n  Int8: Int8,\n  Int16: Int16,\n  Int32: Int32,\n  Int53: Int53,\n  Range: Range,\n  StringN: _StringN,\n  UInt8: UInt8,\n  UInt16: UInt16,\n  UInt32: UInt32,\n  UInt53: UInt53\n}\n\nfor (var typeName in types) {\n  types[typeName].toJSON = function (t) {\n    return t\n  }.bind(null, typeName)\n}\n\nmodule.exports = types\n","var ERRORS = require('./errors')\nvar NATIVE = require('./native')\n\n// short-hand\nvar tfJSON = ERRORS.tfJSON\nvar TfTypeError = ERRORS.TfTypeError\nvar TfPropertyTypeError = ERRORS.TfPropertyTypeError\nvar tfSubError = ERRORS.tfSubError\nvar getValueTypeName = ERRORS.getValueTypeName\n\nvar TYPES = {\n  arrayOf: function arrayOf (type, options) {\n    type = compile(type)\n    options = options || {}\n\n    function _arrayOf (array, strict) {\n      if (!NATIVE.Array(array)) return false\n      if (NATIVE.Nil(array)) return false\n      if (options.minLength !== undefined && array.length < options.minLength) return false\n      if (options.maxLength !== undefined && array.length > options.maxLength) return false\n      if (options.length !== undefined && array.length !== options.length) return false\n\n      return array.every(function (value, i) {\n        try {\n          return typeforce(type, value, strict)\n        } catch (e) {\n          throw tfSubError(e, i)\n        }\n      })\n    }\n    _arrayOf.toJSON = function () {\n      var str = '[' + tfJSON(type) + ']'\n      if (options.length !== undefined) {\n        str += '{' + options.length + '}'\n      } else if (options.minLength !== undefined || options.maxLength !== undefined) {\n        str += '{' +\n          (options.minLength === undefined ? 0 : options.minLength) + ',' +\n          (options.maxLength === undefined ? Infinity : options.maxLength) + '}'\n      }\n      return str\n    }\n\n    return _arrayOf\n  },\n\n  maybe: function maybe (type) {\n    type = compile(type)\n\n    function _maybe (value, strict) {\n      return NATIVE.Nil(value) || type(value, strict, maybe)\n    }\n    _maybe.toJSON = function () { return '?' + tfJSON(type) }\n\n    return _maybe\n  },\n\n  map: function map (propertyType, propertyKeyType) {\n    propertyType = compile(propertyType)\n    if (propertyKeyType) propertyKeyType = compile(propertyKeyType)\n\n    function _map (value, strict) {\n      if (!NATIVE.Object(value)) return false\n      if (NATIVE.Nil(value)) return false\n\n      for (var propertyName in value) {\n        try {\n          if (propertyKeyType) {\n            typeforce(propertyKeyType, propertyName, strict)\n          }\n        } catch (e) {\n          throw tfSubError(e, propertyName, 'key')\n        }\n\n        try {\n          var propertyValue = value[propertyName]\n          typeforce(propertyType, propertyValue, strict)\n        } catch (e) {\n          throw tfSubError(e, propertyName)\n        }\n      }\n\n      return true\n    }\n\n    if (propertyKeyType) {\n      _map.toJSON = function () {\n        return '{' + tfJSON(propertyKeyType) + ': ' + tfJSON(propertyType) + '}'\n      }\n    } else {\n      _map.toJSON = function () { return '{' + tfJSON(propertyType) + '}' }\n    }\n\n    return _map\n  },\n\n  object: function object (uncompiled) {\n    var type = {}\n\n    for (var typePropertyName in uncompiled) {\n      type[typePropertyName] = compile(uncompiled[typePropertyName])\n    }\n\n    function _object (value, strict) {\n      if (!NATIVE.Object(value)) return false\n      if (NATIVE.Nil(value)) return false\n\n      var propertyName\n\n      try {\n        for (propertyName in type) {\n          var propertyType = type[propertyName]\n          var propertyValue = value[propertyName]\n\n          typeforce(propertyType, propertyValue, strict)\n        }\n      } catch (e) {\n        throw tfSubError(e, propertyName)\n      }\n\n      if (strict) {\n        for (propertyName in value) {\n          if (type[propertyName]) continue\n\n          throw new TfPropertyTypeError(undefined, propertyName)\n        }\n      }\n\n      return true\n    }\n    _object.toJSON = function () { return tfJSON(type) }\n\n    return _object\n  },\n\n  anyOf: function anyOf () {\n    var types = [].slice.call(arguments).map(compile)\n\n    function _anyOf (value, strict) {\n      return types.some(function (type) {\n        try {\n          return typeforce(type, value, strict)\n        } catch (e) {\n          return false\n        }\n      })\n    }\n    _anyOf.toJSON = function () { return types.map(tfJSON).join('|') }\n\n    return _anyOf\n  },\n\n  allOf: function allOf () {\n    var types = [].slice.call(arguments).map(compile)\n\n    function _allOf (value, strict) {\n      return types.every(function (type) {\n        try {\n          return typeforce(type, value, strict)\n        } catch (e) {\n          return false\n        }\n      })\n    }\n    _allOf.toJSON = function () { return types.map(tfJSON).join(' & ') }\n\n    return _allOf\n  },\n\n  quacksLike: function quacksLike (type) {\n    function _quacksLike (value) {\n      return type === getValueTypeName(value)\n    }\n    _quacksLike.toJSON = function () { return type }\n\n    return _quacksLike\n  },\n\n  tuple: function tuple () {\n    var types = [].slice.call(arguments).map(compile)\n\n    function _tuple (values, strict) {\n      if (NATIVE.Nil(values)) return false\n      if (NATIVE.Nil(values.length)) return false\n      if (strict && (values.length !== types.length)) return false\n\n      return types.every(function (type, i) {\n        try {\n          return typeforce(type, values[i], strict)\n        } catch (e) {\n          throw tfSubError(e, i)\n        }\n      })\n    }\n    _tuple.toJSON = function () { return '(' + types.map(tfJSON).join(', ') + ')' }\n\n    return _tuple\n  },\n\n  value: function value (expected) {\n    function _value (actual) {\n      return actual === expected\n    }\n    _value.toJSON = function () { return expected }\n\n    return _value\n  }\n}\n\n// TODO: deprecate\nTYPES.oneOf = TYPES.anyOf\n\nfunction compile (type) {\n  if (NATIVE.String(type)) {\n    if (type[0] === '?') return TYPES.maybe(type.slice(1))\n\n    return NATIVE[type] || TYPES.quacksLike(type)\n  } else if (type && NATIVE.Object(type)) {\n    if (NATIVE.Array(type)) {\n      if (type.length !== 1) throw new TypeError('Expected compile() parameter of type Array of length 1')\n      return TYPES.arrayOf(type[0])\n    }\n\n    return TYPES.object(type)\n  } else if (NATIVE.Function(type)) {\n    return type\n  }\n\n  return TYPES.value(type)\n}\n\nfunction typeforce (type, value, strict, surrogate) {\n  if (NATIVE.Function(type)) {\n    if (type(value, strict)) return true\n\n    throw new TfTypeError(surrogate || type, value)\n  }\n\n  // JIT\n  return typeforce(compile(type), value, strict)\n}\n\n// assign types to typeforce function\nfor (var typeName in NATIVE) {\n  typeforce[typeName] = NATIVE[typeName]\n}\n\nfor (typeName in TYPES) {\n  typeforce[typeName] = TYPES[typeName]\n}\n\nvar EXTRA = require('./extra')\nfor (typeName in EXTRA) {\n  typeforce[typeName] = EXTRA[typeName]\n}\n\ntypeforce.compile = compile\ntypeforce.TfTypeError = TfTypeError\ntypeforce.TfPropertyTypeError = TfPropertyTypeError\n\nmodule.exports = typeforce\n","var types = {\n  Array: function (value) { return value !== null && value !== undefined && value.constructor === Array },\n  Boolean: function (value) { return typeof value === 'boolean' },\n  Function: function (value) { return typeof value === 'function' },\n  Nil: function (value) { return value === undefined || value === null },\n  Number: function (value) { return typeof value === 'number' },\n  Object: function (value) { return typeof value === 'object' },\n  String: function (value) { return typeof value === 'string' },\n  '': function () { return true }\n}\n\n// TODO: deprecate\ntypes.Null = types.Nil\n\nfor (var typeName in types) {\n  types[typeName].toJSON = function (t) {\n    return t\n  }.bind(null, typeName)\n}\n\nmodule.exports = types\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\n\n// Number.MAX_SAFE_INTEGER\nvar MAX_SAFE_INTEGER = 9007199254740991\n\nfunction checkUInt53 (n) {\n  if (n < 0 || n > MAX_SAFE_INTEGER || n % 1 !== 0) throw new RangeError('value out of range')\n}\n\nfunction encode (number, buffer, offset) {\n  checkUInt53(number)\n\n  if (!buffer) buffer = Buffer.allocUnsafe(encodingLength(number))\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('buffer must be a Buffer instance')\n  if (!offset) offset = 0\n\n  // 8 bit\n  if (number < 0xfd) {\n    buffer.writeUInt8(number, offset)\n    encode.bytes = 1\n\n  // 16 bit\n  } else if (number <= 0xffff) {\n    buffer.writeUInt8(0xfd, offset)\n    buffer.writeUInt16LE(number, offset + 1)\n    encode.bytes = 3\n\n  // 32 bit\n  } else if (number <= 0xffffffff) {\n    buffer.writeUInt8(0xfe, offset)\n    buffer.writeUInt32LE(number, offset + 1)\n    encode.bytes = 5\n\n  // 64 bit\n  } else {\n    buffer.writeUInt8(0xff, offset)\n    buffer.writeUInt32LE(number >>> 0, offset + 1)\n    buffer.writeUInt32LE((number / 0x100000000) | 0, offset + 5)\n    encode.bytes = 9\n  }\n\n  return buffer\n}\n\nfunction decode (buffer, offset) {\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('buffer must be a Buffer instance')\n  if (!offset) offset = 0\n\n  var first = buffer.readUInt8(offset)\n\n  // 8 bit\n  if (first < 0xfd) {\n    decode.bytes = 1\n    return first\n\n  // 16 bit\n  } else if (first === 0xfd) {\n    decode.bytes = 3\n    return buffer.readUInt16LE(offset + 1)\n\n  // 32 bit\n  } else if (first === 0xfe) {\n    decode.bytes = 5\n    return buffer.readUInt32LE(offset + 1)\n\n  // 64 bit\n  } else {\n    decode.bytes = 9\n    var lo = buffer.readUInt32LE(offset + 1)\n    var hi = buffer.readUInt32LE(offset + 5)\n    var number = hi * 0x0100000000 + lo\n    checkUInt53(number)\n\n    return number\n  }\n}\n\nfunction encodingLength (number) {\n  checkUInt53(number)\n\n  return (\n    number < 0xfd ? 1\n      : number <= 0xffff ? 3\n        : number <= 0xffffffff ? 5\n          : 9\n  )\n}\n\nmodule.exports = { encode: encode, decode: decode, encodingLength: encodingLength }\n"],"names":["flagSymbol","Symbol","ArgError","Error","constructor","msg","code","super","this","name","Object","setPrototypeOf","prototype","arg","opts","argv","process","slice","permissive","stopAtPositional","result","_","aliases","handlers","key","keys","length","type","isFlag","Array","isArray","fn","value","prev","push","Boolean","i","len","wholeArg","concat","separatedArguments","split","map","a","j","originalArgName","argStr","undefined","argName","match","Number","BigInt","flag","COUNT","v","existingCount","module","exports","_Buffer","ALPHABET","TypeError","BASE_MAP","Uint8Array","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","Math","log","iFACTOR","decodeUnsafe","source","alloc","psz","zeroes","size","b256","carry","it3","it4","vch","allocUnsafe","fill","encode","from","isBuffer","pbegin","pend","b58","it1","it2","str","repeat","decode","string","buffer","defineProperty","bech32m","bech32","ALPHABET_MAP","z","polymodStep","pre","b","prefixChk","prefix","chk","c","convert","data","inBits","outBits","pad","bits","maxV","toWords","bytes","fromWordsUnsafe","words","res","fromWords","getLibraryFromEncoding","encoding","ENCODING_CONST","__decode","LIMIT","lowered","toLowerCase","uppered","toUpperCase","lastIndexOf","wordChars","parser_1","keyPusher","selfSet","selfKeyVals","otherKeyVals","has","newKv","filter","kv","toString","add","getTx","psbt","globalMap","unsignedTx","getKeySet","keyVals","set","Set","forEach","keyVal","hex","combine","psbts","self","psbtToKeyVals","others","selfTx","selfGlobalSet","globalKeyVals","selfInputSets","inputKeyVals","selfOutputSets","outputKeyVals","other","otherTx","toBuffer","equals","inputSet","idx","outputSet","psbtFromKeyVals","globalMapKeyVals","typeFields_1","GlobalTypes","GLOBAL_XPUB","includes","extendedPubkey","masterFingerprint","path","n","val","readUInt32LE","isHard","head","Buffer","splitPath","copy","offset","level","num","parseInt","writeUInt32LE","expected","check","epk","mfp","p","indexOf","canAddToArray","array","item","dupeSet","dupeString","UNSIGNED_TX","globalXpub","finalScriptSig","finalScriptWitness","nonWitnessUtxo","partialSig","porCommitment","sighashType","tapKeySig","tapLeafScript","tapMerkleRoot","tapScriptSig","witnessUtxo","tapTree","bip32Derivation","checkPubkey","redeemScript","tapBip32Derivation","tapInternalKey","witnessScript","globals","makeChecker","inputs","makeConverter","InputTypes","BIP32_DERIVATION","REDEEM_SCRIPT","WITNESS_SCRIPT","PARTIAL_SIG","TAP_BIP32_DERIVATION","TAP_INTERNAL_KEY","outputs","OutputTypes","FINAL_SCRIPTSIG","canAdd","currentData","newData","FINAL_SCRIPTWITNESS","NON_WITNESS_UTXO","pubkey","signature","pSig","buf","rLen","sLen","isDerSigWithSighash","POR_COMMITMENT","SIGHASH_TYPE","TAP_KEY_SIG","TAP_LEAF_SCRIPT","leafVersion","script","controlBlock","tScript","verBuf","TAP_MERKLE_ROOT","TAP_SCRIPT_SIG","leafHash","tSig","tools_1","varuint","WITNESS_UTXO","readUInt64LE","_offset","scriptLen","encodingLength","varintLen","writeUInt64LE","TAP_TREE","depth","leaves","tree","bufs","tapLeaf","of","every","isValidDERKey","TYPE_BYTE","isValidPubkey","pubkeyTypes","isValidBIP340Key","parent","nHashes","nHashesLen","base","leafHashes","assign","nHashesBuf","keyValToBuffer","keyLen","valLen","keyVarIntLen","valVarIntLen","verifuint","max","floor","range","reverseBuffer","tmp","keyValsToBuffer","buffers","writeInt32LE","checkUInt53","RangeError","_number","writeUInt8","writeUInt16LE","first","readUInt8","readUInt16LE","lo","checkKeyBuffer","keyBuf","keyNum","txCount","unknownKeyVals","inputCount","outputCount","index","input","output","psbtFromBuffer","txGetter","varSlice","getKeyValue","checkEndOfKeyValPairs","isEnd","readUInt32BE","globalKeyIndex","hexKey","unsignedTxMaps","getInputOutputCounts","inputKeyIndex","outputKeyIndex","__export","m","hasOwnProperty","psbtToBuffer","globalBuffer","keyValsOrEmptyToBuffer","inputBuffers","outputBuffers","header","writeUIntBE","sortKeyVals","compare","keyValsFromMap","keyValMap","converterFactory","keyHexSet","entries","reduce","converter","encodedKeyVals","sort","o","combiner_1","utils_1","Psbt","tx","static","txFromBuffer","fromBuffer","results","toBase64","toHex","updateGlobal","updateData","updateInput","inputIndex","checkForInput","updateOutput","outputIndex","checkForOutput","addUnknownKeyValToGlobal","checkHasKey","getEnumLength","addUnknownKeyValToInput","addUnknownKeyValToOutput","addInput","inputData","addKeyVals","addInputAttributes","addOutput","outputData","addOutputAttributes","clearFinalizedInput","inputCheckUncleanFinalized","those","getTransaction","GLOBAL_TYPE_NAMES","INPUT_TYPE_NAMES","OUTPUT_TYPE_NAMES","throwForUpdateMaker","typeName","JSON","stringify","updateMaker","mainData","arr","dupeCheckSet","checkKeyVal","enumLength","myenum","count","isNaN","needScriptSig","needWitnessScript","scriptSigOK","witnessScriptOK","hasOneFinal","defaultVersionSetter","version","txBuf","defaultLocktimeSetter","locktime","toOutputScript","fromOutputScript","toBech32","toBase58Check","fromBech32","fromBase58Check","networks","payments","bscript","types","bech32_1","bs58check","typeforce","FUTURE_SEGWIT_VERSION_WARNING","address","payload","hash","e","unshift","tuple","Hash160bit","UInt8","arguments","network","bitcoin","p2pkh","p2sh","p2wpkh","p2wsh","console","warn","_toFutureSegwitAddress","toASM","decodeBase58","decodeBech32","pubKeyHash","scriptHash","compile","lenR","lenS","r","s","Block","bufferutils_1","bcrypto","merkle_1","transaction_1","errorMerkleNoTxes","errorWitnessNotSegwit","prevHash","merkleRoot","timestamp","witnessCommit","nonce","transactions","bufferReader","BufferReader","block","readInt32","readSlice","readUInt32","readTransaction","Transaction","byteLength","nTransactions","readVarInt","getWitnessCommit","exponent","mantissa","target","forWitness","getHash","Function","txesHaveWitnessCommit","hashes","transaction","rootHash","fastMerkleRoot","hash256","ins","witness","witnessCommits","outs","out","hasWitnessCommit","hasWitness","some","weight","headersOnly","allowWitness","getId","getUTCDate","date","Date","setUTCSeconds","bufferWriter","BufferWriter","writeInt32","writeSlice","writeUInt32","txSize","checkTxRoots","__checkMerkleRoot","__checkWitnessCommit","checkProofOfWork","calculateTarget","actualMerkleRoot","calculateMerkleRoot","actualWitnessCommit","cloneBuffer","clone","UInt32","writeUInt64","writeVarInt","writeVarSlice","writeVector","vector","end","readInt32LE","readUInt64","vi","readVarSlice","readVector","taggedHash","hash160","sha256","sha1","ripemd160","createHash","update","digest","err","TAGGED_HASH_PREFIXES","fromEntries","tag","tagHash","values","digestFn","left","right","testnet","regtest","messagePrefix","bip32","public","private","wif","REVERSE_OPS","OPS","OP_FALSE","OP_0","OP_PUSHDATA1","OP_PUSHDATA2","OP_PUSHDATA4","OP_1NEGATE","OP_RESERVED","OP_TRUE","OP_1","OP_2","OP_3","OP_4","OP_5","OP_6","OP_7","OP_8","OP_9","OP_10","OP_11","OP_12","OP_13","OP_14","OP_15","OP_16","OP_NOP","OP_VER","OP_IF","OP_NOTIF","OP_VERIF","OP_VERNOTIF","OP_ELSE","OP_ENDIF","OP_VERIFY","OP_RETURN","OP_TOALTSTACK","OP_FROMALTSTACK","OP_2DROP","OP_2DUP","OP_3DUP","OP_2OVER","OP_2ROT","OP_2SWAP","OP_IFDUP","OP_DEPTH","OP_DROP","OP_DUP","OP_NIP","OP_OVER","OP_PICK","OP_ROLL","OP_ROT","OP_SWAP","OP_TUCK","OP_CAT","OP_SUBSTR","OP_LEFT","OP_RIGHT","OP_SIZE","OP_INVERT","OP_AND","OP_OR","OP_XOR","OP_EQUAL","OP_EQUALVERIFY","OP_RESERVED1","OP_RESERVED2","OP_1ADD","OP_1SUB","OP_2MUL","OP_2DIV","OP_NEGATE","OP_ABS","OP_NOT","OP_0NOTEQUAL","OP_ADD","OP_SUB","OP_MUL","OP_DIV","OP_MOD","OP_LSHIFT","OP_RSHIFT","OP_BOOLAND","OP_BOOLOR","OP_NUMEQUAL","OP_NUMEQUALVERIFY","OP_NUMNOTEQUAL","OP_LESSTHAN","OP_GREATERTHAN","OP_LESSTHANOREQUAL","OP_GREATERTHANOREQUAL","OP_MIN","OP_MAX","OP_WITHIN","OP_RIPEMD160","OP_SHA1","OP_SHA256","OP_HASH160","OP_HASH256","OP_CODESEPARATOR","OP_CHECKSIG","OP_CHECKSIGVERIFY","OP_CHECKMULTISIG","OP_CHECKMULTISIGVERIFY","OP_NOP1","OP_NOP2","OP_CHECKLOCKTIMEVERIFY","OP_NOP3","OP_CHECKSEQUENCEVERIFY","OP_NOP4","OP_NOP5","OP_NOP6","OP_NOP7","OP_NOP8","OP_NOP9","OP_NOP10","OP_PUBKEYHASH","OP_PUBKEY","OP_INVALIDOPCODE","op","p2data","networks_1","types_1","lazy","validate","maybe","arrayOf","prop","decompile","chunks","stacksEqual","p2pk","p2ms","embed","embed_1","enumerable","get","p2ms_1","p2pk_1","p2pkh_1","p2sh_1","p2wpkh_1","p2wsh_1","object","f","configurable","_value","call","writable","OP_INT_BASE","pubkeys","signatures","isAcceptableSignature","isCanonicalScriptSignature","allowIncomplete","isPoint","decoded","_chunks","String","BufferN","_address","hash2","pkh","redeem","_redeem","nameParts","join","checkRedeem","hasInput","richunks","isPushOnly","EMPTY_BUFFER","shift","chunkHasUncompressedPubkey","chunk","_rchunks","stack","toStack","wScript","bip174_1","address_1","crypto_1","DEFAULT_OPTS","maximumFeeRate","PsbtTransaction","__CACHE","__NON_WITNESS_UTXO_TX_CACHE","__NON_WITNESS_UTXO_BUF_CACHE","__TX_IN_CACHE","__TX","__UNSAFE_SIGN_NONSEGWIT","setVersion","dpew","obj","attr","psbtBase","transactionFromBuffer","cache","checkTxInputCache","setLocktime","txInputs","sequence","txOutputs","parse","setMaximumFeeRate","satoshiPerByte","check32Bit","checkInputsForPartialSig","__EXTRACTED_TX","setInputSequence","addInputs","inputDatas","checkInvalidP2WSH","addNonWitnessTxCache","__FEE","__FEE_RATE","addOutputs","outputDatas","extractTransaction","disableFeeCheck","isFinalized","feeRate","getFeeRate","vsize","virtualSize","satoshis","toFixed","checkFees","inputFinalizeGetAmts","getTxCacheValue","getFee","finalizeAllInputs","finalizeInput","finalScriptsFunc","getFinalScripts","isP2SH","isP2WSH","isSegwit","nonWitnessUtxoTx","nonWitnessUtxoTxFromCache","prevoutIndex","isP2WPKH","getScriptFromInput","hashType","checkPartialSigSighashes","getInputType","getMeaningfulScript","getScriptFromUtxo","finalScript","decomp","lastItem","isPubkeyLike","redeemFromFinalScriptSig","scriptWitnessToWitnessStack","redeemFromFinalWitnessScript","classifyScript","meaningfulScript","inputHasPubkey","pubkeyInScript","pubkeyInInput","inputHasHDKey","root","derivationIsMine","bip32DerivationIsMine","outputHasPubkey","pubkeyInOutput","outputHasHDKey","validateSignaturesOfAllInputs","validator","validateSignaturesOfInput","final","mySigs","sig","hashCache","scriptCache","sighashCache","getHashForSig","checkScriptForPubkey","signAllInputsHD","hdKeyPair","sighashTypes","SIGHASH_ALL","publicKey","fingerprint","signInputHD","signAllInputsHDAsync","Promise","resolve","reject","promises","signInputHDAsync","then","all","getSignersFromHD","signer","signInput","signInputAsync","catch","signAllInputs","keyPair","signAllInputsAsync","getHashAndSighashType","sign","checkCache","checkTxEmpty","hasSigs","neededSigs","sigs","pkey","parity","newKey","compressPubkey","find","isPaymentFactory","payment","isP2MS","isP2PK","isP2PKH","isP2WSHScript","isP2SHScript","d","derivePath","action","throws","pSigs","scriptItems","witnessItems","getPsigsFromInputFinalScripts","whitelist","SIGHASH_ANYONECANPAY","SIGHASH_SINGLE","SIGHASH_NONE","scriptCheckerFactory","paymentScriptName","scriptPubKey","ioType","redeemScriptOutput","checkRedeemScript","checkWitnessScript","mustFinalize","scriptType","canFinalize","pk","ps","getSortedSigs","getPayment","currentLen","witnessStackToScriptWitness","prepareFinalScripts","forValidate","text","sighashTypeToString","prevout","prevoutHash","utxoHash","hashForWitnessV0","signingScript","hashForSignature","myDerivations","bipDv","node","selfIndex","txCache","newBuf","inputAmount","nwTx","vout","outputAmount","total","fee","isCanonicalPubKey","isP2SHP2WSH","pubkeyHash","decompiled","element","ops_1","opcode","number","isDefinedHashType","fromASM","bip66","pushdata","scriptNumber","scriptSignature","isPushOnlyChunk","isOPInt","asMinimalOP","chunksIsBuffer","singleChunkIsBuffer","bufferSize","accum","hashTypeMod","asm","chunkStr","Hex","maxLength","minimal","abs","negative","ZERO","toDER","fromDER","bstart","hashTypeBuffer","script_1","varSliceSize","someScript","EMPTY_WITNESS","ONE","VALUE_UINT64_MAX","BLANK_OUTPUT","valueBuffer","_NO_STRICT","marker","hasWitnesses","ADVANCED_TRANSACTION_MARKER","ADVANCED_TRANSACTION_FLAG","vinLen","voutLen","Hash256bit","isCoinbase","isCoinbaseHash","scriptSig","Null","DEFAULT_SEQUENCE","Satoshi","ceil","_ALLOW_WITNESS","sum","someVector","vectorSize","newTx","txIn","txOut","inIndex","prevOutScript","ourScript","txTmp","y","__toBuffer","hashForWitnessV1","prevOutScripts","annex","outputType","SIGHASH_DEFAULT","SIGHASH_OUTPUT_MASK","isAnyoneCanPay","SIGHASH_INPUT_MASK","isNone","isSingle","hashPrevouts","hashAmounts","hashScriptPubKeys","hashSequences","hashOutputs","withCapacity","txOutsSize","spendType","sigMsgSize","sigMsgWriter","tbuffer","hashSequence","initialOffset","setInputScript","setWitness","oneOf","Buffer256bit","Network","ECPoint","Signer","BIP32Path","UInt31","buffer_1","ZERO32","EC_P","t","UINT31_MAX","pow","toJSON","getPublicKey","UInt53","quacksLike","basex","base58","checksumFn","decodeRaw","checksum","newChecksum","bs58checkBase","create","ctor","superCtor","super_","TempCtor","CONTROL","TOKEN","random","env","mapped","chunker","RegExp","commented","test","BS","escape","quote","esc","isGlob","parseEnvVar","comment","pattern","varend","varname","substr","acc","xs","native","getTypeName","getValueTypeName","Nil","captureStackTrace","tfJSON","tfErrorString","valueTypeName","valueJson","getValue","TfTypeError","message","__type","__value","__valueTypeName","TfPropertyTypeError","property","label","description","tfPropertyErrorString","__label","__property","tfCustomError","actual","tfSubError","NATIVE","ERRORS","_LengthN","Length","_ArrayN","bind","_BufferN","_HexN","_StringN","INT53_MAX","ArrayN","Finite","isFinite","HexN","Int8","Int16","Int32","Int53","Range","_range","strict","StringN","UInt16","TYPES","options","_arrayOf","minLength","Infinity","_maybe","propertyType","propertyKeyType","_map","propertyName","propertyValue","uncompiled","typePropertyName","_object","anyOf","_anyOf","allOf","_allOf","_quacksLike","_tuple","surrogate","EXTRA"],"sourceRoot":""}