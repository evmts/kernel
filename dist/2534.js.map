{"version":3,"file":"2534.js","mappings":";6iBACA,8hGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAMO,IAAMC,EAAO,MACPC,EAAU,QACVC,EAAc,MACdC,EAAO,OAAH,OACbC,IAAAA,QAAAA,KAAoB,+DADP,qfAmBJC,EAAO,CAClB,WAAYC,OACZ,UAAWC,QACX,SAAUA,QACV,YAAaA,SAGR,SAAeC,EAAtB,wEAAO,WAAsBC,EAAKC,EAAKC,GAAhC,8EACAF,EADA,sBACW,IAAIG,MAAM,oBADrB,cAEAF,GAAe,KAARA,IACJG,EAAQJ,EAAIK,MAAM,KAClBC,EAFgB,UAENF,EAAMA,EAAMG,OAAS,UAFf,aAEN,EAAyBC,QAAQ,SAAU,IAC3DP,EAAKQ,OAAOC,MAAMC,KAAKC,KAAKV,EAAKW,SAASC,IAAKR,IAGjDJ,EAAKW,SAASE,IAAd,wBAAmCd,EAAnC,SARK,SAUgBe,EAAAA,GAAAA,MAAU,CAC7BC,GAAIf,EAAKO,OAAOQ,GAChBC,KAAAA,EAAAA,EACAjB,IAAAA,EACAD,IAAAA,EACAmB,UAAW,kCACXC,MAAOlB,EAAK,aAAc,EAC1BmB,IAAKnB,EAAK,aAAe,OACzBoB,cAAc,IAlBX,gFAsBA,SAAeC,EAAtB,oEAAO,WAAoBC,GAApB,gGAA0BC,EAA1B,+BAAoC,KACnCvB,EAAOwB,IAAI9B,EAAM,CAAE+B,MAAMC,EAAAA,EAAAA,GAASH,MAC/B,aAFJ,yCAEyBD,EAAKT,IAAIvB,IAFlC,WAGDU,EAAK,UAHJ,yCAGsBsB,EAAKT,IAAIrB,IAH/B,OAKCmC,EALD,UAKO3B,EAAK4B,SALZ,aAKO,EAAS,GAErB5B,EAAKW,SAAWW,EAChBtB,EAAKO,OAASe,EAAKf,OARd,KAUGoB,EAVH,OAWE,UAXF,0CAYY9B,EAAK,UAACG,EAAK4B,SAAN,aAAC,EAAS,GAAV,UAAc5B,EAAK4B,SAAnB,aAAc,EAAS,GAAI5B,GAZ5C,0EAcMsB,EAAKT,IAAIrB,IAdf","sources":["webpack://@web3os-core/kernel/./src/modules/git/index.js"],"sourcesContent":["import arg from 'arg'\r\nimport path from 'path'\r\nimport git from 'isomorphic-git'\r\nimport http from 'isomorphic-git/http/web'\r\nimport colors from 'ansi-colors'\r\nimport { parse as cliParse } from 'shell-quote'\r\n\r\nexport const name = 'git'\r\nexport const version = '0.1.0'\r\nexport const description = 'Git'\r\nexport const help = `\r\n  ${colors.magenta.bold('Powered by https://github.com/isomorphic-git/isomorphic-git')}\r\n\r\n  Usage:\r\n    git <command> <args> [options]\r\n  \r\n  Examples:\r\n    git clone https://github.com/web3os-org/sample-scripts\r\n\r\n  Commands:\r\n    clone <repo> [path]                      Clone a repository\r\n\r\n  Options:\r\n    --branch <name>                          Specify branch\r\n    --force                                  Force action/overwrite\r\n    --help                                   Print this help message\r\n    --version                                Print the version information\r\n`\r\n\r\nexport const spec = {\r\n  '--branch': String,\r\n  '--force': Boolean,\r\n  '--help': Boolean,\r\n  '--version': Boolean\r\n}\r\n\r\nexport async function clone (url, dir, args) {\r\n  if (!url) throw new Error('No URL specified')\r\n  if (!dir || dir === '') {\r\n    const parts = url.split('/')\r\n    const dirname = parts[parts.length - 1]?.replace(/\\.git$/, '')\r\n    dir =kernel.utils.path.join(args.terminal.cwd, dirname)\r\n  }\r\n\r\n  args.terminal.log(`Cloning into '${dir}'...`)\r\n\r\n  const result = await git.clone({\r\n    fs: args.kernel.fs,\r\n    http,\r\n    dir,\r\n    url,\r\n    corsProxy: 'https://cors.isomorphic-git.org',\r\n    force: args['--force'] || false,\r\n    ref: args['--branch'] || 'main',\r\n    singleBranch: true\r\n  })\r\n}\r\n\r\nexport async function run (term, context = '') {\r\n  const args = arg(spec, { argv: cliParse(context) })\r\n  if (args['--version']) return term.log(version)\r\n  if (args['--help']) return term.log(help)\r\n\r\n  const cmd = args._?.[0]\r\n\r\n  args.terminal = term\r\n  args.kernel = term.kernel\r\n\r\n  switch (cmd) {\r\n    case 'clone':\r\n      return await clone(args._?.[1], args._?.[2], args)\r\n    default:\r\n      return term.log(help)\r\n  }\r\n}\r\n"],"names":["i","name","version","description","help","colors","spec","String","Boolean","clone","url","dir","args","Error","parts","split","dirname","length","replace","kernel","utils","path","join","terminal","cwd","log","git","fs","http","corsProxy","force","ref","singleBranch","run","term","context","arg","argv","cliParse","cmd","_"],"sourceRoot":""}