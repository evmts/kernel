{"version":3,"file":"9781.js","mappings":"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","sources":["file:////home/j/code/web3os/@web3os-core/kernel/src/modules/peer/index.js","file:////home/j/code/web3os/@web3os-core/kernel/src/modules/peer/peer.module.css","webpack://@web3os-core/kernel/./src/modules/peer/peer.module.css?8964"],"sourcesContent":["/**\r\n * @module @web3os-core/peer\r\n * @author Jay Mathis <code@mathis.network>\r\n * @license MIT\r\n * @see https://peerjs.com\r\n * @see https://github.com/web3os-org/kernel\r\n * \r\n * @todo Fix receiving emojis causing BinaryPackFailure\r\n * \r\n * @description\r\n * PeerJS Utility\r\n * \r\n * <pre>\r\n * \r\n * \r\n * \r\n    Usage:\r\n      peer <command> <args> [options]\r\n\r\n    To set your ID (default is UUID):\r\n      peer id --id myfirstdevice\r\n\r\n    Default Connection Broker:\r\n      Kernel.get('peerjs', 'server-host') if set, or 0.peerjs.com\r\n\r\n    Commands:\r\n      call <peer-id> [--video] [--audio]                                     Call a peer with media streams\r\n      chat <peer-id>                                                         Open a text chat with a peer\r\n      connect <peer-id>                                                      Connect to a peer\r\n      id                                                                     Display your peer ID\r\n      list                                                                   List available peers\r\n      send <peer-id> [--text] [--text-file] [--json] [--json-file]           Send a raw message\r\n      screen <peer-id>                                                       Share your screen with a peer\r\n      upload <peer-id> [--file]                                              Upload a file to a peer\r\n\r\n    Options:\r\n      --debug                                                                Debug level ({0},1,2,3)\r\n      --file                                                                 Path of the file to upload\r\n      --help                                                                 Print this help message\r\n      --id                                                                   Set your peer ID\r\n      --json                                                                 JSON string to send\r\n      --json-file                                                            Path to JSON file to send\r\n      --server-host                                                          Set the peerjs broker host\r\n      --server-key                                                           Server API key (for 0.peerjs.com)\r\n      --server-path                                                          Set the peerjs broker path {/}\r\n      --server-port                                                          Set the peerjs broker port {443}\r\n      --text                                                                 Text message to send\r\n      --text-file                                                            Path to the text file to send\r\n      --version                                                              Print the version information\r\n * </pre>\r\n */\r\n\r\nimport arg from 'arg'\r\nimport Peer from 'peerjs/dist/peerjs.esm'\r\nimport colors from 'ansi-colors'\r\nimport { parse as cliParse } from 'shell-quote'\r\n\r\nimport styles from './peer.module.css'\r\n\r\nexport const name = 'peer'\r\nexport const version = '0.1.0'\r\nexport const description = 'PeerJS Utility'\r\nexport const help = `\r\n  ${colors.magenta.bold('PeerJS Utility')}\r\n\r\n  Usage:\r\n    peer <command> <args> [options]\r\n\r\n  To set your ID (default is UUID):\r\n    peer id --id myfirstdevice\r\n\r\n  Default Connection Broker:\r\n    ${colors.bold(\"Kernel.get('peerjs', 'server-host')\")} if set, or ${colors.bold('0.peerjs.com')}\r\n\r\n  Commands:\r\n    call <peer-id> [--video] [--audio]                                     Call a peer with media streams\r\n    chat <peer-id>                                                         Open a text chat with a peer\r\n    connect <peer-id>                                                      Connect to a peer\r\n    id                                                                     Display your peer ID\r\n    list                                                                   List available peers\r\n    send <peer-id> [--text] [--text-file] [--json] [--json-file]           Send a raw message\r\n    screen <peer-id>                                                       Share your screen with a peer\r\n    upload <peer-id> [--file]                                              Upload a file to a peer\r\n\r\n  Options:\r\n    --debug                                                                Debug level ({0},1,2,3)\r\n    --file                                                                 Path of the file to upload\r\n    --help                                                                 Print this help message\r\n    --id                                                                   Set your peer ID\r\n    --json                                                                 JSON string to send\r\n    --json-file                                                            Path to JSON file to send\r\n    --server-host                                                          Set the peerjs broker host\r\n    --server-key                                                           Server API key (for 0.peerjs.com)\r\n    --server-path                                                          Set the peerjs broker path {/}\r\n    --server-port                                                          Set the peerjs broker port {443}\r\n    --text                                                                 Text message to send\r\n    --text-file                                                            Path to the text file to send\r\n    --version                                                              Print the version information\r\n`\r\n\r\nexport const spec = {\r\n  '--audio': Boolean,\r\n  '--debug': Number,\r\n  '--file': String,\r\n  '--id': String,\r\n  '--help': Boolean,\r\n  '--json': String,\r\n  '--json-file': String,\r\n  '--server-key': String,\r\n  '--server-host': String,\r\n  '--server-port': Number,\r\n  '--server-path': String,\r\n  '--server-secure': Boolean,\r\n  '--server-ping-interval': Number,\r\n  '--text': String,\r\n  '--text-file': String,\r\n  '--version': Boolean,\r\n  '--video': Boolean\r\n}\r\n\r\nlet kernel = globalThis.Kernel\r\nlet terminal\r\nconst { t } = kernel.i18n\r\n\r\nexport let id = ''\r\nexport let instance\r\nexport const connections = {}\r\n\r\nexport function setupInstance () {\r\n  return new Promise((resolve, reject) => {\r\n    instance.on('open', myId => { id = myId; resolve(id) })\r\n    instance.on('error', err => { console.error(err); reject(err) })\r\n    instance.on('connection', connection => {\r\n      connection.on('open', () => {\r\n        console.log('Incoming connection from', connection.peer)\r\n        kernel.execute(`snackbar Incoming connection from ${connection.peer}`)\r\n        connections[connection.peer] = { connection }\r\n        connection.on('data', data => processIncomingData(data, connection))\r\n      })\r\n    })\r\n\r\n    instance.on('call', async call => {\r\n      let avState = ''\r\n      if (call.metadata.video && call.metadata.audio) avState = 'Audio & Video'\r\n      if (call.metadata.video && !call.metadata.audio) avState = 'Video Only'\r\n      if (!call.metadata.video && call.metadata.audio) avState = 'Audio Only'\r\n      if (call.metadata.screen) avState = 'Screenshare'\r\n\r\n      const container = document.createElement('div')\r\n      container.innerHTML = `\r\n        <p>\r\n          You have an incoming call (${avState}) from:\r\n          <br />\r\n          <strong style='font-family: monospace'>${call.peer}</strong>\r\n        </p>\r\n      `\r\n    \r\n      const result = await kernel.dialog({\r\n        icon: 'info',\r\n        title: `Incoming ${call.metadata.screen ? 'Screenshare' : 'Call'}`,\r\n        html: container.outerHTML,\r\n        reverseButtons: true,\r\n        showDenyButton: true,\r\n        denyButtonText: 'Decline',\r\n        confirmButtonText: call.metadata.screen ? 'Accept' : 'Answer'\r\n      })\r\n\r\n      if (result.isConfirmed) {\r\n        if (call.metadata.screen) {\r\n          call.answer()\r\n        } else {\r\n          const stream = await navigator.mediaDevices.getUserMedia({ audio: call.metadata?.audio, video: call.metadata?.video })\r\n          call.answer(stream)\r\n        }\r\n\r\n        call.on('stream', peerStream => {\r\n          const video = document.createElement('video')\r\n          video.style.width = '100%'\r\n          video.style.height = '100%'\r\n\r\n          if ('srcObject' in video) {\r\n            video.srcObject = peerStream\r\n          } else {\r\n            video.src = URL.createObjectURL(peerStream)\r\n          }\r\n\r\n          video.onloadedmetadata = () => video.play()\r\n\r\n          const title = call.metadata.screen ? t('Screen') : `${t('Call')} ${call.metadata.audio ? `(${t('Audio')})` : ''}${call.metadata.video ? `(${t('Video')})` : ''}`\r\n\r\n          kernel.windows.create({\r\n            title: `${title}: ${call.peer}`,\r\n            mount: video,\r\n            max: true,\r\n            onclose: () => {\r\n\r\n              call.close()\r\n            }\r\n          })\r\n        })\r\n\r\n        call.on('close', () => {\r\n          console.log('call closed')\r\n        })\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nasync function processIncomingData (data, connection) {\r\n  console.debug({ data, connection })\r\n  if (typeof data === 'object' && data.cmd) {\r\n    let result\r\n    switch (data.cmd) {\r\n      case 'chat':\r\n        result = await kernel.dialog({\r\n          title: 'Incoming Chat',\r\n          html: `<p>Peer ID:<br />${connection.peer}</p><h3>Accept?</h3>`,\r\n          showDenyButton: true,\r\n          confirmButtonText: 'Yes'\r\n        })\r\n\r\n        if (result.isConfirmed) openChatWindow(connections[connection.peer])\r\n        break\r\n      case 'upload':\r\n        result = await kernel.dialog({\r\n          title: t('Incoming Upload'),\r\n          html: `<p>${t('Peer ID')}:<br />${connection.peer}</p><p>${t('Filename')}:<br />${data.filename}</p>`,\r\n          inputLabel: t('Where would you like to save this file?'),\r\n          inputValue: kernel.get('peer', 'defaultReceivePath') || '/tmp',\r\n          reverseButtons: true,\r\n          showDenyButton: true,\r\n          denyButtonText: t('Cancel'),\r\n          confirmButtonText: t('Save'),\r\n          input: 'text'\r\n        })\r\n\r\n        if (result.isConfirmed) return kernel.fs.writeFileSync(data.filename, data.content)\r\n        break\r\n      default:\r\n        throw new Error(`Invalid command ${JSON.stringify(data)} received from peer ${connection.peer}`)\r\n    }\r\n  }\r\n}\r\n\r\nexport function connect (peerId, args) {\r\n  return new Promise((resolve, reject) => {\r\n    if (!peerId || peerId === '') return reject(new Error('Invalid peer'))\r\n    connections[peerId] = { connection: instance.connect(peerId) }\r\n    connections[peerId].connection.on('open', () => resolve(peerId))\r\n    connections[peerId].connection.on('error', err => {\r\n      console.error(err)\r\n      reject(err)\r\n    })\r\n  })\r\n}\r\n\r\nexport async function call (peerId, args) {\r\n  const peer = connections[peerId]\r\n  if (!peer) throw new Error('Not connected to that peer')\r\n  if (!navigator.mediaDevices) throw new Error('Media devices not available')\r\n\r\n  const metadata =\r\n    args.screen\r\n    ? { screen: true }\r\n    : { audio: args['--audio'], video: args['--video'] }\r\n\r\n  const stream = args.screen ? await navigator.mediaDevices.getDisplayMedia() : await navigator.mediaDevices.getUserMedia(metadata)\r\n  const call = instance.call(peerId, stream, { metadata })\r\n\r\n  call.on('stream', peerStream => {\r\n    const video = document.createElement('video')\r\n    video.style.width = '100%'\r\n    video.style.height = '100%'\r\n\r\n    if ('srcObject' in video) {\r\n      video.srcObject = peerStream\r\n    } else {\r\n      video.src = URL.createObjectURL(peerStream)\r\n    }\r\n\r\n    video.onloadedmetadata = () => video.play()\r\n\r\n    const title = metadata.screen ? t('Screen') : `${t('Call')} ${metadata.audio ? `(${t('Audio')})` : ''}${metadata.video ? `(${t('Video')})` : ''}`\r\n\r\n    kernel.windows.create({\r\n      title: `${title}: ${call.peer}`,\r\n      mount: video,\r\n      max: true,\r\n      onclose: () => {\r\n        call.close()\r\n      }\r\n    })\r\n  })\r\n\r\n  call.on('close', () => {\r\n    console.log('call closed')\r\n  })\r\n}\r\n\r\nexport function openChatWindow (peer) {\r\n  const container = document.createElement('div')\r\n  container.classList.add(styles.container)\r\n  const chat = document.createElement('div')\r\n  chat.classList.add(styles.chat)\r\n  const form = document.createElement('form')\r\n  form.classList.add(styles.form)\r\n  const input = document.createElement('input')\r\n  input.classList.add(styles.input)\r\n  const button = document.createElement('button')\r\n  button.classList.add(styles.button)\r\n  button.type = 'submit'\r\n  button.textContent = 'Send'\r\n\r\n  container.appendChild(chat)\r\n  form.appendChild(input)\r\n  form.appendChild(button)\r\n  container.appendChild(form)\r\n\r\n  const receiveMessage = data => {\r\n    if (typeof data !== 'string') return\r\n    const bubble = document.createElement('div')\r\n    bubble.classList.add(styles.bubble, styles.toMe)\r\n    bubble.textContent = typeof data === 'string' ? data : JSON.stringify(data, null, 2)\r\n    chat.appendChild(bubble)\r\n    bubble.scrollIntoView()\r\n  }\r\n\r\n  const sendMessage = data => {\r\n    if (!data || data === '') return\r\n    const bubble = document.createElement('div')\r\n    bubble.classList.add(styles.fromMe)\r\n    bubble.textContent = data\r\n    chat.appendChild(bubble)\r\n    bubble.scrollIntoView()\r\n    peer.connection.send(data)\r\n  }\r\n\r\n  peer.connection.on('data', receiveMessage)\r\n  peer.connection.send({ cmd: 'chat' })\r\n\r\n  form.addEventListener('submit', e => {\r\n    e.preventDefault()\r\n    sendMessage(input.value)\r\n    input.value = ''\r\n  })\r\n\r\n  kernel.windows.create({\r\n    title: `Chat: ${peer.connection.peer}`,\r\n    mount: container,\r\n    width: '100%',\r\n    max: false,\r\n    onclose: () => {\r\n      peer.connection.off('data', receiveMessage)\r\n    }\r\n  })\r\n}\r\n\r\nexport async function chat (peerId) {\r\n  const peer = connections[peerId]\r\n  if (!peer) throw new Error('Not connected to that peer')\r\n  openChatWindow(peer)\r\n}\r\n\r\nexport async function screen (peerId) {\r\n  const peer = connections[peerId]\r\n  if (!peer) throw new Error('Not connected to that peer')\r\n  if (!navigator.mediaDevices) throw new Error('Media devices not available')\r\n  call(peerId, { screen: true })\r\n}\r\n\r\nexport async function send (peerId, args) {\r\n  const peer = connections[peerId]\r\n  if (!peer) throw new Error('Not connected to that peer')\r\n  if (args['--text']) return peer.connection.send(args['--text'])\r\n  if (args['--text-file']) return peer.connection.send(kernel.fs.readFileSync(args['--text-file']).toString())\r\n  if (args['--json']) return peer.connection.send(JSON.parse(args['--json']))\r\n  if (args['--json-file']) return peer.connection.send(JSON.parse(kernel.fs.readFileSync(args['--json-file']).toString()))\r\n}\r\n\r\nexport async function upload (peerId, args) {\r\n  const peer = connections[peerId]\r\n  if (!peer) throw new Error('Not connected to that peer')\r\n  const content = kernel.fs.readFileSync(args['--file'])\r\n  peer.connection.send({ cmd: 'upload', filename: kernel.utils.path.parse(args['--file']).base, content })\r\n}\r\n\r\nexport async function run (term, context = '') {\r\n  const args = arg(spec, { argv: cliParse(context) })\r\n  if (args['--version']) return term.log(version)\r\n  if (args['--help']) return term.log(help)\r\n\r\n  const cmd = args._?.[0]\r\n\r\n  terminal = term\r\n  kernel = term.kernel\r\n\r\n  const peerOptions = {}\r\n\r\n  if (args['--debug']) peerOptions.debug = args['--debug']\r\n  if (args['--server-key']) peerOptions.key = args['--server-key']\r\n  if (args['--server-host']) peerOptions.host = args['--server-host']\r\n  if (args['--server-port']) peerOptions.port = args['--server-port']\r\n  if (args['--server-path']) peerOptions.path = args['--server-path']\r\n  if (args['--server-secure']) peerOptions.secure = args['--server-secure']\r\n  if (args['--server-ping-interval']) peerOptions.pingInterval = args['--server-ping-interval']\r\n\r\n  if (!args['--server-host'] && kernel.get('peerjs', 'server-host')) {\r\n    peerOptions.host = kernel.get('peerjs', 'server-host')\r\n  }\r\n\r\n  if (args['--id'] && id !== args['--id']) {\r\n    instance = new Peer(args?.['--id'], peerOptions)\r\n    await setupInstance()\r\n  }\r\n\r\n  if (!instance) {\r\n    instance = new Peer(peerOptions)\r\n    await setupInstance()\r\n  }\r\n\r\n  switch (cmd) {\r\n    case 'call':\r\n      return await call(args._?.[1], args)\r\n    case 'chat':\r\n      return await chat(args._?.[1], args)\r\n    case 'connect':\r\n      return await connect(args._?.[1], args)\r\n    case 'id':\r\n      return term.log(id)\r\n    case 'list':\r\n      return term.log(Object.keys(connections))\r\n    case 'screen':\r\n      return await screen(args._?.[1], args)\r\n    case 'send':\r\n      return await send(args._?.[1], args)\r\n    case 'upload':\r\n      return await upload(args._?.[1], args)\r\n    default:\r\n      return term.log(help)\r\n  }\r\n}\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.73.0/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.73.0/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".IXur10FyYhrkjdvL3YJP {\\r\\n  margin: 0;\\r\\n  height: 100%;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.Nxb7VY3RhqzBAaj_3s8J {\\r\\n  height: 90%;\\r\\n  overflow: auto;\\r\\n  background-color: #121212;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.MhcT1i3sp9dBktHySC03 {\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.qrJhI8vNNSz0qaxx22_Q {\\r\\n  font-size: 2rem;\\r\\n  width: 90%;\\r\\n  color: initial;\\r\\n}\\r\\n\\r\\n.aabZYBE305DiKzB6h3IU {\\r\\n  font-weight: bolder;\\r\\n  width: 10%;\\r\\n  background-color: #121212;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.nL1fGx34jqk7g144uRHx, .MMWAN9tEXWurIiikyhFR {\\r\\n  position: relative;\\r\\n  padding: 1rem;\\r\\n  border-radius: 20px;\\r\\n  max-width: 30%;\\r\\n  min-width: 10ch;\\r\\n  margin: 1rem;\\r\\n  word-wrap: break-word;\\r\\n}\\r\\n\\r\\n.nL1fGx34jqk7g144uRHx {\\r\\n  background-color: #00aabb;\\r\\n  align-self: flex-start;\\r\\n}\\r\\n\\r\\n.MMWAN9tEXWurIiikyhFR {\\r\\n  background-color: #00bd26;\\r\\n  align-self: flex-end;\\r\\n}\\r\\n\\r\\n.nL1fGx34jqk7g144uRHx:after, .MMWAN9tEXWurIiikyhFR:after {\\r\\n  content: '';\\r\\n\\tposition: absolute;\\r\\n\\tbottom: 0;\\r\\n\\tleft: 50%;\\r\\n\\twidth: 0;\\r\\n\\theight: 0;\\r\\n\\tborder: 20px solid transparent;\\r\\n  border-bottom: 0;\\r\\n\\tmargin-left: -10px;\\r\\n\\tmargin-bottom: -20px;\\r\\n}\\r\\n\\r\\n.nL1fGx34jqk7g144uRHx:after {\\r\\n\\tborder-top-color: #00aabb;\\r\\n  border-left: 0;\\r\\n}\\r\\n\\r\\n.MMWAN9tEXWurIiikyhFR:after {\\r\\n\\tborder-top-color: #00bd26;\\r\\n  border-right: 0;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/modules/peer/peer.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,SAAS;EACT,YAAY;EACZ,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,WAAW;EACX,cAAc;EACd,yBAAyB;EACzB,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,eAAe;EACf,UAAU;EACV,cAAc;AAChB;;AAEA;EACE,mBAAmB;EACnB,UAAU;EACV,yBAAyB;EACzB,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,cAAc;EACd,eAAe;EACf,YAAY;EACZ,qBAAqB;AACvB;;AAEA;EACE,yBAAyB;EACzB,sBAAsB;AACxB;;AAEA;EACE,yBAAyB;EACzB,oBAAoB;AACtB;;AAEA;EACE,WAAW;CACZ,kBAAkB;CAClB,SAAS;CACT,SAAS;CACT,QAAQ;CACR,SAAS;CACT,8BAA8B;EAC7B,gBAAgB;CACjB,kBAAkB;CAClB,oBAAoB;AACrB;;AAEA;CACC,yBAAyB;EACxB,cAAc;AAChB;;AAEA;CACC,yBAAyB;EACxB,eAAe;AACjB\",\"sourcesContent\":[\".container {\\r\\n  margin: 0;\\r\\n  height: 100%;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.chat {\\r\\n  height: 90%;\\r\\n  overflow: auto;\\r\\n  background-color: #121212;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.form {\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.input {\\r\\n  font-size: 2rem;\\r\\n  width: 90%;\\r\\n  color: initial;\\r\\n}\\r\\n\\r\\n.button {\\r\\n  font-weight: bolder;\\r\\n  width: 10%;\\r\\n  background-color: #121212;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.toMe, .fromMe {\\r\\n  position: relative;\\r\\n  padding: 1rem;\\r\\n  border-radius: 20px;\\r\\n  max-width: 30%;\\r\\n  min-width: 10ch;\\r\\n  margin: 1rem;\\r\\n  word-wrap: break-word;\\r\\n}\\r\\n\\r\\n.toMe {\\r\\n  background-color: #00aabb;\\r\\n  align-self: flex-start;\\r\\n}\\r\\n\\r\\n.fromMe {\\r\\n  background-color: #00bd26;\\r\\n  align-self: flex-end;\\r\\n}\\r\\n\\r\\n.toMe:after, .fromMe:after {\\r\\n  content: '';\\r\\n\\tposition: absolute;\\r\\n\\tbottom: 0;\\r\\n\\tleft: 50%;\\r\\n\\twidth: 0;\\r\\n\\theight: 0;\\r\\n\\tborder: 20px solid transparent;\\r\\n  border-bottom: 0;\\r\\n\\tmargin-left: -10px;\\r\\n\\tmargin-bottom: -20px;\\r\\n}\\r\\n\\r\\n.toMe:after {\\r\\n\\tborder-top-color: #00aabb;\\r\\n  border-left: 0;\\r\\n}\\r\\n\\r\\n.fromMe:after {\\r\\n\\tborder-top-color: #00bd26;\\r\\n  border-right: 0;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"IXur10FyYhrkjdvL3YJP\",\n\t\"chat\": \"Nxb7VY3RhqzBAaj_3s8J\",\n\t\"form\": \"MhcT1i3sp9dBktHySC03\",\n\t\"input\": \"qrJhI8vNNSz0qaxx22_Q\",\n\t\"button\": \"aabZYBE305DiKzB6h3IU\",\n\t\"toMe\": \"nL1fGx34jqk7g144uRHx\",\n\t\"fromMe\": \"MMWAN9tEXWurIiikyhFR\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/.pnpm/style-loader@3.3.1_webpack@5.73.0/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/.pnpm/style-loader@3.3.1_webpack@5.73.0/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/.pnpm/style-loader@3.3.1_webpack@5.73.0/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/.pnpm/style-loader@3.3.1_webpack@5.73.0/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/.pnpm/style-loader@3.3.1_webpack@5.73.0/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/.pnpm/style-loader@3.3.1_webpack@5.73.0/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.73.0/node_modules/css-loader/dist/cjs.js!./peer.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.73.0/node_modules/css-loader/dist/cjs.js!./peer.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":["instance","name","version","description","help","colors","spec","Boolean","Number","String","kernel","globalThis","Kernel","t","i18n","id","connections","setupInstance","Promise","resolve","reject","on","myId","err","console","error","connection","log","peer","execute","data","processIncomingData","call","avState","metadata","video","audio","screen","container","document","createElement","innerHTML","dialog","icon","title","html","outerHTML","reverseButtons","showDenyButton","denyButtonText","confirmButtonText","isConfirmed","answer","navigator","mediaDevices","getUserMedia","stream","peerStream","style","width","height","srcObject","src","URL","createObjectURL","onloadedmetadata","play","windows","create","mount","max","onclose","close","debug","cmd","openChatWindow","filename","inputLabel","inputValue","get","input","fs","writeFileSync","content","Error","JSON","stringify","connect","peerId","args","getDisplayMedia","classList","add","styles","chat","form","button","type","textContent","appendChild","receiveMessage","bubble","scrollIntoView","send","addEventListener","e","preventDefault","sendMessage","value","off","readFileSync","toString","parse","upload","utils","path","base","run","term","context","arg","argv","cliParse","_","peerOptions","key","host","port","secure","pingInterval","Peer","Object","keys","___CSS_LOADER_EXPORT___","push","module","locals","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined"],"sourceRoot":""}