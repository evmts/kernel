{"version":3,"file":"5989.js","mappings":"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","sources":["webpack://@web3os-core/kernel/./node_modules/.pnpm/github.com+web3os-org+openocean-api@1182ec93175afe2bc1bae504bb4b79485811a0c7/node_modules/@web3os/openocean-api/dist/index.mjs","webpack://@web3os-core/kernel/./src/modules/account/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/shell-quote@1.7.3/node_modules/shell-quote/index.js"],"sourcesContent":["const $e9036bc7e4b4ba73$var$BaseURL = 'https://open-api.openocean.finance/v1/cross';\nasync function $e9036bc7e4b4ba73$export$433ece0ffb4f36c7(chain = 1) {\n    const result = await fetch(`${$e9036bc7e4b4ba73$var$BaseURL}/tokenList?chainId=${chain}`);\n    const { code: code , data: data  } = await result.json();\n    if (code !== 200) throw new Error(result);\n    return data;\n}\nasync function $e9036bc7e4b4ba73$export$df96cd8d56be0ab1(chain = 1, account, inTokenAddress) {\n    if (!account || !inTokenAddress) throw new Error('Account and inTokenAddress are required');\n    const result = await fetch(`${$e9036bc7e4b4ba73$var$BaseURL}/getBalance?chainId=${chain}&account=${account}&inTokenAddress=${inTokenAddress}`);\n    const { code: code , data: data  } = await result.json();\n    if (code !== 200) throw new Error(result);\n    return data;\n}\n\n\nexport {$e9036bc7e4b4ba73$export$433ece0ffb4f36c7 as tokenList, $e9036bc7e4b4ba73$export$df96cd8d56be0ab1 as getBalance};\n//# sourceMappingURL=index.mjs.map\n","/**\r\n * Web3os Account Manager\r\n * @module @web3os-core/account\r\n * @description Manage your web3 wallet\r\n * @author Jay Mathis <code@mathis.network>\r\n * @license MIT\r\n * @see https://github.com/web3os-org/kernel\r\n */\r\n\r\nimport arg from 'arg'\r\nimport colors from 'ansi-colors'\r\nimport { parse as cliParse } from 'shell-quote'\r\nimport Web3 from 'web3'\r\nimport * as Ocean from '@web3os/openocean-api'\r\n\r\nimport chains from './chains.json'\r\n\r\nexport const name = 'account'\r\nexport const version = '0.1.3'\r\nexport const description = 'Manage your web3 wallet'\r\nexport const help = `\r\n  ${colors.magenta.bold(`NOTE: This tool is being replaced by the ${colors.underline('wallet')} command`)}\r\n\r\n  Usage:\r\n    account                          ${colors.gray('Display your wallet address, or connects if none')}\r\n    account <command>                ${colors.gray('Perform an account action')}\r\n\r\n  Commands:\r\n    connect                          ${colors.gray('Connect to your wallet')}\r\n    chain                            ${colors.gray('Display information about the current chain')}\r\n    chain <id>                       ${colors.gray('Switch to chain id; may be hex, decimal, or name')}\r\n    balance                          ${colors.gray(\"Display the account balance of the chain's native currency\")}\r\n    balance <token>                  ${colors.gray('Displays the account balance of the ERC20 token, eg. USDC')}\r\n    sign <message>                   ${colors.gray('Sign a message using your wallet')}\r\n    send <amount> <address>          ${colors.gray('Send <amount> of native coin to <address>')}\r\n\r\n  Options:\r\n    --help                         Print this help message\r\n    --version                      Print the version information\r\n    --wallet                       {metamask},walletconnect\r\n`\r\n\r\nexport const spec = {\r\n  '--help': Boolean,\r\n  '--version': Boolean\r\n}\r\n\r\nexport let web3\r\nexport let term\r\nexport let signer\r\nexport let provider\r\nexport let tokens\r\nexport const allChains = chains\r\n\r\nprovider = Web3.givenProvider\r\nweb3 = new Web3(provider)\r\n\r\nexport function setPrompt (terminal) {\r\n  terminal = terminal || term || globalThis.Terminal\r\n  const displayAddress = `${colors.gray('0x')}${colors.primary(account.address?.substr(2, 4))}${colors.gray('..')}${colors.primary(account.address?.substr(-4, 4))}`\r\n  terminal.promptFormat = `(${colors.warning(account.chain.chain)})[${colors.info(`0x${account.chainId.toString(16)}`)}]<${displayAddress}>:{cwd}${colors.green('#')} `\r\n}\r\n\r\nexport const account = {\r\n  address: null, _chainId: 1, encryptionPublicKey: null,\r\n\r\n  get chain () {\r\n    return chains?.find(chain => chain.chainId === this._chainId)\r\n  },\r\n\r\n  get chainId () { return this._chainId },\r\n  set chainId (newChainId) {\r\n    this._chainId = Number(newChainId)\r\n    updateTokenList()\r\n    setPrompt()\r\n  }\r\n}\r\n\r\nexport async function updateTokenList () {\r\n  try {\r\n    tokens = await Ocean.tokenList(account.chainId)\r\n  } catch (err) {\r\n    console.error(err)\r\n    throw err\r\n  }\r\n}\r\n\r\nexport async function connect () {\r\n  try {\r\n    const accounts = await web3.eth.getAccounts()\r\n    if (accounts.length === 0) {\r\n      await provider.request({\r\n        method: 'wallet_requestPermissions',\r\n        params: [{ eth_accounts: {} }]\r\n      })\r\n    }\r\n\r\n    account.address = (await web3.eth.getAccounts())[0]\r\n    account.chainId = await web3.eth.getChainId()\r\n\r\n    // account.encryptionPublicKey = await provider.request({\r\n    //   method: 'eth_getEncryptionPublicKey',\r\n    //   params: [account.address]\r\n    // })\r\n  } catch {\r\n    throw new Error(colors.danger('Failed to connect to web3 provider. Do you have https://metamask.io installed and unlocked?'))\r\n  }\r\n\r\n  term.log(`${colors.success('Connected to account:')} ${colors.bold.blue(account.address)}`)\r\n\r\n  // Subscribe to accounts change\r\n  provider.on('accountsChanged', accounts => {\r\n    // console.log('accountsChanged', accounts)\r\n    account.address = accounts[0]\r\n    setPrompt()\r\n  })\r\n\r\n  // Subscribe to chainId change\r\n  provider.on('chainChanged', chainId => {\r\n    // console.log('chainChanged', chainId)\r\n    account.chainId = chainId\r\n  })\r\n\r\n  // Subscribe to provider connection\r\n  provider.on('connect', info => {\r\n    console.log('connect', info)\r\n  })\r\n\r\n  // Subscribe to provider disconnection\r\n  provider.on('disconnect', error => {\r\n    console.error('disconnect', error)\r\n  })\r\n\r\n  return account.address\r\n}\r\n\r\nexport async function switchChain (args) {\r\n  if (!args._[1]) return term.log(account.chain)\r\n  let newChain = args._[1]\r\n\r\n  if (!newChain) return term.log(JSON.stringify(account.chain, null, 2))\r\n\r\n  let findBy\r\n  if (!isNaN(parseInt(newChain))) findBy = parseInt(newChain)\r\n  else if (typeof newChain === 'string') {\r\n    if (newChain.substr(0, 2) === '0x') findBy = Number(newChain)\r\n    else {\r\n      switch (newChain) {\r\n        case 'ethereum':\r\n          newChain = 'eth'\r\n          break\r\n      }\r\n\r\n      const chain = chains.find(c => {\r\n        return (\r\n          c.chain.toLowerCase() === newChain.toLowerCase() ||\r\n          c.network.toLowerCase() === newChain.toLowerCase() ||\r\n          c.name.toLowerCase() === newChain.toLowerCase() ||\r\n          c.infoURL.toLowerCase() === newChain.toLowerCase() ||\r\n          c.shortName.toLowerCase() === newChain.toLowerCase() ||\r\n          c.nativeCurrency.name.toLowerCase() === newChain.toLowerCase()\r\n        )\r\n      })\r\n\r\n      if (!chain) return term.log(colors.danger(`Cannot find chain ${newChain}`))\r\n      findBy = chain.chainId\r\n    }\r\n  }\r\n\r\n  const chainInfo = chains?.find(chain => chain.chainId === findBy)\r\n  if (!chainInfo) return term.log(colors.danger(`Cannot find chain ${newChain}`))\r\n\r\n  try {\r\n    term.log(colors.warning(`Trying to switch to the ${chainInfo.name} network...`))\r\n    await provider.request({\r\n      method: 'wallet_switchEthereumChain',\r\n      params: [{ chainId: `0x${chainInfo.chainId.toString(16)}` }]\r\n    })\r\n\r\n    account.chainId = chainInfo.chainId\r\n  } catch (err) {\r\n    if (err.code === 4902) {\r\n      term.log(colors.warning(\"The network wasn't known by the wallet, trying to add it now..\"))\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [{\r\n          chainId: `0x${chainInfo.chainId.toString(16)}`,\r\n          chainName: chainInfo.name,\r\n          nativeCurrency: chainInfo.nativeCurrency,\r\n          rpcUrls: chainInfo.rpc\r\n        }]\r\n      })\r\n    } else {\r\n      console.error(err)\r\n    }\r\n\r\n    console.error(err)\r\n    term.log(colors.danger(err.message))\r\n  }\r\n}\r\n\r\nexport async function getBalance (symbol) {\r\n  if (!account.address) throw new Error('Not connected to wallet')\r\n  let balance = 0\r\n\r\n  if (!symbol) {\r\n    balance = web3.utils.fromWei(await web3.eth.getBalance(account.address)) + ' ' + account.chain.nativeCurrency.symbol\r\n  } else {\r\n    const token = tokens\r\n      ? symbol.substr(0, 2) === '0x'\r\n          ? tokens?.find(token => token.address === symbol)\r\n          : tokens?.find(token => token.symbol === symbol)\r\n      : null\r\n\r\n    if (!token) throw new Error(colors.danger('Unknown token on this network'))\r\n\r\n    const data = await Ocean.getBalance(account.chainId, account.address, token.address)\r\n    balance = data[0].balance + ' ' + data[0].symbol\r\n  }\r\n\r\n  return balance\r\n}\r\n\r\nexport async function sign (message) {\r\n  message = message.replace(/\\\\n/g, '\\n')\r\n  return await web3.eth.personal.sign(message, account.address)\r\n}\r\n\r\nexport async function send (args) {\r\n  return await web3.eth.sendTransaction({\r\n    from: account.address,\r\n    to: args._[2],\r\n    value: Web3.utils.toWei(args._[1])\r\n  })\r\n}\r\n\r\nasync function displayOrConnect () {\r\n  if (!account.address) return await connect()\r\n  term.log(account.address)\r\n}\r\n\r\nexport async function run (terminal, context) {\r\n  term = terminal\r\n  const args = arg(spec, { argv: cliParse(context) })\r\n  const cmd = args._?.[0]\r\n\r\n  if (args['--version']) return term.log(version)\r\n  if (args['--help']) return term.log(help)\r\n\r\n  switch (cmd) {\r\n    case 'connect':\r\n      return connect(args)\r\n    case 'chain':\r\n      return switchChain(args)\r\n    case 'balance':\r\n      return term.log(await getBalance(args?._[1]))\r\n    case 'sign':\r\n      return term.log(await sign(args?._[1]))\r\n    case 'send':\r\n      return term.log(await send(args))\r\n    case undefined:\r\n      return displayOrConnect(args)\r\n    default:\r\n      throw new Error('account: invalid command')\r\n  }\r\n}\r\n","exports.quote = function (xs) {\n    return xs.map(function (s) {\n        if (s && typeof s === 'object') {\n            return s.op.replace(/(.)/g, '\\\\$1');\n        }\n        else if (/[\"\\s]/.test(s) && !/'/.test(s)) {\n            return \"'\" + s.replace(/(['\\\\])/g, '\\\\$1') + \"'\";\n        }\n        else if (/[\"'\\s]/.test(s)) {\n            return '\"' + s.replace(/([\"\\\\$`!])/g, '\\\\$1') + '\"';\n        }\n        else {\n            return String(s).replace(/([A-Za-z]:)?([#!\"$&'()*,:;<=>?@\\[\\\\\\]^`{|}])/g, '$1\\\\$2');\n        }\n    }).join(' ');\n};\n\n// '<(' is process substitution operator and\n// can be parsed the same as control operator\nvar CONTROL = '(?:' + [\n    '\\\\|\\\\|', '\\\\&\\\\&', ';;', '\\\\|\\\\&', '\\\\<\\\\(', '>>', '>\\\\&', '[&;()|<>]'\n].join('|') + ')';\nvar META = '|&;()<> \\\\t';\nvar BAREWORD = '(\\\\\\\\[\\'\"' + META + ']|[^\\\\s\\'\"' + META + '])+';\nvar SINGLE_QUOTE = '\"((\\\\\\\\\"|[^\"])*?)\"';\nvar DOUBLE_QUOTE = '\\'((\\\\\\\\\\'|[^\\'])*?)\\'';\n\nvar TOKEN = '';\nfor (var i = 0; i < 4; i++) {\n    TOKEN += (Math.pow(16,8)*Math.random()).toString(16);\n}\n\nexports.parse = function (s, env, opts) {\n    var mapped = parse(s, env, opts);\n    if (typeof env !== 'function') return mapped;\n    return mapped.reduce(function (acc, s) {\n        if (typeof s === 'object') return acc.concat(s);\n        var xs = s.split(RegExp('(' + TOKEN + '.*?' + TOKEN + ')', 'g'));\n        if (xs.length === 1) return acc.concat(xs[0]);\n        return acc.concat(xs.filter(Boolean).map(function (x) {\n            if (RegExp('^' + TOKEN).test(x)) {\n                return JSON.parse(x.split(TOKEN)[1]);\n            }\n            else return x;\n        }));\n    }, []);\n};\n\nfunction parse (s, env, opts) {\n    var chunker = new RegExp([\n        '(' + CONTROL + ')', // control chars\n        '(' + BAREWORD + '|' + SINGLE_QUOTE + '|' + DOUBLE_QUOTE + ')*'\n    ].join('|'), 'g');\n    var match = s.match(chunker).filter(Boolean);\n    var commented = false;\n\n    if (!match) return [];\n    if (!env) env = {};\n    if (!opts) opts = {};\n    return match.map(function (s, j) {\n        if (commented) {\n            return;\n        }\n        if (RegExp('^' + CONTROL + '$').test(s)) {\n            return { op: s };\n        }\n\n        // Hand-written scanner/parser for Bash quoting rules:\n        //\n        //  1. inside single quotes, all characters are printed literally.\n        //  2. inside double quotes, all characters are printed literally\n        //     except variables prefixed by '$' and backslashes followed by\n        //     either a double quote or another backslash.\n        //  3. outside of any quotes, backslashes are treated as escape\n        //     characters and not printed (unless they are themselves escaped)\n        //  4. quote context can switch mid-token if there is no whitespace\n        //     between the two quote contexts (e.g. all'one'\"token\" parses as\n        //     \"allonetoken\")\n        var SQ = \"'\";\n        var DQ = '\"';\n        var DS = '$';\n        var BS = opts.escape || '\\\\';\n        var quote = false;\n        var esc = false;\n        var out = '';\n        var isGlob = false;\n\n        for (var i = 0, len = s.length; i < len; i++) {\n            var c = s.charAt(i);\n            isGlob = isGlob || (!quote && (c === '*' || c === '?'));\n            if (esc) {\n                out += c;\n                esc = false;\n            }\n            else if (quote) {\n                if (c === quote) {\n                    quote = false;\n                }\n                else if (quote == SQ) {\n                    out += c;\n                }\n                else { // Double quote\n                    if (c === BS) {\n                        i += 1;\n                        c = s.charAt(i);\n                        if (c === DQ || c === BS || c === DS) {\n                            out += c;\n                        } else {\n                            out += BS + c;\n                        }\n                    }\n                    else if (c === DS) {\n                        out += parseEnvVar();\n                    }\n                    else {\n                        out += c;\n                    }\n                }\n            }\n            else if (c === DQ || c === SQ) {\n                quote = c;\n            }\n            else if (RegExp('^' + CONTROL + '$').test(c)) {\n                return { op: s };\n            }\n            else if (RegExp('^#$').test(c)) {\n                commented = true;\n                if (out.length){\n                    return [out, { comment: s.slice(i+1) + match.slice(j+1).join(' ') }];\n                }\n                return [{ comment: s.slice(i+1) + match.slice(j+1).join(' ') }];\n            }\n            else if (c === BS) {\n                esc = true;\n            }\n            else if (c === DS) {\n                out += parseEnvVar();\n            }\n            else out += c;\n        }\n\n        if (isGlob) return {op: 'glob', pattern: out};\n\n        return out;\n\n        function parseEnvVar() {\n            i += 1;\n            var varend, varname;\n            //debugger\n            if (s.charAt(i) === '{') {\n                i += 1;\n                if (s.charAt(i) === '}') {\n                    throw new Error(\"Bad substitution: \" + s.substr(i - 2, 3));\n                }\n                varend = s.indexOf('}', i);\n                if (varend < 0) {\n                    throw new Error(\"Bad substitution: \" + s.substr(i));\n                }\n                varname = s.substr(i, varend - i);\n                i = varend;\n            }\n            else if (/[*@#?$!_\\-]/.test(s.charAt(i))) {\n                varname = s.charAt(i);\n                i += 1;\n            }\n            else {\n                varend = s.substr(i).match(/[^\\w\\d_]/);\n                if (!varend) {\n                    varname = s.substr(i);\n                    i = s.length;\n                } else {\n                    varname = s.substr(i, varend.index);\n                    i += varend.index - 1;\n                }\n            }\n            return getVar(null, '', varname);\n        }\n    })\n    // finalize parsed aruments\n    .reduce(function(prev, arg){\n        if (arg === undefined){\n            return prev;\n        }\n        return prev.concat(arg);\n    },[]);\n\n    function getVar (_, pre, key) {\n        var r = typeof env === 'function' ? env(key) : env[key];\n        if (r === undefined && key != '')\n            r = '';\n        else if (r === undefined)\n            r = '$';\n\n        if (typeof r === 'object') {\n            return pre + TOKEN + JSON.stringify(r) + TOKEN;\n        }\n        else return pre + r;\n    }\n}\n"],"names":["$e9036bc7e4b4ba73$var$BaseURL","async","$e9036bc7e4b4ba73$export$433ece0ffb4f36c7","chain","result","fetch","code","data","json","Error","$e9036bc7e4b4ba73$export$df96cd8d56be0ab1","account","inTokenAddress","web3","term","provider","tokens","name","version","description","help","colors","spec","Boolean","allChains","chains","setPrompt","terminal","globalThis","Terminal","displayAddress","address","substr","promptFormat","chainId","toString","Web3","_chainId","encryptionPublicKey","this","newChainId","Number","updateTokenList","Ocean","console","error","connect","eth","getAccounts","length","request","method","params","eth_accounts","getChainId","log","on","accounts","info","switchChain","args","_","newChain","JSON","stringify","isNaN","parseInt","findBy","find","c","toLowerCase","network","infoURL","shortName","nativeCurrency","chainInfo","chainName","rpcUrls","rpc","message","getBalance","symbol","balance","utils","fromWei","token","sign","replace","personal","send","sendTransaction","from","to","value","displayOrConnect","run","context","arg","argv","cliParse","cmd","undefined","CONTROL","join","TOKEN","i","Math","pow","random","exports","s","env","opts","mapped","chunker","RegExp","match","filter","commented","map","j","test","op","BS","escape","quote","esc","out","isGlob","len","charAt","parseEnvVar","comment","slice","pattern","varend","varname","pre","key","r","indexOf","index","reduce","prev","concat","parse","acc","xs","split","x"],"sourceRoot":""}