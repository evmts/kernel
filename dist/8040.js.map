{"version":3,"file":"8040.js","mappings":"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","sources":["webpack://@web3os-core/kernel/./src/modules/torrent/index.js"],"sourcesContent":["import arg from 'arg'\r\nimport path from 'path'\r\nimport colors from 'ansi-colors'\r\nimport columnify from 'columnify'\r\nimport WebTorrent from 'webtorrent'\r\nimport { parse as cliParse } from 'shell-quote'\r\n\r\nexport const name = 'torrent'\r\nexport const version = '0.1.0'\r\nexport const description = 'WebTorrent Utility'\r\nexport const help = `\r\n  ${colors.magenta.bold(description)}\r\n  Note: this tool is a WIP\r\n\r\n  Usage:\r\n    torrent <command> <args> [options]\r\n\r\n  Commands:\r\n    add <torrent>                          Start downloading a torrent (magnet or http url)\r\n    files <torrentID>                      List files in the specified torrent\r\n    list                                   List torrents\r\n    play <torrentID> <fileID>              Play a video\r\n\r\n  Options:\r\n    --help                                 Print this help message\r\n    --version                              Print the version information\r\n`\r\n\r\nexport let client\r\n\r\nexport const spec = {\r\n  '--help': Boolean,\r\n  '--version': Boolean\r\n}\r\n\r\nexport function add (url, args) {\r\n  if (!url || url === '') throw new Error('You must specify a magnet or torrent url')\r\n  client.add(url, torrent => {\r\n    torrent.on('done', () => console.log('Done:', torrent))\r\n  })\r\n}\r\n\r\nexport function files (torrentID, args) {\r\n  const torrent = client.torrents[torrentID]\r\n  const data = torrent.files.map((file, id) => {\r\n    return { id, length: file.length, path: file.path }\r\n  })\r\n\r\n  return data\r\n}\r\n\r\nexport function list (args) {\r\n  const data = client.torrents.map((torrent, id) => {\r\n    const progress = (torrent.progress * 100).toFixed(1) + '%'\r\n    const { name, files, length, numPeers: peers, downloaded, uploaded, downloadSpeed, uploadSpeed } = torrent\r\n\r\n    return {\r\n      id, name, length, progress, peers, downloaded, uploaded,\r\n      dlSpeed: downloadSpeed.toFixed(1), ulSpeed: uploadSpeed.toFixed(1),\r\n      files: files.length\r\n    }\r\n  })\r\n\r\n  return data\r\n}\r\n\r\nexport function play (torrentID, fileID, args) {\r\n  const torrent = client.torrents[torrentID]\r\n  const file = torrent.files[fileID]\r\n\r\n  const div = document.createElement('div')\r\n  div.style.width = '100%'\r\n  div.style.height = '100%'\r\n\r\n  const win = kernel.windows.create({\r\n    title: file.name,\r\n    mount: div\r\n  })\r\n\r\n  file.appendTo(div)\r\n  div.querySelector('video').style.width = '100%'\r\n  div.querySelector('video').style.height = '100%'\r\n}\r\n\r\nexport async function run (term, context = '') {\r\n  const args = arg(spec, { argv: cliParse(context) })\r\n  if (args['--version']) return term.log(version)\r\n  if (args['--help']) return term.log(help)\r\n\r\n  const cmd = args._?.[0]\r\n\r\n  if (!client) client = new WebTorrent()\r\n\r\n  switch (cmd) {\r\n    case 'add':\r\n      return add(args._?.[1], args)\r\n    case 'files':\r\n      return term.log(columnify(files(args._?.[1], args)))\r\n    case 'list':\r\n      return term.log(columnify(list(args)))\r\n    case 'play':\r\n      return play(args._?.[1], args._?.[2], args)\r\n    default:\r\n      return term.log(help)\r\n  }\r\n}\r\n"],"names":["i","client","name","version","description","help","colors","spec","Boolean","add","url","args","Error","torrent","on","console","log","files","torrentID","torrents","map","file","id","length","path","list","data","progress","toFixed","peers","numPeers","downloaded","uploaded","downloadSpeed","uploadSpeed","dlSpeed","ulSpeed","play","fileID","div","document","createElement","style","width","height","kernel","windows","create","title","mount","appendTo","querySelector","run","term","context","arg","argv","cliParse","cmd","_","WebTorrent","columnify"],"sourceRoot":""}