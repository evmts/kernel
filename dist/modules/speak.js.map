{"version":3,"file":"modules/speak.js","mappings":"mBAQoBA,gBAAgBC,YACpCD,gBAAgBE,gBAAkB,WACvBF,gBAAgBC,c","sources":["webpack://@web3os-core/kernel/./src/modules/speak/index.js"],"sourcesContent":["// TODO: Move this to the recognition module when it's ready\n// const SpeechRecognition = window.SpeechRecognition || webkitSpeechRecognition;\n// const SpeechGrammarList = window.SpeechGrammarList || webkitSpeechGrammarList;\n// const SpeechRecognitionEvent = window.SpeechRecognitionEvent || webkitSpeechRecognitionEvent;\n\nexport const name = 'speak'\nexport const description = 'Speech Synthesis Utility'\n\nexport let voices = speechSynthesis.getVoices()\nspeechSynthesis.onvoiceschanged = () => {\n  voices = speechSynthesis.getVoices()\n}\n\nexport function getUtterance (text, voice, volume = 1, pitch = 1, rate = 1) {\n  const utter = new SpeechSynthesisUtterance(text)\n  utter.default = false\n  utter.voice = voice\n  utter.volume = volume\n  utter.pitch = pitch\n  utter.rate = rate\n  console.log({ text, voice, volume, pitch, rate, utter })\n  return utter\n}\n\nexport function speak (utterance) {\n  return speechSynthesis.speak(utterance)\n}\n\nexport async function run (term, context) {\n  console.log({ voices })\n  for (const voice of speechSynthesis.getVoices()) {\n    console.log('Voice:', voice.name, voice.lang)\n    speak(getUtterance(context, voice, 1, _.random(0.1,2), _.random(0.1,2)))\n  }\n\n  // For testing and hilarity\n  // for (const voice of voices) {\n  //   speak(getUtterance(context, voice, 1, _.random(0.1,2), _.random(0.1,2)))\n  // }\n}\n"],"names":["speechSynthesis","getVoices","onvoiceschanged"],"sourceRoot":""}