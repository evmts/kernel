{"version":3,"file":"modules/markdown.js","mappings":";yDAEA,MAIMA,EAAa,uHASbC,EAAS,KACb,MAAMC,EAAS,CACbC,aARqB,IAAZC,GAC0B,MAA5BA,EAAQC,IAAIC,YAQnBC,SAAS,EACTC,OAAQ,GACRC,KAAM,IAkBFC,EAAO,CAACC,EAAOC,EAAOC,IACF,mBAAVF,EAAuBA,EAAMC,GAASD,EAAMD,KAAKE,EAAOC,GAGlEF,EAAQ,CAACC,EAAOE,KACpB,GAAc,KAAVF,GAAyB,MAATA,EAAe,MAAO,GAC1C,IAAuB,IAAnBV,EAAOC,QAAmB,OAAOS,EACrC,IAAuB,IAAnBV,EAAOK,QAAmB,MAAO,GACrC,IAAIQ,EAAM,GAAKH,EACXI,EAAKD,EAAIE,SAAS,MAClBC,EAAIJ,EAAMK,OAId,IAHID,EAAI,GAAKJ,EAAMG,SAAS,aAC1BH,EAAQ,IAAI,IAAIM,IAAI,CAAC,aAAcN,KAASO,WAEvCH,KAAM,GAAGH,EAAML,EAAKR,EAAOM,OAAOM,EAAMI,IAAKH,EAAKC,GACzD,OAAOD,GAGHO,EAAS,CAACC,EAAMC,EAAOC,KAC3BvB,EAAOM,OAAOe,GAlCHZ,KACX,IAAIe,EAAOf,EAAMe,KAAO,KAAUf,EAAMa,MAAM,MAC1CG,EAAQhB,EAAMgB,MAAQ,KAAUhB,EAAMa,MAAM,MAC5CI,EAAQjB,EAAMiB,MAAQ,IAAIC,OAAO,aAAalB,EAAMa,MAAM,MAAO,KASrE,OARAb,EAAMD,KAAO,CAACE,EAAOC,KACfD,EAAMK,SAASU,KAAQf,EAAQA,EAAMkB,QAAQF,EAAOD,EAAQD,IAChE,IAAIK,EAASL,EAAOd,EAAQe,EAI5B,OAAOd,EAAUkB,EAAOD,QAAQ,SAAU,GAAGH,MAAUD,KAAUK,GAE5DpB,GAsBeqB,CAAK,CAAET,OAAMC,WACxBtB,EAAOO,KAAKgB,KAAUvB,EAAOO,KAAKgB,GAAQ,KAChDQ,KAAKV,GAEVW,QAAQC,eAAejC,EAAQqB,EAAM,CACnCa,cAAc,EACdC,YAAY,EACZC,IAAIC,GACFrC,EAAOsC,MAAMjB,EAAMgB,IAErBE,MACE,IAAIC,EAAQ9B,GAASD,EAAMC,EAAO8B,EAAM5B,OAGxC,OAFAoB,QAAQS,eAAeD,EAAOxC,GAC9BwC,EAAM5B,MAAQ8B,KAAK9B,MAAQ8B,KAAK9B,MAAM+B,OAAOtB,GAAQ,CAACA,GAC/CmB,MA4Gb,OAvGApB,EAAO,QAAS,CAAC,EAAG,GAAI,YACxBA,EAAO,OAAQ,CAAC,EAAG,IAAK,YACxBA,EAAO,MAAO,CAAC,EAAG,IAAK,YACvBA,EAAO,SAAU,CAAC,EAAG,IAAK,YAC1BA,EAAO,YAAa,CAAC,EAAG,IAAK,YAC7BA,EAAO,UAAW,CAAC,EAAG,IAAK,YAC3BA,EAAO,SAAU,CAAC,EAAG,IAAK,YAC1BA,EAAO,gBAAiB,CAAC,EAAG,IAAK,YAEjCA,EAAO,QAAS,CAAC,GAAI,IAAK,SAC1BA,EAAO,MAAO,CAAC,GAAI,IAAK,SACxBA,EAAO,QAAS,CAAC,GAAI,IAAK,SAC1BA,EAAO,SAAU,CAAC,GAAI,IAAK,SAC3BA,EAAO,OAAQ,CAAC,GAAI,IAAK,SACzBA,EAAO,UAAW,CAAC,GAAI,IAAK,SAC5BA,EAAO,OAAQ,CAAC,GAAI,IAAK,SACzBA,EAAO,QAAS,CAAC,GAAI,IAAK,SAC1BA,EAAO,OAAQ,CAAC,GAAI,IAAK,SACzBA,EAAO,OAAQ,CAAC,GAAI,IAAK,SAEzBA,EAAO,UAAW,CAAC,GAAI,IAAK,MAC5BA,EAAO,QAAS,CAAC,GAAI,IAAK,MAC1BA,EAAO,UAAW,CAAC,GAAI,IAAK,MAC5BA,EAAO,WAAY,CAAC,GAAI,IAAK,MAC7BA,EAAO,SAAU,CAAC,GAAI,IAAK,MAC3BA,EAAO,YAAa,CAAC,GAAI,IAAK,MAC9BA,EAAO,SAAU,CAAC,GAAI,IAAK,MAC3BA,EAAO,UAAW,CAAC,GAAI,IAAK,MAE5BA,EAAO,cAAe,CAAC,GAAI,IAAK,UAChCA,EAAO,YAAa,CAAC,GAAI,IAAK,UAC9BA,EAAO,cAAe,CAAC,GAAI,IAAK,UAChCA,EAAO,eAAgB,CAAC,GAAI,IAAK,UACjCA,EAAO,aAAc,CAAC,GAAI,IAAK,UAC/BA,EAAO,gBAAiB,CAAC,GAAI,IAAK,UAClCA,EAAO,aAAc,CAAC,GAAI,IAAK,UAC/BA,EAAO,cAAe,CAAC,GAAI,IAAK,UAEhCA,EAAO,gBAAiB,CAAC,IAAK,IAAK,YACnCA,EAAO,cAAe,CAAC,IAAK,IAAK,YACjCA,EAAO,gBAAiB,CAAC,IAAK,IAAK,YACnCA,EAAO,iBAAkB,CAAC,IAAK,IAAK,YACpCA,EAAO,eAAgB,CAAC,IAAK,IAAK,YAClCA,EAAO,kBAAmB,CAAC,IAAK,IAAK,YACrCA,EAAO,eAAgB,CAAC,IAAK,IAAK,YAClCA,EAAO,gBAAiB,CAAC,IAAK,IAAK,YAEnCpB,EAAO4C,UAAY9C,EACnBE,EAAO6C,SAAW7C,EAAO8C,QAAUjC,IACjCb,EAAO4C,UAAUG,UAAY,EACP,iBAARlC,GAA4B,KAARA,GAAcb,EAAO4C,UAAUI,KAAKnC,IAGxEb,EAAOsC,MAAQ,CAACjB,EAAMmB,KACpB,IAAIS,EAAsB,iBAAVT,EAAqBxC,EAAOwC,GAASA,EAErD,GAAkB,mBAAPS,EACT,MAAM,IAAIC,UAAU,6EAGjBD,EAAGrC,QACNoB,QAAQC,eAAegB,EAAI,OAAQ,CAAEZ,MAAOhB,IAC5CrB,EAAOM,OAAOe,GAAQ4B,EACtBA,EAAGrC,MAAQ,CAACS,IAGdW,QAAQC,eAAejC,EAAQqB,EAAM,CACnCa,cAAc,EACdC,YAAY,EACZC,IAAIC,GACFrC,EAAOsC,MAAMjB,EAAMgB,IAErBE,MACE,IAAIC,EAAQ9B,GAASD,EAAMC,EAAO8B,EAAM5B,OAGxC,OAFAoB,QAAQS,eAAeD,EAAOxC,GAC9BwC,EAAM5B,MAAQ8B,KAAK9B,MAAQ8B,KAAK9B,MAAM+B,OAAOM,EAAGrC,OAASqC,EAAGrC,MACrD4B,MAKbxC,EAAOmD,MAAQC,IACb,GA5J4B,QAAfC,EA4JCD,IA5JqC,iBAARC,GAAqBC,MAAMC,QAAQF,GA4JvD,MAAM,IAAIH,UAAU,kCA5J9BG,MA6Jb,IAAK,IAAIhC,KAAQmC,OAAOjD,KAAK6C,GAC3BpD,EAAOsC,MAAMjB,EAAM+B,EAAO/B,IAE5B,OAAOrB,GAGTA,EAAOsC,MAAM,WAAWzB,GACH,iBAARA,GAA4B,KAARA,GAC7Bb,EAAO4C,UAAUG,UAAY,EACtBlC,EAAIe,QAAQ5B,EAAO4C,UAAW,KAEhC,KAGT5C,EAAOsC,MAAM,QAAQzB,GAAOA,IAC5Bb,EAAOyD,KAAOzD,EAAO0D,MAAQ1D,EAAO2D,KAEpC3D,EAAO4D,WAAa5D,EAAO6D,QAC3B7D,EAAO8D,QAAU,EAAQ,OACzB9D,EAAOoB,OAASA,EACTpB,GAGT+D,EAAOC,QAAUjE,IACjBgE,EAAOC,QAAQjE,OAASA,+CCrLxB,MAAMkE,OAA6B,IAAZ/D,GAAwD,UAA7BA,EAAQC,IAAI+D,aACxDC,OAA+B,IAAZjE,GAAgD,UAArBA,EAAQkE,SACtDC,OAA6B,IAAZnE,GAAgD,UAArBA,EAAQkE,SAEpDE,EAAS,CACbC,eAAgB,IAChBC,UAAW,IACXC,SAAU,IACVC,OAAQ,IACRC,YAAa,IACbC,UAAW,IACXC,MAAO,IACPC,YAAa,IACbC,KAAM,IACNC,KAAM,IACNC,OAAQ,IACRC,MAAO,IACPC,eAAgB,IAChBC,OAAQ,IACRC,gBAAiB,IACjBC,YAAa,IACbC,cAAe,IACfC,QAAS,IACTC,SAAU,IACVC,QAAS,IACTC,UAAW,IACXC,SAAU,IACVC,QAAS,IACTC,SAAU,IACVC,QAAS,IACTC,YAAa,KAGTC,EAAUzC,OAAO0C,OAAO,GAAI5B,EAAQ,CACxC6B,MAAO,IACPC,MAAO,IACPC,cAAe,MACfC,SAAU,MACVC,KAAM,IACNC,cAAe,IACfC,QAAS,IACTC,aAAc,IACdC,SAAU,MACVC,QAAS,MACTC,QAAS,MAGLC,EAAQtD,OAAO0C,OAAO,GAAI5B,EAAQ,CACtCyC,YAAa,IACbZ,MAAO,IACPC,MAAO,IACPC,cAAe,IACfC,SAAU,IACVC,KAAM,IACNS,aAAc,IACdR,cAAe,IACfC,QAASpC,EAAU,IAAM,IACzBqC,aAAcrC,EAAU,IAAM,IAC9BsC,SAAU,IACVC,QAAS,IACTC,QAAS,MAGX9C,EAAOC,QAAWG,IAAcF,EAAWgC,EAAUa,EACrD9E,QAAQC,eAAe8B,EAAOC,QAAS,SAAU,CAAE7B,YAAY,EAAOE,MAAOiC,IAC7EtC,QAAQC,eAAe8B,EAAOC,QAAS,UAAW,CAAE7B,YAAY,EAAOE,MAAO4D,IAC9EjE,QAAQC,eAAe8B,EAAOC,QAAS,QAAS,CAAE7B,YAAY,EAAOE,MAAOyE,kCC5D5E,SAASZ,EAAOe,GACd,IAAIC,EAAU5D,MAAM6D,UAAUC,MAAMC,KAAKC,UAAW,GAUpD,OARAJ,EAAQK,SAAQ,SAAUC,GACnBA,GAELhE,OAAOjD,KAAKiH,GAAQD,SAAQ,SAAUE,GACpCR,EAAIQ,GAAOD,EAAOC,SAIfR,EAGT,SAASS,EAAOT,GAAO,OAAOzD,OAAO2D,UAAUQ,SAASN,KAAKJ,GAI7D,SAASW,EAAWX,GAAO,MAAuB,sBAAhBS,EAAOT,GAGzC,SAASY,EAAShH,GAAO,OAAOA,EAAIe,QAAQ,uBAAwB,QAKpE,IAAIkG,EAAiB,CACnBC,WAAW,EACXC,YAAY,EACZC,SAAS,GAWPC,EAAiB,CACnB,QAAS,CACPC,SAAU,SAAUC,EAAMC,EAAKC,GAC7B,IAAIC,EAAOH,EAAKhB,MAAMiB,GAQtB,OANKC,EAAKE,GAAGC,OAEXH,EAAKE,GAAGC,KAAQ,IAAI9G,OAClB,UAAY2G,EAAKE,GAAGE,SAAWJ,EAAKE,GAAGG,qBAAuBL,EAAKE,GAAGI,SAAU,MAGhFN,EAAKE,GAAGC,KAAKzF,KAAKuF,GACbA,EAAKM,MAAMP,EAAKE,GAAGC,MAAM,GAAGxH,OAE9B,IAGX,SAAW,QACX,OAAW,QACX,KAAW,CACTkH,SAAU,SAAUC,EAAMC,EAAKC,GAC7B,IAAIC,EAAOH,EAAKhB,MAAMiB,GAkBtB,OAhBKC,EAAKE,GAAGM,UAEXR,EAAKE,GAAGM,QAAW,IAAInH,OACrB,IACA2G,EAAKE,GAAGE,SAGR,sBAAwBJ,EAAKE,GAAGO,WAAa,SAAWT,EAAKE,GAAGQ,gBAAkB,IAClFV,EAAKE,GAAGS,SACRX,EAAKE,GAAGU,oBACRZ,EAAKE,GAAGI,SAER,MAIAN,EAAKE,GAAGM,QAAQ9F,KAAKuF,GAEnBF,GAAO,GAAuB,MAAlBD,EAAKC,EAAM,IACvBA,GAAO,GAAuB,MAAlBD,EAAKC,EAAM,GADqB,EAEzCE,EAAKM,MAAMP,EAAKE,GAAGM,SAAS,GAAG7H,OAEjC,IAGX,UAAW,CACTkH,SAAU,SAAUC,EAAMC,EAAKC,GAC7B,IAAIC,EAAOH,EAAKhB,MAAMiB,GAOtB,OALKC,EAAKE,GAAGW,SACXb,EAAKE,GAAGW,OAAU,IAAIxH,OACpB,IAAM2G,EAAKE,GAAGY,eAAiB,IAAMd,EAAKE,GAAGa,gBAAiB,MAG9Df,EAAKE,GAAGW,OAAOnG,KAAKuF,GACfA,EAAKM,MAAMP,EAAKE,GAAGW,QAAQ,GAAGlI,OAEhC,KAWTqI,EAAe,8EAA8EC,MAAM,KA8BvG,SAASC,EAAQlB,GAGf,IAAIE,EAAKF,EAAKE,GAAK,EAAQ,MAAR,CAAoBF,EAAKmB,UAGxCC,EAAOpB,EAAKqB,SAASvC,QAWzB,SAASwC,EAAMC,GAAO,OAAOA,EAAIjI,QAAQ,SAAU4G,EAAGsB,UATtDxB,EAAKyB,YAEAzB,EAAK0B,mBACRN,EAAK3H,KA5Ca,2VA8CpB2H,EAAK3H,KAAKyG,EAAGyB,QAEbzB,EAAGsB,SAAWJ,EAAKQ,KAAK,KAIxB1B,EAAG2B,YAAmBxI,OAAOiI,EAAMpB,EAAG4B,iBAAkB,KACxD5B,EAAG6B,WAAmB1I,OAAOiI,EAAMpB,EAAG8B,gBAAiB,KACvD9B,EAAG+B,iBAAmB5I,OAAOiI,EAAMpB,EAAGgC,sBAAuB,KAC7DhC,EAAGiC,gBAAmB9I,OAAOiI,EAAMpB,EAAGkC,qBAAsB,KAM5D,IAAIC,EAAU,GAId,SAASC,EAAYvJ,EAAMgC,GACzB,MAAM,IAAIwH,MAAM,+BAAiCxJ,EAAO,MAAQgC,GAHlEiF,EAAKwC,aAAe,GAMpBtH,OAAOjD,KAAK+H,EAAKyC,aAAaxD,SAAQ,SAAUlG,GAC9C,IAAIgC,EAAMiF,EAAKyC,YAAY1J,GAG3B,GAAY,OAARgC,EAAJ,CAEA,IAAI2H,EAAW,CAAE7C,SAAU,KAAM8C,KAAM,MAIvC,GAFA3C,EAAKwC,aAAazJ,GAAQ2J,EAzKkB,oBAAhBtD,EA2KfrE,GAiBX,MA3L0C,oBAAhBqE,EA2KbrE,EAAI8E,UAENP,EAAWvE,EAAI8E,UACxB6C,EAAS7C,SAAW9E,EAAI8E,SAExByC,EAAYvJ,EAAMgC,GAJlB2H,EAAS7C,SAnEjB,SAAyBK,GACvB,OAAO,SAAUJ,EAAMC,GACrB,IAAIE,EAAOH,EAAKhB,MAAMiB,GAEtB,OAAIG,EAAGxF,KAAKuF,GACHA,EAAKM,MAAML,GAAI,GAAGvH,OAEpB,GA4DiBiK,CAAgB7H,EAAI8E,eAOtCP,EAAWvE,EAAI8H,WACjBH,EAASG,UAAY9H,EAAI8H,UACf9H,EAAI8H,UAGdP,EAAYvJ,EAAMgC,GAFlB2H,EAASG,UAjER,SAAUtC,EAAOP,GACtBA,EAAK6C,UAAUtC,MAxHnB,SAAkB5B,GAAO,MAAuB,oBAAhBS,EAAOT,GAgM/BmE,CAAS/H,GAKbuH,EAAYvJ,EAAMgC,GAJhBsH,EAAQ5I,KAAKV,OAWjBsJ,EAAQpD,SAAQ,SAAUjF,GACnBgG,EAAKwC,aAAaxC,EAAKyC,YAAYzI,MAMxCgG,EAAKwC,aAAaxI,GAAO6F,SACvBG,EAAKwC,aAAaxC,EAAKyC,YAAYzI,IAAQ6F,SAC7CG,EAAKwC,aAAaxI,GAAO6I,UACvB7C,EAAKwC,aAAaxC,EAAKyC,YAAYzI,IAAQ6I,cAM/C7C,EAAKwC,aAAa,IAAM,CAAE3C,SAAU,KAAMgD,UArGnC,SAAUtC,EAAOP,GACtBA,EAAK6C,UAAUtC,KAyGjB,IAAIwC,EAAQ7H,OAAOjD,KAAK+H,EAAKwC,cACRQ,QAAO,SAAUjK,GAEhB,OAAOA,EAAKJ,OAAS,GAAKqH,EAAKwC,aAAazJ,MAE7CkK,IAAI1D,GACJqC,KAAK,KAE1B5B,EAAKE,GAAGgD,YAAgB7J,OAAO,oBAA2B6G,EAAGiD,SAAW,MAAQJ,EAAQ,IAAK,KAC7F/C,EAAKE,GAAGkD,cAAgB/J,OAAO,oBAA2B6G,EAAGiD,SAAW,MAAQJ,EAAQ,IAAK,MAE7F/C,EAAKE,GAAGmD,QAAUhK,OAChB,IAAM2G,EAAKE,GAAGgD,YAAYhE,OAAS,MAAQc,EAAKE,GAAGiC,gBAAgBjD,OAAS,MAC5E,KAxIJ,SAAwBc,GACtBA,EAAKsD,WAAa,EAClBtD,EAAKuD,eAAmB,GA6IxBC,CAAexD,GAQjB,SAASyD,EAAMzD,EAAM0D,GACnB,IAAIC,EAAQ3D,EAAKsD,UACbM,EAAQ5D,EAAK6D,eACb/D,EAAQE,EAAKuD,eAAezE,MAAM6E,EAAOC,GAO7CxJ,KAAK0J,OAAY9D,EAAK+D,WAAWC,cAMjC5J,KAAK6J,MAAYN,EAAQD,EAMzBtJ,KAAKK,UAAYmJ,EAAMF,EAMvBtJ,KAAK8J,IAAYpE,EAMjB1F,KAAK0F,KAAYA,EAMjB1F,KAAK+J,IAAYrE,EAGnB,SAASsE,EAAYpE,EAAM0D,GACzB,IAAInD,EAAQ,IAAIkD,EAAMzD,EAAM0D,GAI5B,OAFA1D,EAAKwC,aAAajC,EAAMuD,QAAQjB,UAAUtC,EAAOP,GAE1CO,EA0CT,SAAS8D,EAAUC,EAASC,GAC1B,KAAMnK,gBAAgBiK,GACpB,OAAO,IAAIA,EAAUC,EAASC,GAvUlC,IAAsB5F,EA0Uf4F,IA1Ue5F,EA2UD2F,EA1UZpJ,OAAOjD,KAAK0G,GAAO,IAAI6F,QAAO,SAAUC,EAAKC,GAClD,OAAOD,GAAOjF,EAAemF,eAAeD,MAC3C,KAyUCH,EAAUD,EACVA,EAAU,KAIdlK,KAAK+G,SAAqBvD,EAAO,GAAI4B,EAAgB+E,GAGrDnK,KAAKkJ,WAAsB,EAC3BlJ,KAAKyJ,gBAAsB,EAC3BzJ,KAAK2J,WAAqB,GAC1B3J,KAAKmJ,eAAqB,GAE1BnJ,KAAKqI,YAAqB7E,EAAO,GAAIgC,EAAgB0E,GACrDlK,KAAKoI,aAAqB,GAE1BpI,KAAKiH,SAAqBL,EAC1B5G,KAAKsH,mBAAqB,EAE1BtH,KAAK8F,GAAK,GAEVgB,EAAQ9G,MAWViK,EAAUxF,UAAU+F,IAAM,SAAad,EAAQe,GAG7C,OAFAzK,KAAKqI,YAAYqB,GAAUe,EAC3B3D,EAAQ9G,MACDA,MAUTiK,EAAUxF,UAAU/E,IAAM,SAAayK,GAErC,OADAnK,KAAK+G,SAAWvD,EAAOxD,KAAK+G,SAAUoD,GAC/BnK,MASTiK,EAAUxF,UAAUnE,KAAO,SAAcoF,GAKvC,GAHA1F,KAAKmJ,eAAiBzD,EACtB1F,KAAKkJ,WAAkB,GAElBxD,EAAKnH,OAAU,OAAO,EAE3B,IAAImM,EAAGC,EAAIC,EAAIC,EAAKvB,EAAOwB,EAAMhF,EAAIiF,EAGrC,GAAI/K,KAAK8F,GAAGgD,YAAYxI,KAAKoF,GAG3B,KAFAI,EAAK9F,KAAK8F,GAAGkD,eACV3I,UAAY,EACgB,QAAvBqK,EAAI5E,EAAGkF,KAAKtF,KAElB,GADAmF,EAAM7K,KAAKiL,aAAavF,EAAMgF,EAAE,GAAI5E,EAAGzF,WAC9B,CACPL,KAAK2J,WAAiBe,EAAE,GACxB1K,KAAKkJ,UAAiBwB,EAAEb,MAAQa,EAAE,GAAGnM,OACrCyB,KAAKyJ,eAAiBiB,EAAEb,MAAQa,EAAE,GAAGnM,OAASsM,EAC9C,MA8CN,OAzCI7K,KAAK+G,SAAS1B,WAAarF,KAAKoI,aAAa,WAE/C2C,EAAUrF,EAAKwF,OAAOlL,KAAK8F,GAAGiC,mBACf,IAET/H,KAAKkJ,UAAY,GAAK6B,EAAU/K,KAAKkJ,YAC0D,QAA5FyB,EAAKjF,EAAKS,MAAMnG,KAAK+G,SAASxB,QAAUvF,KAAK8F,GAAG6B,WAAa3H,KAAK8F,GAAG+B,qBAExEyB,EAAQqB,EAAGd,MAAQc,EAAG,GAAGpM,QAErByB,KAAKkJ,UAAY,GAAKI,EAAQtJ,KAAKkJ,aACrClJ,KAAK2J,WAAiB,GACtB3J,KAAKkJ,UAAiBI,EACtBtJ,KAAKyJ,eAAiBkB,EAAGd,MAAQc,EAAG,GAAGpM,SAO7CyB,KAAK+G,SAASzB,YAActF,KAAKoI,aAAa,YAEvC1C,EAAKyF,QAAQ,MACR,GAGmC,QAA1CP,EAAKlF,EAAKS,MAAMnG,KAAK8F,GAAG2B,gBAE3B6B,EAAQsB,EAAGf,MAAQe,EAAG,GAAGrM,OACzBuM,EAAQF,EAAGf,MAAQe,EAAG,GAAGrM,QAErByB,KAAKkJ,UAAY,GAAKI,EAAQtJ,KAAKkJ,WAClCI,IAAUtJ,KAAKkJ,WAAa4B,EAAO9K,KAAKyJ,kBAC3CzJ,KAAK2J,WAAiB,UACtB3J,KAAKkJ,UAAiBI,EACtBtJ,KAAKyJ,eAAiBqB,IAMvB9K,KAAKkJ,WAAa,GAW3Be,EAAUxF,UAAUwE,QAAU,SAAiBvD,GAC7C,OAAO1F,KAAK8F,GAAGmD,QAAQ3I,KAAKoF,IAa9BuE,EAAUxF,UAAUwG,aAAe,SAAsBvF,EAAMgE,EAAQ/D,GAErE,OAAK3F,KAAKoI,aAAasB,EAAOE,eAGvB5J,KAAKoI,aAAasB,EAAOE,eAAenE,SAASC,EAAMC,EAAK3F,MAF1D,GAsBXiK,EAAUxF,UAAU0B,MAAQ,SAAeT,GACzC,IAAI4D,EAAQ,EAAG8B,EAAS,GAGpBpL,KAAKkJ,WAAa,GAAKlJ,KAAKmJ,iBAAmBzD,IACjD0F,EAAO/L,KAAK2K,EAAYhK,KAAMsJ,IAC9BA,EAAQtJ,KAAKyJ,gBAOf,IAHA,IAAI5D,EAAOyD,EAAQ5D,EAAKhB,MAAM4E,GAAS5D,EAGhC1F,KAAKM,KAAKuF,IACfuF,EAAO/L,KAAK2K,EAAYhK,KAAMsJ,IAE9BzD,EAAOA,EAAKnB,MAAM1E,KAAKyJ,gBACvBH,GAAStJ,KAAKyJ,eAGhB,OAAI2B,EAAO7M,OACF6M,EAGF,MAmBTnB,EAAUxF,UAAUuC,KAAO,SAAcqE,EAAMC,GAG7C,OAFAD,EAAOzK,MAAMC,QAAQwK,GAAQA,EAAO,CAAEA,GAEjCC,GAOLtL,KAAKiH,SAAWjH,KAAKiH,SAAShH,OAAOoL,GACJE,OACA3C,QAAO,SAAU4C,EAAIC,EAAKC,GACzB,OAAOF,IAAOE,EAAID,EAAM,MAEzBhN,UAEjCqI,EAAQ9G,MACDA,OAdLA,KAAKiH,SAAWoE,EAAK3G,QACrB1E,KAAKsH,mBAAoB,EACzBR,EAAQ9G,MACDA,OAmBXiK,EAAUxF,UAAUgE,UAAY,SAAmBtC,GAK5CA,EAAMuD,SAAUvD,EAAM4D,IAAM,UAAY5D,EAAM4D,KAE9B,YAAjB5D,EAAMuD,QAAyB,YAAYpJ,KAAK6F,EAAM4D,OACxD5D,EAAM4D,IAAM,UAAY5D,EAAM4D,MAUlCE,EAAUxF,UAAU4C,UAAY,aAIhChG,EAAOC,QAAU2I,gCCxnBjB5I,EAAOC,QAAU,SAAUqK,GACzB,IAAI7F,EAAK,GA+KT,OA5KAA,EAAG8F,QAAU,gBACb9F,EAAG+F,OAAU,gBACb/F,EAAGgG,MAAU,gBACbhG,EAAGiG,MAAU,gBAGbjG,EAAGiD,SAAW,CAAEjD,EAAGgG,MAAOhG,EAAGiG,MAAOjG,EAAG+F,QAASrE,KAAK,KAGrD1B,EAAGkG,QAAU,CAAElG,EAAGgG,MAAOhG,EAAG+F,QAASrE,KAAK,KAS1C1B,EAAGmG,kBAA0B,eAAmCnG,EAAGiD,SAAW,IAAMjD,EAAG8F,QAAU,IAMjG9F,EAAGoG,QAED,yFAGFpG,EAAGE,SAAc,YAAcF,EAAGkG,QAAU,uBAE5ClG,EAAGS,SAED,kFAEFT,EAAGU,oBAED,cAAkCV,EAAGiD,SAAW,6BAA+BjD,EAAGiD,SAAW,KAE/FjD,EAAGI,SAED,iBAGcJ,EAAGkG,QAHjB,2CAIoBlG,EAAGkG,QAJvB,wBAKoBlG,EAAGkG,QALvB,wBAMoBlG,EAAGkG,QANvB,wBAOoBlG,EAAGkG,QAPvB,yBAQoBlG,EAAGkG,QARvB,qBASiBlG,EAAGmG,kBATpB,sCAkBiBnG,EAAGkG,QAAU,WACvBL,GAAQA,EAAK,OACZ,6BAEA,SAEF,OAAS7F,EAAGkG,QAxBlB,UAyBelG,EAAGkG,QAzBlB,aA0BkBlG,EAAGkG,QA1BrB,gBA2BiBlG,EAAGkG,QA3BpB,iBAkCFlG,EAAGY,eAED,iEAEFZ,EAAGyB,OAED,wBAKFzB,EAAGQ,gBAGD,MACER,EAAGyB,OACH,IACAzB,EAAGmG,kBAHL,UAMFnG,EAAGO,WAED,MACEP,EAAGyB,OADL,OAGUzB,EAAGmG,kBAHb,QAKUnG,EAAGmG,kBAAoB,QAAUnG,EAAGmG,kBAAoB,UAAYnG,EAAGmG,kBALjF,KAQFnG,EAAGqG,SAED,eAIgBrG,EAAGO,WAAa,SAAWP,EAAGO,WAJ9C,KAOFP,EAAGsG,eAED,MACEtG,EAAGoG,QADL,aAGgBpG,EAAGO,WAHnB,qBAMFP,EAAGuG,qBAED,YAAcvG,EAAGO,WAAa,oBAEhCP,EAAGa,gBAEDb,EAAGqG,SAAWrG,EAAGU,oBAEnBV,EAAGwG,sBAEDxG,EAAGsG,eAAiBtG,EAAGU,oBAEzBV,EAAGG,qBAEDH,EAAGqG,SAAWrG,EAAGS,SAAWT,EAAGU,oBAEjCV,EAAGyG,2BAEDzG,EAAGsG,eAAiBtG,EAAGS,SAAWT,EAAGU,oBAEvCV,EAAG0G,iCAED1G,EAAGuG,qBAAuBvG,EAAGS,SAAWT,EAAGU,oBAO7CV,EAAGkC,oBAED,sDAAwDlC,EAAGiD,SAAW,SAExEjD,EAAG4B,gBAEC,kBAAsC5B,EAAGkG,QAAzC,KACMlG,EAAGY,eAAiB,IAAMZ,EAAGwG,sBAAwB,IAE/DxG,EAAG8B,eAGC,mCAA0C9B,EAAGiD,SAA7C,qBAC0BjD,EAAGyG,2BAA6BzG,EAAGI,SAAW,IAE5EJ,EAAGgC,qBAGC,mCAA0ChC,EAAGiD,SAA7C,qBAC0BjD,EAAG0G,iCAAmC1G,EAAGI,SAAW,IAE3EJ,iCChLT,uCCEAzE,EAAOC,QAAU,EAAjB,+BCCAD,EAAOC,QAAU,CACf,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,UACA,SACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,8BChEF,IAUImL,EAAc,kIAEdC,EAAc,mCAMdC,EAAc,IAAI1N,OAAO,OAASwN,EAAW,IAAMC,EAA1B,4HAEzBE,EAAyB,IAAI3N,OAAO,OAASwN,EAAW,IAAMC,EAAY,KAE9ErL,EAAOC,QAAQ,EAAcqL,EAC7BtL,EAAOC,QAAQ,EAAyBsL,gCClBxC,IAAIC,EAAkB/L,OAAO2D,UAAU8F,eAEvC,SAASuC,EAAIC,EAAQhI,GACnB,OAAO8H,EAAgBlI,KAAKoI,EAAQhI,GA+BtC,SAASiI,EAAkBC,GAGzB,QAAIA,GAAK,OAAUA,GAAK,OAEpBA,GAAK,OAAUA,GAAK,OACH,QAAZ,MAAJA,IAA2C,QAAZ,MAAJA,IAE5BA,GAAK,GAAQA,GAAK,GACZ,KAANA,GACAA,GAAK,IAAQA,GAAK,IAClBA,GAAK,KAAQA,GAAK,KAElBA,EAAI,SAIV,SAASC,EAAcD,GAErB,GAAIA,EAAI,MAAQ,CAEd,IAAIE,EAAa,QADjBF,GAAK,QAC2B,IAC5BG,EAAa,OAAc,KAAJH,GAE3B,OAAOI,OAAOC,aAAaH,EAAYC,GAEzC,OAAOC,OAAOC,aAAaL,GAI7B,IAAIM,EAAkB,8CAElBC,EAAkB,IAAIvO,OAAOsO,EAAezI,OAAS,IADnC,6BACmDA,OAAQ,MAE7E2I,EAAyB,qCAEzBC,EAAW,EAAQ,OA2CnBC,EAAsB,SACtBC,EAAyB,UACzBC,EAAoB,CACtB,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,UAGP,SAASC,EAAkBC,GACzB,OAAOF,EAAkBE,GAY3B,IAAIC,EAAmB,uBAwCnBC,EAAmB,EAAQ,OAiH/B3M,EAAQ4M,IAAsB,GAC9B5M,EAAQ4M,IAAIC,MAAZ,SACA7M,EAAQ4M,IAAIE,QAAZ,SAEA9M,EAAQkC,OA5RR,SAAgBe,GACd,IAAIC,EAAU5D,MAAM6D,UAAUC,MAAMC,KAAKC,UAAW,GAcpD,OAZAJ,EAAQK,SAAQ,SAAUC,GACxB,GAAKA,EAAL,CAEA,GAAsB,iBAAXA,EACT,MAAM,IAAItE,UAAUsE,EAAS,kBAG/BhE,OAAOjD,KAAKiH,GAAQD,SAAQ,SAAUE,GACpCR,EAAIQ,GAAOD,EAAOC,UAIfR,GA8QTjD,EAAQoH,SAvSR,SAAkBnE,GAAO,MAAuB,oBAFhD,SAAgBA,GAAO,OAAOzD,OAAO2D,UAAUQ,SAASN,KAAKJ,GAE7BS,CAAOT,IAwSvCjD,EAAQwL,IAAsBA,EAC9BxL,EAAQ+M,WAtMR,SAAoBlQ,GAClB,OAAIA,EAAIgN,QAAQ,MAAQ,EAAYhN,EAC7BA,EAAIe,QAAQqO,EAAgB,OAqMrCjM,EAAQgN,YAlMR,SAAqBnQ,GACnB,OAAIA,EAAIgN,QAAQ,MAAQ,GAAKhN,EAAIgN,QAAQ,KAAO,EAAYhN,EAErDA,EAAIe,QAAQsO,GAAiB,SAAUrH,EAAOoI,EAASC,GAC5D,OAAID,GAlCR,SAA8BpI,EAAOxH,GACnC,IAAI8P,EAAO,EAEX,OAAI3B,EAAIY,EAAU/O,GACT+O,EAAS/O,GAGS,KAAvBA,EAAK+P,WAAW,IAAsBjB,EAAuBnN,KAAK3B,IAIhEqO,EAHJyB,EAAiC,MAA1B9P,EAAK,GAAGiL,cACb+E,SAAShQ,EAAK+F,MAAM,GAAI,IAAMiK,SAAShQ,EAAK+F,MAAM,GAAI,KAG/CwI,EAAcuB,GAIlBtI,EAmBEyI,CAAqBzI,EAAOqI,OA8LvClN,EAAQ0L,kBAAsBA,EAC9B1L,EAAQ4L,cAAsBA,EAE9B5L,EAAQuN,WA9KR,SAAoB1Q,GAClB,OAAIwP,EAAoBrN,KAAKnC,GACpBA,EAAIe,QAAQ0O,EAAwBE,GAEtC3P,GA2KTmD,EAAQwN,eAjRR,SAAwBC,EAAKpJ,EAAKqJ,GAChC,MAAO,GAAG/O,OAAO8O,EAAIrK,MAAM,EAAGiB,GAAMqJ,EAAaD,EAAIrK,MAAMiB,EAAM,KAiRnErE,EAAQ2N,QA/JR,SAAiBR,GACf,OAAQA,GACN,KAAK,EACL,KAAK,GACH,OAAO,EAEX,OAAO,GA0JTnN,EAAQ4N,aAtJR,SAAsBT,GACpB,GAAIA,GAAQ,MAAUA,GAAQ,KAAU,OAAO,EAC/C,OAAQA,GACN,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,MACH,OAAO,EAEX,OAAO,GAuITnN,EAAQ6N,eAlHR,SAAwBpB,GACtB,OAAQA,GACN,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACH,OAAO,EACT,QACE,OAAO,IA+EbzM,EAAQ8N,YA/HR,SAAqBrB,GACnB,OAAOE,EAAiB3N,KAAKyN,IA+H/BzM,EAAQ6D,SAzKR,SAAkBhH,GAChB,OAAOA,EAAIe,QAAQ8O,EAAkB,SAyKvC1M,EAAQ+N,mBA3ER,SAA4BlR,GA+C1B,OA5CAA,EAAMA,EAAImR,OAAOpQ,QAAQ,OAAQ,KAQP,MAAtB,IAAI0K,gBACNzL,EAAMA,EAAIe,QAAQ,KAAM,MAmCnBf,EAAIyL,cAAc2F,6CC5R3BjO,EAAQkO,eAAR,SACAlO,EAAQmO,qBAAuB,EAA/B,MACAnO,EAAQoO,eAAR,sCCDA,IAAIpB,EAAc,qBAGlBjN,EAAOC,QAAU,SAA8BnD,EAAKwH,EAAKgK,GACvD,IAAIlB,EAAMmB,EAENrG,EAAQ5D,EACRyF,EAAS,CACPyE,IAAI,EACJlK,IAAK,EACLmK,MAAO,EACP3R,IAAK,IAGX,GAA4B,KAAxBA,EAAIuQ,WAAW/I,GAAuB,CAExC,IADAA,IACOA,EAAMgK,GAAK,CAEhB,GAAa,MADblB,EAAOtQ,EAAIuQ,WAAW/I,IACQ,OAAOyF,EACrC,GAAa,KAATqD,EAAyB,OAAOrD,EACpC,GAAa,KAATqD,EAIF,OAHArD,EAAOzF,IAAMA,EAAM,EACnByF,EAAOjN,IAAMmQ,EAAYnQ,EAAIuG,MAAM6E,EAAQ,EAAG5D,IAC9CyF,EAAOyE,IAAK,EACLzE,EAEI,KAATqD,GAAyB9I,EAAM,EAAIgK,EACrChK,GAAO,EAITA,IAIF,OAAOyF,EAMT,IADAwE,EAAQ,EACDjK,EAAMgK,GAGE,MAFblB,EAAOtQ,EAAIuQ,WAAW/I,OAKlB8I,EAAO,IAAiB,MAATA,IAEnB,GAAa,KAATA,GAAyB9I,EAAM,EAAIgK,EAAvC,CACE,GAAgC,KAA5BxR,EAAIuQ,WAAW/I,EAAM,GAAe,MACxCA,GAAO,MAFT,CAMA,GAAa,KAAT8I,KACFmB,EACY,GAAM,OAAOxE,EAG3B,GAAa,KAATqD,EAAuB,CACzB,GAAc,IAAVmB,EAAe,MACnBA,IAGFjK,IAGF,OAAI4D,IAAU5D,GACA,IAAViK,IAEJxE,EAAOjN,IAAMmQ,EAAYnQ,EAAIuG,MAAM6E,EAAO5D,IAC1CyF,EAAO0E,MAnEK,EAoEZ1E,EAAOzF,IAAMA,EACbyF,EAAOyE,IAAK,GANgBzE,2BClE9B/J,EAAOC,QAAU,SAAwByO,EAAOxG,EAAOyG,GACrD,IAAIJ,EAAOK,EAAOC,EAAQC,EACtBC,GAAY,EACZT,EAAMI,EAAMM,OACZC,EAASP,EAAMpK,IAKnB,IAHAoK,EAAMpK,IAAM4D,EAAQ,EACpBqG,EAAQ,EAEDG,EAAMpK,IAAMgK,GAAK,CAEtB,GAAe,MADfO,EAASH,EAAMhB,IAAIL,WAAWqB,EAAMpK,OAGpB,KADdiK,EACiB,CACfK,GAAQ,EACR,MAMJ,GAFAE,EAAUJ,EAAMpK,IAChBoK,EAAMQ,GAAGC,OAAOC,UAAUV,GACX,KAAXG,EACF,GAAIC,IAAYJ,EAAMpK,IAAM,EAE1BiK,SACK,GAAII,EAET,OADAD,EAAMpK,IAAM2K,GACJ,EAYd,OAPIL,IACFG,EAAWL,EAAMpK,KAInBoK,EAAMpK,IAAM2K,EAELF,iCCzCT,IAAI9B,EAAc,qBAGlBjN,EAAOC,QAAU,SAAwBnD,EAAKwH,EAAKgK,GACjD,IAAIlB,EACAyB,EACAJ,EAAQ,EACRvG,EAAQ5D,EACRyF,EAAS,CACPyE,IAAI,EACJlK,IAAK,EACLmK,MAAO,EACP3R,IAAK,IAGX,GAAIwH,GAAOgK,EAAO,OAAOvE,EAIzB,GAAe,MAFf8E,EAAS/R,EAAIuQ,WAAW/I,KAEkB,KAAXuK,GAAsC,KAAXA,EAA2B,OAAO9E,EAO5F,IALAzF,IAGe,KAAXuK,IAAmBA,EAAS,IAEzBvK,EAAMgK,GAAK,CAEhB,IADAlB,EAAOtQ,EAAIuQ,WAAW/I,MACTuK,EAKX,OAJA9E,EAAOzF,IAAMA,EAAM,EACnByF,EAAO0E,MAAQA,EACf1E,EAAOjN,IAAMmQ,EAAYnQ,EAAIuG,MAAM6E,EAAQ,EAAG5D,IAC9CyF,EAAOyE,IAAK,EACLzE,EACF,GAAa,KAATqD,GAAoC,KAAXyB,EAClC,OAAO9E,EACW,KAATqD,EACTqB,IACkB,KAATrB,GAAyB9I,EAAM,EAAIgK,IAC5ChK,IAC4B,KAAxBxH,EAAIuQ,WAAW/I,IACjBmK,KAIJnK,IAGF,OAAOyF,iCChDT,IAAIsF,EAAe,EAAQ,OACvBC,EAAe,EAAQ,OACvBC,EAAe,EAAQ,OACvBC,EAAe,EAAQ,OACvBC,EAAe,EAAQ,OACvBC,EAAe,EAAQ,OACvB9G,EAAe,EAAQ,OACvBkE,EAAe,EAAQ,OACvB6C,EAAe,EAAQ,OAGvBC,EAAS,CACXC,QAAS,EAAQ,OACjBC,KAAM,EAAQ,OACdC,WAAY,EAAQ,QAYlBC,EAAe,oCACfC,EAAe,oCAEnB,SAASC,EAAaxH,GAEpB,IAAI5L,EAAM4L,EAAIuF,OAAO1F,cAErB,OAAOyH,EAAa/Q,KAAKnC,MAAQmT,EAAahR,KAAKnC,GAMrD,IAAIqT,EAAsB,CAAE,QAAS,SAAU,WAE/C,SAASC,EAAc1H,GACrB,IAAI2H,EAASvD,EAAMwD,MAAM5H,GAAK,GAE9B,GAAI2H,EAAOE,YAOJF,EAAOG,UAAYL,EAAoBrG,QAAQuG,EAAOG,WAAa,GACtE,IACEH,EAAOE,SAAWZ,EAASc,QAAQJ,EAAOE,UAC1C,MAAOG,IAIb,OAAO5D,EAAM6D,OAAO7D,EAAM8D,OAAOP,IAGnC,SAASQ,EAAkBnI,GACzB,IAAI2H,EAASvD,EAAMwD,MAAM5H,GAAK,GAE9B,GAAI2H,EAAOE,YAOJF,EAAOG,UAAYL,EAAoBrG,QAAQuG,EAAOG,WAAa,GACtE,IACEH,EAAOE,SAAWZ,EAASmB,UAAUT,EAAOE,UAC5C,MAAOG,IAKb,OAAO5D,EAAMiE,OAAOjE,EAAM8D,OAAOP,GAASvD,EAAMiE,OAAOC,aAAe,KAyIxE,SAASC,EAAWC,EAAYpI,GAC9B,KAAMnK,gBAAgBsS,GACpB,OAAO,IAAIA,EAAWC,EAAYpI,GAG/BA,GACEuG,EAAMhI,SAAS6J,KAClBpI,EAAUoI,GAAc,GACxBA,EAAa,WAWjBvS,KAAKwQ,OAAS,IAAIO,EASlB/Q,KAAKwS,MAAQ,IAAI1B,EASjB9Q,KAAKyS,KAAO,IAAI5B,EAuBhB7Q,KAAK0S,SAAW,IAAI9B,EASpB5Q,KAAK2S,QAAU,IAAI1I,EAiBnBjK,KAAKuR,aAAeA,EAQpBvR,KAAKyR,cAAgBA,EAOrBzR,KAAKkS,kBAAoBA,EAWzBlS,KAAK0Q,MAAQA,EAQb1Q,KAAK2Q,QAAUD,EAAMlN,OAAO,GAAImN,GAGhC3Q,KAAKmK,QAAU,GACfnK,KAAK4S,UAAUL,GAEXpI,GAAWnK,KAAKN,IAAIyK,GAuB1BmI,EAAW7N,UAAU/E,IAAM,SAAUyK,GAEnC,OADAuG,EAAMlN,OAAOxD,KAAKmK,QAASA,GACpBnK,MAcTsS,EAAW7N,UAAUmO,UAAY,SAAUC,GACzC,IAAiBN,EAAb3M,EAAO5F,KAEX,GAAI0Q,EAAMhI,SAASmK,MAEjBA,EAAU5B,EADVsB,EAAaM,IAEG,MAAM,IAAI1K,MAAM,+BAAiCoK,EAAa,iBAGhF,IAAKM,EAAW,MAAM,IAAI1K,MAAM,8CAchC,OAZI0K,EAAQ1I,SAAWvE,EAAKlG,IAAImT,EAAQ1I,SAEpC0I,EAAQC,YACVhS,OAAOjD,KAAKgV,EAAQC,YAAYjO,SAAQ,SAAUlG,GAC5CkU,EAAQC,WAAWnU,GAAMoU,OAC3BnN,EAAKjH,GAAMqU,MAAMC,WAAWJ,EAAQC,WAAWnU,GAAMoU,OAEnDF,EAAQC,WAAWnU,GAAMuU,QAC3BtN,EAAKjH,GAAMwU,OAAOF,WAAWJ,EAAQC,WAAWnU,GAAMuU,WAIrDlT,MAqBTsS,EAAW7N,UAAU2O,OAAS,SAAU/H,EAAMgI,GAC5C,IAAIjI,EAAS,GAERxK,MAAMC,QAAQwK,KAASA,EAAO,CAAEA,IAErC,CAAE,OAAQ,QAAS,UAAWxG,SAAQ,SAAUyO,GAC9ClI,EAASA,EAAOnL,OAAOD,KAAKsT,GAAON,MAAMI,OAAO/H,GAAM,MACrDrL,MAEHoL,EAASA,EAAOnL,OAAOD,KAAKwQ,OAAO2C,OAAOC,OAAO/H,GAAM,IAEvD,IAAIkI,EAASlI,EAAKzC,QAAO,SAAUjK,GAAQ,OAAOyM,EAAOD,QAAQxM,GAAQ,KAEzE,GAAI4U,EAAOhV,SAAW8U,EACpB,MAAM,IAAIlL,MAAM,iDAAmDoL,GAGrE,OAAOvT,MAWTsS,EAAW7N,UAAU+O,QAAU,SAAUnI,EAAMgI,GAC7C,IAAIjI,EAAS,GAERxK,MAAMC,QAAQwK,KAASA,EAAO,CAAEA,IAErC,CAAE,OAAQ,QAAS,UAAWxG,SAAQ,SAAUyO,GAC9ClI,EAASA,EAAOnL,OAAOD,KAAKsT,GAAON,MAAMQ,QAAQnI,GAAM,MACtDrL,MAEHoL,EAASA,EAAOnL,OAAOD,KAAKwQ,OAAO2C,OAAOK,QAAQnI,GAAM,IAExD,IAAIkI,EAASlI,EAAKzC,QAAO,SAAUjK,GAAQ,OAAOyM,EAAOD,QAAQxM,GAAQ,KAEzE,GAAI4U,EAAOhV,SAAW8U,EACpB,MAAM,IAAIlL,MAAM,kDAAoDoL,GAEtE,OAAOvT,MAoBTsS,EAAW7N,UAAUgP,IAAM,SAAUC,GACnC,IAAIC,EAAO,CAAE3T,MAAOC,OAAOW,MAAM6D,UAAUC,MAAMC,KAAKC,UAAW,IAEjE,OADA8O,EAAOE,MAAMF,EAAQC,GACd3T,MAmBTsS,EAAW7N,UAAUkN,MAAQ,SAAU5C,EAAKtR,GAC1C,GAAmB,iBAARsR,EACT,MAAM,IAAI5G,MAAM,iCAGlB,IAAI4H,EAAQ,IAAI/P,KAAKyS,KAAKoB,MAAM9E,EAAK/O,KAAMvC,GAI3C,OAFAuC,KAAKyS,KAAKjV,QAAQuS,GAEXA,EAAM+D,QAefxB,EAAW7N,UAAUsP,OAAS,SAAUhF,EAAKtR,GAG3C,OAFAA,EAAMA,GAAO,GAENuC,KAAK0S,SAASqB,OAAO/T,KAAK2R,MAAM5C,EAAKtR,GAAMuC,KAAKmK,QAAS1M,IAalE6U,EAAW7N,UAAUuP,YAAc,SAAUjF,EAAKtR,GAChD,IAAIsS,EAAQ,IAAI/P,KAAKyS,KAAKoB,MAAM9E,EAAK/O,KAAMvC,GAK3C,OAHAsS,EAAMkE,YAAa,EACnBjU,KAAKyS,KAAKjV,QAAQuS,GAEXA,EAAM+D,QAYfxB,EAAW7N,UAAUyP,aAAe,SAAUnF,EAAKtR,GAGjD,OAFAA,EAAMA,GAAO,GAENuC,KAAK0S,SAASqB,OAAO/T,KAAKgU,YAAYjF,EAAKtR,GAAMuC,KAAKmK,QAAS1M,IAIxE4D,EAAOC,QAAUgR,gCC7jBjB,IAAI6B,EAAkB,EAAQ,OAG1BC,EAAS,CAGX,CAAE,QAAc,EAAQ,OAA6B,CAAE,YAAa,cACpE,CAAE,OAAc,EAAQ,QACxB,CAAE,QAAc,EAAQ,OAA6B,CAAE,YAAa,YAAa,aAAc,SAC/F,CAAE,aAAc,EAAQ,OAA6B,CAAE,YAAa,YAAa,aAAc,SAC/F,CAAE,KAAc,EAAQ,OAA6B,CAAE,YAAa,YAAa,aAAc,SAC/F,CAAE,OAAc,EAAQ,OAA6B,CAAE,YAAa,YAAa,eACjF,CAAE,YAAc,EAAQ,QACxB,CAAE,aAAc,EAAQ,OAA6B,CAAE,YAAa,YAAa,eACjF,CAAE,UAAc,EAAQ,OAA6B,CAAE,YAAa,YAAa,eACjF,CAAE,WAAc,EAAQ,QACxB,CAAE,YAAc,EAAQ,SAO1B,SAAStD,IAMP9Q,KAAKgT,MAAQ,IAAImB,EAEjB,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAO7V,OAAQ8V,IACjCrU,KAAKgT,MAAM3T,KAAK+U,EAAOC,GAAG,GAAID,EAAOC,GAAG,GAAI,CAAEC,KAAMF,EAAOC,GAAG,IAAM,IAAI3P,UAO5EoM,EAAYrM,UAAU8P,SAAW,SAAUxE,EAAOyE,EAAWC,GAQ3D,IAPA,IAAQJ,EACJtB,EAAQ/S,KAAKgT,MAAM0B,SAAS,IAC5B7J,EAAMkI,EAAMxU,OACZ8D,EAAOmS,EACPG,GAAgB,EAChBC,EAAa7E,EAAMQ,GAAGpG,QAAQyK,WAE3BvS,EAAOoS,IACZ1E,EAAM1N,KAAOA,EAAO0N,EAAM8E,eAAexS,KACrCA,GAAQoS,OAIR1E,EAAM+E,OAAOzS,GAAQ0N,EAAMgF,YANV,CAUrB,GAAIhF,EAAMH,OAASgF,EAAY,CAC7B7E,EAAM1N,KAAOoS,EACb,MAUF,IAAKJ,EAAI,EAAGA,EAAIxJ,IACTkI,EAAMsB,GAAGtE,EAAO1N,EAAMoS,GAAS,GADjBJ,KAOrBtE,EAAMiF,OAASL,EAGX5E,EAAMkF,QAAQlF,EAAM1N,KAAO,KAC7BsS,GAAgB,IAGlBtS,EAAO0N,EAAM1N,MAEFoS,GAAW1E,EAAMkF,QAAQ5S,KAClCsS,GAAgB,EAChBtS,IACA0N,EAAM1N,KAAOA,KAWnByO,EAAYrM,UAAUkN,MAAQ,SAAU5C,EAAKwB,EAAI9S,EAAKyX,GACpD,IAAInF,EAEChB,IAELgB,EAAQ,IAAI/P,KAAK6T,MAAM9E,EAAKwB,EAAI9S,EAAKyX,GAErClV,KAAKuU,SAASxE,EAAOA,EAAM1N,KAAM0N,EAAMoF,WAIzCrE,EAAYrM,UAAUoP,MAAQ,EAAQ,OAGtCxS,EAAOC,QAAUwP,gCChHjB,IAAIqD,EAAS,EAAQ,OAGjBC,EAAS,CACX,CAAE,YAAkB,EAAQ,QAC5B,CAAE,QAAkB,EAAQ,QAC5B,CAAE,SAAkB,EAAQ,QAC5B,CAAE,UAAkB,EAAQ,QAC5B,CAAE,eAAkB,EAAQ,QAC5B,CAAE,cAAkB,EAAQ,SAO9B,SAASgB,IAMPpV,KAAKgT,MAAQ,IAAImB,EAEjB,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAO7V,OAAQ8V,IACjCrU,KAAKgT,MAAM3T,KAAK+U,EAAOC,GAAG,GAAID,EAAOC,GAAG,IAU5Ce,EAAK3Q,UAAUjH,QAAU,SAAUuS,GACjC,IAAIsE,EAAGgB,EAAGtC,EAIV,IAAKsB,EAAI,EAAGgB,GAFZtC,EAAQ/S,KAAKgT,MAAM0B,SAAS,KAENnW,OAAQ8V,EAAIgB,EAAGhB,IACnCtB,EAAMsB,GAAGtE,IAIbqF,EAAK3Q,UAAUoP,MAAQ,EAAQ,OAG/BxS,EAAOC,QAAU8T,gCCjDjB,IAAIjB,EAAkB,EAAQ,OAM1BC,EAAS,CACX,CAAE,OAAmB,EAAQ,QAC7B,CAAE,UAAmB,EAAQ,QAC7B,CAAE,SAAmB,EAAQ,QAC7B,CAAE,YAAmB,EAAQ,QAC7B,CAAE,gBAAmB,YACrB,CAAE,WAAmB,YACrB,CAAE,OAAmB,EAAQ,QAC7B,CAAE,QAAmB,EAAQ,QAC7B,CAAE,WAAmB,EAAQ,QAC7B,CAAE,cAAmB,EAAQ,QAC7B,CAAE,SAAmB,EAAQ,SAG3BkB,EAAU,CACZ,CAAE,gBAAmB,EAAQ,OAC7B,CAAE,gBAAmB,YACrB,CAAE,WAAmB,YACrB,CAAE,gBAAmB,EAAQ,SAO/B,SAASvE,IACP,IAAIsD,EASJ,IAFArU,KAAKgT,MAAQ,IAAImB,EAEZE,EAAI,EAAGA,EAAID,EAAO7V,OAAQ8V,IAC7BrU,KAAKgT,MAAM3T,KAAK+U,EAAOC,GAAG,GAAID,EAAOC,GAAG,IAW1C,IAFArU,KAAKmT,OAAS,IAAIgB,EAEbE,EAAI,EAAGA,EAAIiB,EAAQ/W,OAAQ8V,IAC9BrU,KAAKmT,OAAO9T,KAAKiW,EAAQjB,GAAG,GAAIiB,EAAQjB,GAAG,IAQ/CtD,EAAatM,UAAUgM,UAAY,SAAUV,GAC3C,IAAIF,EAAIwE,EAAG1O,EAAMoK,EAAMpK,IACnBoN,EAAQ/S,KAAKgT,MAAM0B,SAAS,IAC5B7J,EAAMkI,EAAMxU,OACZqW,EAAa7E,EAAMQ,GAAGpG,QAAQyK,WAC9BW,EAAQxF,EAAMwF,MAGlB,QAA0B,IAAfA,EAAM5P,GAAjB,CAKA,GAAIoK,EAAMH,MAAQgF,EAChB,IAAKP,EAAI,EAAGA,EAAIxJ,IAKdkF,EAAMH,QACNC,EAAKkD,EAAMsB,GAAGtE,GAAO,GACrBA,EAAMH,SAEFC,GATewE,UAuBrBtE,EAAMpK,IAAMoK,EAAMM,OAGfR,GAAME,EAAMpK,MACjB4P,EAAM5P,GAAOoK,EAAMpK,SAhCjBoK,EAAMpK,IAAM4P,EAAM5P,IAsCtBoL,EAAatM,UAAU8P,SAAW,SAAUxE,GAO1C,IANA,IAAIF,EAAIwE,EACJtB,EAAQ/S,KAAKgT,MAAM0B,SAAS,IAC5B7J,EAAMkI,EAAMxU,OACZiL,EAAMuG,EAAMM,OACZuE,EAAa7E,EAAMQ,GAAGpG,QAAQyK,WAE3B7E,EAAMpK,IAAM6D,GAAK,CAQtB,GAAIuG,EAAMH,MAAQgF,EAChB,IAAKP,EAAI,EAAGA,EAAIxJ,KACdgF,EAAKkD,EAAMsB,GAAGtE,GAAO,IADFsE,KAMvB,GAAIxE,GACF,GAAIE,EAAMpK,KAAO6D,EAAO,WAI1BuG,EAAMyF,SAAWzF,EAAMhB,IAAIgB,EAAMpK,OAG/BoK,EAAMyF,SACRzF,EAAM0F,eAUV1E,EAAatM,UAAUkN,MAAQ,SAAUxT,EAAKoS,EAAI9S,EAAKyX,GACrD,IAAIb,EAAGtB,EAAOlI,EACVkF,EAAQ,IAAI/P,KAAK6T,MAAM1V,EAAKoS,EAAI9S,EAAKyX,GAOzC,IALAlV,KAAKuU,SAASxE,GAGdlF,GADAkI,EAAQ/S,KAAKmT,OAAOuB,SAAS,KACjBnW,OAEP8V,EAAI,EAAGA,EAAIxJ,EAAKwJ,IACnBtB,EAAMsB,GAAGtE,IAKbgB,EAAatM,UAAUoP,MAAQ,EAAQ,OAGvCxS,EAAOC,QAAUyP,0BC3KjB1P,EAAOC,QAAU,CACf6I,QAAS,CACPuL,MAAc,EACdC,UAAc,EACdC,QAAc,EACdC,WAAc,YACdlD,SAAc,EAGdmD,aAAc,EAOdC,OAAQ,OAQRC,UAAW,KAEXpB,WAAc,IAGhB9B,WAAY,CAEVL,KAAM,CACJM,MAAO,CACL,YACA,QACA,WAIJP,MAAO,CACLO,MAAO,CACL,aACA,OACA,QACA,UACA,KACA,aACA,WACA,OACA,YACA,cAIJvC,OAAQ,CACNuC,MAAO,CACL,WACA,YACA,WACA,SACA,SACA,cACA,QACA,OACA,UACA,QAEFG,OAAQ,CACN,gBACA,WACA,4CCtER7R,EAAOC,QAAU,CACf6I,QAAS,CACPuL,MAAc,EACdC,UAAc,EACdC,QAAc,EACdC,WAAc,YACdlD,SAAc,EAGdmD,aAAc,EAOdC,OAAQ,OAQRC,UAAW,KAEXpB,WAAc,KAGhB9B,WAAY,CAEVL,KAAM,GACND,MAAO,GACPhC,OAAQ,6BChCZnP,EAAOC,QAAU,CACf6I,QAAS,CACPuL,MAAc,EACdC,UAAc,EACdC,QAAc,EACdC,WAAc,YACdlD,SAAc,EAGdmD,aAAc,EAOdC,OAAQ,OAQRC,UAAW,KAEXpB,WAAc,IAGhB9B,WAAY,CAEVL,KAAM,CACJM,MAAO,CACL,YACA,QACA,WAIJP,MAAO,CACLO,MAAO,CACL,cAIJvC,OAAQ,CACNuC,MAAO,CACL,QAEFG,OAAQ,CACN,gBACA,kDC/CR,IAAI1P,EAAkB,gBAClB8K,EAAkB,qBAClBO,EAAkB,oBAKlBoH,EAAgB,GAoHpB,SAASrF,IA8BP5Q,KAAK+S,MAAQvP,EAAO,GAAIyS,GA/I1BA,EAAcC,YAAc,SAAUpC,EAAQrI,EAAKtB,EAAS1M,EAAK0Y,GAC/D,IAAIC,EAAQtC,EAAOrI,GAEnB,MAAQ,QAAU0K,EAAIE,YAAYD,GAAS,IACnCvH,EAAWiF,EAAOrI,GAAK6K,SACvB,WAIVL,EAAcM,WAAa,SAAUzC,EAAQrI,EAAKtB,EAAS1M,EAAK0Y,GAC9D,IAAIC,EAAQtC,EAAOrI,GAEnB,MAAQ,OAAS0K,EAAIE,YAAYD,GAAS,UAClCvH,EAAWiF,EAAOrI,GAAK6K,SACvB,mBAIVL,EAAcO,MAAQ,SAAU1C,EAAQrI,EAAKtB,EAAS1M,EAAK0Y,GACzD,IAIIM,EAAapC,EAAG3I,EAAKgL,EAAUC,EAJ/BP,EAAQtC,EAAOrI,GACf5H,EAAOuS,EAAMvS,KAAOyK,EAAY8H,EAAMvS,MAAMyL,OAAS,GACrDsH,EAAW,GACXC,EAAY,GAehB,OAZIhT,IAEF+S,GADAlL,EAAM7H,EAAKgD,MAAM,WACF,GACfgQ,EAAYnL,EAAIhH,MAAM,GAAG8C,KAAK,KASI,KALlCiP,EADEtM,EAAQ6L,WACI7L,EAAQ6L,UAAUI,EAAME,QAASM,EAAUC,IAE3ChI,EAAWuH,EAAME,UAGjBnL,QAAQ,QACfsL,EAAc,KAMnB5S,GACFwQ,EAAW+B,EAAMU,UAAU,SAC3BJ,EAAWN,EAAMW,MAAQX,EAAMW,MAAMrS,QAAU,GAE3C2P,EAAI,EACNqC,EAASrX,KAAK,CAAE,QAAS8K,EAAQ0L,WAAae,KAE9CF,EAASrC,GAAKqC,EAASrC,GAAG3P,QAC1BgS,EAASrC,GAAG,IAAM,IAAMlK,EAAQ0L,WAAae,GAI/CD,EAAW,CACTI,MAAOL,GAGD,aAAeP,EAAIE,YAAYM,GAAY,IAC3CF,EACA,mBAIF,aAAeN,EAAIE,YAAYD,GAAS,IACxCK,EACA,mBAIVR,EAAce,MAAQ,SAAUlD,EAAQrI,EAAKtB,EAAS1M,EAAK0Y,GACzD,IAAIC,EAAQtC,EAAOrI,GAUnB,OAHA2K,EAAMW,MAAMX,EAAMU,UAAU,QAAQ,GAClCX,EAAIc,mBAAmBb,EAAMc,SAAU/M,EAAS1M,GAE3C0Y,EAAIgB,YAAYrD,EAAQrI,EAAKtB,IAItC8L,EAAcmB,UAAY,SAAUtD,EAAQrI,EAAKtB,GAC/C,OAAOA,EAAQwL,SAAW,WAAa,UAEzCM,EAAcoB,UAAY,SAAUvD,EAAQrI,EAAKtB,GAC/C,OAAOA,EAAQyL,OAAUzL,EAAQwL,SAAW,WAAa,SAAY,MAIvEM,EAAcvQ,KAAO,SAAUoO,EAAQrI,GACrC,OAAOoD,EAAWiF,EAAOrI,GAAK6K,UAIhCL,EAAcqB,WAAa,SAAUxD,EAAQrI,GAC3C,OAAOqI,EAAOrI,GAAK6K,SAErBL,EAAcsB,YAAc,SAAUzD,EAAQrI,GAC5C,OAAOqI,EAAOrI,GAAK6K,SAgDrB1F,EAASnM,UAAU4R,YAAc,SAAqBD,GACpD,IAAI/B,EAAGgB,EAAGjK,EAEV,IAAKgL,EAAMW,MAAS,MAAO,GAI3B,IAFA3L,EAAS,GAEJiJ,EAAI,EAAGgB,EAAIe,EAAMW,MAAMxY,OAAQ8V,EAAIgB,EAAGhB,IACzCjJ,GAAU,IAAMyD,EAAWuH,EAAMW,MAAM1C,GAAG,IAAM,KAAOxF,EAAWuH,EAAMW,MAAM1C,GAAG,IAAM,IAGzF,OAAOjJ,GAaTwF,EAASnM,UAAU0S,YAAc,SAAqBrD,EAAQrI,EAAKtB,GACjE,IAAIqN,EACApM,EAAS,GACTqM,GAAS,EACTrB,EAAQtC,EAAOrI,GAGnB,OAAI2K,EAAMsB,OACD,IAULtB,EAAM5D,QAA4B,IAAnB4D,EAAMuB,SAAkBlM,GAAOqI,EAAOrI,EAAM,GAAGiM,SAChEtM,GAAU,MAIZA,KAA8B,IAAnBgL,EAAMuB,QAAiB,KAAO,KAAOvB,EAAMwB,IAGtDxM,GAAUpL,KAAKqW,YAAYD,GAGL,IAAlBA,EAAMuB,SAAiBxN,EAAQwL,WACjCvK,GAAU,MAIRgL,EAAM5D,QACRiF,GAAS,EAEa,IAAlBrB,EAAMuB,SACJlM,EAAM,EAAIqI,EAAOvV,SAGI,YAFvBiZ,EAAY1D,EAAOrI,EAAM,IAEX5M,MAAqB2Y,EAAUE,SAKX,IAAvBF,EAAUG,SAAkBH,EAAUI,MAAQxB,EAAMwB,OAF7DH,GAAS,IAWjBrM,GAAUqM,EAAS,MAAQ,MAc7B7G,EAASnM,UAAUyP,aAAe,SAAUJ,EAAQ3J,EAAS1M,GAK3D,IAJA,IAAIoB,EACAuM,EAAS,GACT2H,EAAQ/S,KAAK+S,MAERsB,EAAI,EAAGxJ,EAAMiJ,EAAOvV,OAAQ8V,EAAIxJ,EAAKwJ,SAGjB,IAAhBtB,EAFXlU,EAAOiV,EAAOO,GAAGxV,MAGfuM,GAAU2H,EAAMlU,GAAMiV,EAAQO,EAAGlK,EAAS1M,EAAKuC,MAE/CoL,GAAUpL,KAAKmX,YAAYrD,EAAQO,EAAGlK,GAI1C,OAAOiB,GAcTwF,EAASnM,UAAUwS,mBAAqB,SAAUnD,EAAQ3J,EAAS1M,GAGjE,IAFA,IAAI2N,EAAS,GAEJiJ,EAAI,EAAGxJ,EAAMiJ,EAAOvV,OAAQ8V,EAAIxJ,EAAKwJ,IACrB,SAAnBP,EAAOO,GAAGxV,KACZuM,GAAU0I,EAAOO,GAAGiC,QACQ,UAAnBxC,EAAOO,GAAGxV,KACnBuM,GAAUpL,KAAKiX,mBAAmBnD,EAAOO,GAAG6C,SAAU/M,EAAS1M,GACnC,cAAnBqW,EAAOO,GAAGxV,OACnBuM,GAAU,MAId,OAAOA,GAaTwF,EAASnM,UAAUsP,OAAS,SAAUD,EAAQ3J,EAAS1M,GACrD,IAAI4W,EAAGxJ,EAAKhM,EACRuM,EAAS,GACT2H,EAAQ/S,KAAK+S,MAEjB,IAAKsB,EAAI,EAAGxJ,EAAMiJ,EAAOvV,OAAQ8V,EAAIxJ,EAAKwJ,IAG3B,YAFbxV,EAAOiV,EAAOO,GAAGxV,MAGfuM,GAAUpL,KAAKkU,aAAaJ,EAAOO,GAAG6C,SAAU/M,EAAS1M,QACzB,IAAhBsV,EAAMlU,GACtBuM,GAAU2H,EAAMe,EAAOO,GAAGxV,MAAMiV,EAAQO,EAAGlK,EAAS1M,EAAKuC,MAEzDoL,GAAUpL,KAAKmX,YAAYrD,EAAQO,EAAGlK,EAAS1M,GAInD,OAAO2N,GAGT/J,EAAOC,QAAUsP,0BC7TjB,SAASuD,IAUPnU,KAAK6X,UAAY,GAOjB7X,KAAK8X,UAAY,KASnB3D,EAAM1P,UAAUsT,SAAW,SAAUpZ,GACnC,IAAK,IAAI0V,EAAI,EAAGA,EAAIrU,KAAK6X,UAAUtZ,OAAQ8V,IACzC,GAAIrU,KAAK6X,UAAUxD,GAAG1V,OAASA,EAC7B,OAAO0V,EAGX,OAAQ,GAMVF,EAAM1P,UAAUuT,YAAc,WAC5B,IAAIpS,EAAO5F,KACPiY,EAAS,CAAE,IAGfrS,EAAKiS,UAAUhT,SAAQ,SAAUqT,GAC1BA,EAAK3a,SAEV2a,EAAK5D,IAAIzP,SAAQ,SAAUsT,GACrBF,EAAO9M,QAAQgN,GAAW,GAC5BF,EAAO5Y,KAAK8Y,SAKlBvS,EAAKkS,UAAY,GAEjBG,EAAOpT,SAAQ,SAAUyO,GACvB1N,EAAKkS,UAAUxE,GAAS,GACxB1N,EAAKiS,UAAUhT,SAAQ,SAAUqT,GAC1BA,EAAK3a,UAEN+V,GAAS4E,EAAK5D,IAAInJ,QAAQmI,GAAS,GAEvC1N,EAAKkS,UAAUxE,GAAOjU,KAAK6Y,EAAK3X,YA+BtC4T,EAAM1P,UAAU2T,GAAK,SAAUzZ,EAAM4B,EAAI4J,GACvC,IAAIN,EAAQ7J,KAAK+X,SAASpZ,GACtB0Z,EAAMlO,GAAW,GAErB,IAAe,IAAXN,EAAgB,MAAM,IAAI1B,MAAM,0BAA4BxJ,GAEhEqB,KAAK6X,UAAUhO,GAAOtJ,GAAKA,EAC3BP,KAAK6X,UAAUhO,GAAOyK,IAAM+D,EAAI/D,KAAO,GACvCtU,KAAK8X,UAAY,MA4BnB3D,EAAM1P,UAAU6T,OAAS,SAAUC,EAAYC,EAAUjY,EAAI4J,GAC3D,IAAIN,EAAQ7J,KAAK+X,SAASQ,GACtBF,EAAMlO,GAAW,GAErB,IAAe,IAAXN,EAAgB,MAAM,IAAI1B,MAAM,0BAA4BoQ,GAEhEvY,KAAK6X,UAAUY,OAAO5O,EAAO,EAAG,CAC9BlL,KAAM6Z,EACNjb,SAAS,EACTgD,GAAIA,EACJ+T,IAAK+D,EAAI/D,KAAO,KAGlBtU,KAAK8X,UAAY,MA4BnB3D,EAAM1P,UAAUiU,MAAQ,SAAUC,EAAWH,EAAUjY,EAAI4J,GACzD,IAAIN,EAAQ7J,KAAK+X,SAASY,GACtBN,EAAMlO,GAAW,GAErB,IAAe,IAAXN,EAAgB,MAAM,IAAI1B,MAAM,0BAA4BwQ,GAEhE3Y,KAAK6X,UAAUY,OAAO5O,EAAQ,EAAG,EAAG,CAClClL,KAAM6Z,EACNjb,SAAS,EACTgD,GAAIA,EACJ+T,IAAK+D,EAAI/D,KAAO,KAGlBtU,KAAK8X,UAAY,MA0BnB3D,EAAM1P,UAAUpF,KAAO,SAAUmZ,EAAUjY,EAAI4J,GAC7C,IAAIkO,EAAMlO,GAAW,GAErBnK,KAAK6X,UAAUxY,KAAK,CAClBV,KAAM6Z,EACNjb,SAAS,EACTgD,GAAIA,EACJ+T,IAAK+D,EAAI/D,KAAO,KAGlBtU,KAAK8X,UAAY,MAgBnB3D,EAAM1P,UAAU2O,OAAS,SAAU/H,EAAMgI,GAClCzS,MAAMC,QAAQwK,KAASA,EAAO,CAAEA,IAErC,IAAID,EAAS,GAeb,OAZAC,EAAKxG,SAAQ,SAAUlG,GACrB,IAAI8M,EAAMzL,KAAK+X,SAASpZ,GAExB,GAAI8M,EAAM,EAAG,CACX,GAAI4H,EAAiB,OACrB,MAAM,IAAIlL,MAAM,oCAAsCxJ,GAExDqB,KAAK6X,UAAUpM,GAAKlO,SAAU,EAC9B6N,EAAO/L,KAAKV,KACXqB,MAEHA,KAAK8X,UAAY,KACV1M,GAcT+I,EAAM1P,UAAUwO,WAAa,SAAU5H,EAAMgI,GACtCzS,MAAMC,QAAQwK,KAASA,EAAO,CAAEA,IAErCrL,KAAK6X,UAAUhT,SAAQ,SAAUqT,GAAQA,EAAK3a,SAAU,KAExDyC,KAAKoT,OAAO/H,EAAMgI,IAgBpBc,EAAM1P,UAAU+O,QAAU,SAAUnI,EAAMgI,GACnCzS,MAAMC,QAAQwK,KAASA,EAAO,CAAEA,IAErC,IAAID,EAAS,GAeb,OAZAC,EAAKxG,SAAQ,SAAUlG,GACrB,IAAI8M,EAAMzL,KAAK+X,SAASpZ,GAExB,GAAI8M,EAAM,EAAG,CACX,GAAI4H,EAAiB,OACrB,MAAM,IAAIlL,MAAM,oCAAsCxJ,GAExDqB,KAAK6X,UAAUpM,GAAKlO,SAAU,EAC9B6N,EAAO/L,KAAKV,KACXqB,MAEHA,KAAK8X,UAAY,KACV1M,GAaT+I,EAAM1P,UAAUiQ,SAAW,SAAUkE,GAMnC,OALuB,OAAnB5Y,KAAK8X,WACP9X,KAAKgY,cAIAhY,KAAK8X,UAAUc,IAAc,IAGtCvX,EAAOC,QAAU6S,gCC3VjB,IAAIlF,EAAU,iBAGd5N,EAAOC,QAAU,SAAoByO,EAAOyE,EAAWC,EAASoE,GAC9D,IAAIC,EACA/K,EACAsG,EACA0E,EACA1D,EACA2D,EACAlJ,EACAmJ,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAvD,EACAwD,EACAC,EAAa9J,EAAMoF,QACnBxP,EAAMoK,EAAM+J,OAAOtF,GAAazE,EAAMgK,OAAOvF,GAC7C7E,EAAMI,EAAMiK,OAAOxF,GAGvB,GAAIzE,EAAM+E,OAAON,GAAazE,EAAMgF,WAAa,EAAK,OAAO,EAG7D,GAAoC,KAAhChF,EAAMhB,IAAIL,WAAW/I,KAA0B,OAAO,EAI1D,GAAIkT,EAAU,OAAO,EAqCrB,IAlCAE,EAAUG,EAASnJ,EAAM+E,OAAON,GAAa,EAGX,KAA9BzE,EAAMhB,IAAIL,WAAW/I,IAGvBA,IACAoT,IACAG,IACAJ,GAAY,EACZW,GAAmB,GACoB,IAA9B1J,EAAMhB,IAAIL,WAAW/I,IAC9B8T,GAAmB,GAEd1J,EAAMkK,QAAQzF,GAAa0E,GAAU,GAAM,GAG9CvT,IACAoT,IACAG,IACAJ,GAAY,GAKZA,GAAY,GAGdW,GAAmB,EAGrBN,EAAY,CAAEpJ,EAAM+J,OAAOtF,IAC3BzE,EAAM+J,OAAOtF,GAAa7O,EAEnBA,EAAMgK,IACX5B,EAAKgC,EAAMhB,IAAIL,WAAW/I,GAEtBsJ,EAAQlB,KACC,IAAPA,EACFmL,GAAU,GAAKA,EAASnJ,EAAMkK,QAAQzF,IAAcsE,EAAY,EAAI,IAAM,EAE1EI,IAMJvT,IAqCF,IAlCAyT,EAAa,CAAErJ,EAAMkK,QAAQzF,IAC7BzE,EAAMkK,QAAQzF,GAAazE,EAAM+E,OAAON,GAAa,GAAKiF,EAAmB,EAAI,GAEjFT,EAAgBrT,GAAOgK,EAEvB4J,EAAY,CAAExJ,EAAM+E,OAAON,IAC3BzE,EAAM+E,OAAON,GAAa0E,EAASH,EAEnCS,EAAY,CAAEzJ,EAAMgK,OAAOvF,IAC3BzE,EAAMgK,OAAOvF,GAAa7O,EAAMoK,EAAM+J,OAAOtF,GAE7CmF,EAAkB5J,EAAMQ,GAAGiC,MAAMQ,MAAM0B,SAAS,cAEhD4E,EAAgBvJ,EAAMmK,WACtBnK,EAAMmK,WAAa,aAoBdjB,EAAWzE,EAAY,EAAGyE,EAAWxE,IASxCmF,EAAc7J,EAAM+E,OAAOmE,GAAYlJ,EAAMgF,aAE7CpP,EAAMoK,EAAM+J,OAAOb,GAAYlJ,EAAMgK,OAAOd,MAC5CtJ,EAAMI,EAAMiK,OAAOf,MAZ8BA,IAmBjD,GAAoC,KAAhClJ,EAAMhB,IAAIL,WAAW/I,MAA2BiU,EAApD,CAoEA,GAAIZ,EAAiB,MAIrB,IADAU,GAAY,EACPrF,EAAI,EAAGgB,EAAIsE,EAAgBpb,OAAQ8V,EAAIgB,EAAGhB,IAC7C,GAAIsF,EAAgBtF,GAAGtE,EAAOkJ,EAAUxE,GAAS,GAAO,CACtDiF,GAAY,EACZ,MAIJ,GAAIA,EAAW,CAKb3J,EAAMoF,QAAU8D,EAEQ,IAApBlJ,EAAMgF,YAIRoE,EAAU9Z,KAAK0Q,EAAM+J,OAAOb,IAC5BG,EAAW/Z,KAAK0Q,EAAMkK,QAAQhB,IAC9BO,EAAUna,KAAK0Q,EAAMgK,OAAOd,IAC5BM,EAAUla,KAAK0Q,EAAM+E,OAAOmE,IAC5BlJ,EAAM+E,OAAOmE,IAAalJ,EAAMgF,WAGlC,MAGFoE,EAAU9Z,KAAK0Q,EAAM+J,OAAOb,IAC5BG,EAAW/Z,KAAK0Q,EAAMkK,QAAQhB,IAC9BO,EAAUna,KAAK0Q,EAAMgK,OAAOd,IAC5BM,EAAUla,KAAK0Q,EAAM+E,OAAOmE,IAI5BlJ,EAAM+E,OAAOmE,IAAa,MA3G1B,CAsCE,IAlCAF,EAAUG,EAASnJ,EAAM+E,OAAOmE,GAAY,EAGV,KAA9BlJ,EAAMhB,IAAIL,WAAW/I,IAGvBA,IACAoT,IACAG,IACAJ,GAAY,EACZW,GAAmB,GACoB,IAA9B1J,EAAMhB,IAAIL,WAAW/I,IAC9B8T,GAAmB,GAEd1J,EAAMkK,QAAQhB,GAAYC,GAAU,GAAM,GAG7CvT,IACAoT,IACAG,IACAJ,GAAY,GAKZA,GAAY,GAGdW,GAAmB,EAGrBN,EAAU9Z,KAAK0Q,EAAM+J,OAAOb,IAC5BlJ,EAAM+J,OAAOb,GAAYtT,EAElBA,EAAMgK,IACX5B,EAAKgC,EAAMhB,IAAIL,WAAW/I,GAEtBsJ,EAAQlB,KACC,IAAPA,EACFmL,GAAU,GAAKA,EAASnJ,EAAMkK,QAAQhB,IAAaH,EAAY,EAAI,IAAM,EAEzEI,IAMJvT,IAGFqT,EAAgBrT,GAAOgK,EAEvByJ,EAAW/Z,KAAK0Q,EAAMkK,QAAQhB,IAC9BlJ,EAAMkK,QAAQhB,GAAYlJ,EAAM+E,OAAOmE,GAAY,GAAKQ,EAAmB,EAAI,GAE/EF,EAAUla,KAAK0Q,EAAM+E,OAAOmE,IAC5BlJ,EAAM+E,OAAOmE,GAAYC,EAASH,EAElCS,EAAUna,KAAK0Q,EAAMgK,OAAOd,IAC5BlJ,EAAMgK,OAAOd,GAAYtT,EAAMoK,EAAM+J,OAAOb,GAiEhD,IAlBAI,EAAYtJ,EAAMgF,UAClBhF,EAAMgF,UAAY,GAElBqB,EAAerG,EAAM1Q,KAAK,kBAAmB,aAAc,IACrD8a,OAAS,IACf/D,EAAMvN,IAASiH,EAAQ,CAAE0E,EAAW,GAEpCzE,EAAMQ,GAAGiC,MAAM+B,SAASxE,EAAOyE,EAAWyE,IAE1C7C,EAAerG,EAAM1Q,KAAK,mBAAoB,cAAe,IACvD8a,OAAS,IAEfpK,EAAMoF,QAAU0E,EAChB9J,EAAMmK,WAAaZ,EACnBxJ,EAAM,GAAKC,EAAM1N,KAIZgS,EAAI,EAAGA,EAAImF,EAAUjb,OAAQ8V,IAChCtE,EAAM+J,OAAOzF,EAAIG,GAAa2E,EAAU9E,GACxCtE,EAAMgK,OAAO1F,EAAIG,GAAagF,EAAUnF,GACxCtE,EAAM+E,OAAOT,EAAIG,GAAa+E,EAAUlF,GACxCtE,EAAMkK,QAAQ5F,EAAIG,GAAa4E,EAAW/E,GAI5C,OAFAtE,EAAMgF,UAAYsE,GAEX,2BCrRThY,EAAOC,QAAU,SAAcyO,EAAOyE,EAAWC,GAC/C,IAAIwE,EAAUmB,EAAMhE,EAEpB,GAAIrG,EAAM+E,OAAON,GAAazE,EAAMgF,UAAY,EAAK,OAAO,EAI5D,IAFAqF,EAAOnB,EAAWzE,EAAY,EAEvByE,EAAWxE,GAChB,GAAI1E,EAAMkF,QAAQgE,GAChBA,QADF,CAKA,KAAIlJ,EAAM+E,OAAOmE,GAAYlJ,EAAMgF,WAAa,GAKhD,MAHEqF,IADAnB,EAaJ,OANAlJ,EAAM1N,KAAO+X,GAEbhE,EAAgBrG,EAAM1Q,KAAK,aAAc,OAAQ,IAC3CiX,QAAUvG,EAAMsK,SAAS7F,EAAW4F,EAAM,EAAIrK,EAAMgF,WAAW,GAAS,KAC9EqB,EAAMvN,IAAU,CAAE2L,EAAWzE,EAAM1N,OAE5B,2BC3BThB,EAAOC,QAAU,SAAeyO,EAAOyE,EAAWC,EAASoE,GACzD,IAAI3I,EAAQrF,EAAKyP,EAAQrB,EAAUsB,EAAKnE,EAAO+D,EAC3CK,GAAgB,EAChB7U,EAAMoK,EAAM+J,OAAOtF,GAAazE,EAAMgK,OAAOvF,GAC7C7E,EAAMI,EAAMiK,OAAOxF,GAGvB,GAAIzE,EAAM+E,OAAON,GAAazE,EAAMgF,WAAa,EAAK,OAAO,EAE7D,GAAIpP,EAAM,EAAIgK,EAAO,OAAO,EAI5B,GAAe,OAFfO,EAASH,EAAMhB,IAAIL,WAAW/I,KAEW,KAAXuK,EAC5B,OAAO,EAST,GALAqK,EAAM5U,GAGNkF,GAFAlF,EAAMoK,EAAM0K,UAAU9U,EAAKuK,IAEfqK,GAEF,EAAK,OAAO,EAKtB,GAHAJ,EAASpK,EAAMhB,IAAIrK,MAAM6V,EAAK5U,GAC9B2U,EAASvK,EAAMhB,IAAIrK,MAAMiB,EAAKgK,GAEf,KAAXO,GACEoK,EAAOnP,QAAQkC,OAAOC,aAAa4C,KAAY,EACjD,OAAO,EAKX,GAAI2I,EAAU,OAAO,EAKrB,IAFAI,EAAWzE,MAGTyE,GACgBxE,IAMhB9O,EAAM4U,EAAMxK,EAAM+J,OAAOb,GAAYlJ,EAAMgK,OAAOd,KAClDtJ,EAAMI,EAAMiK,OAAOf,KAEFlJ,EAAM+E,OAAOmE,GAAYlJ,EAAMgF,YAOhD,GAAIhF,EAAMhB,IAAIL,WAAW/I,KAASuK,KAE9BH,EAAM+E,OAAOmE,GAAYlJ,EAAMgF,WAAa,IAKhDpP,EAAMoK,EAAM0K,UAAU9U,EAAKuK,IAGjBqK,EAAM1P,IAGhBlF,EAAMoK,EAAM2K,WAAW/U,IAEbgK,GAAV,CAEA6K,GAAgB,EAEhB,MAcF,OAVA3P,EAAMkF,EAAM+E,OAAON,GAEnBzE,EAAM1N,KAAO4W,GAAYuB,EAAgB,EAAI,IAE7CpE,EAAgBrG,EAAM1Q,KAAK,QAAS,OAAQ,IACtCwE,KAAUyW,EAChBlE,EAAME,QAAUvG,EAAMsK,SAAS7F,EAAY,EAAGyE,EAAUpO,GAAK,GAC7DuL,EAAM+D,OAAUA,EAChB/D,EAAMvN,IAAU,CAAE2L,EAAWzE,EAAM1N,OAE5B,iCC5FT,IAAI4M,EAAU,iBAGd5N,EAAOC,QAAU,SAAiByO,EAAOyE,EAAWC,EAASoE,GAC3D,IAAI9K,EAAI6B,EAAO+K,EAAKvE,EAChBzQ,EAAMoK,EAAM+J,OAAOtF,GAAazE,EAAMgK,OAAOvF,GAC7C7E,EAAMI,EAAMiK,OAAOxF,GAGvB,GAAIzE,EAAM+E,OAAON,GAAazE,EAAMgF,WAAa,EAAK,OAAO,EAI7D,GAAW,MAFXhH,EAAMgC,EAAMhB,IAAIL,WAAW/I,KAEDA,GAAOgK,EAAO,OAAO,EAK/C,IAFAC,EAAQ,EACR7B,EAAKgC,EAAMhB,IAAIL,aAAa/I,GACd,KAAPoI,GAAsBpI,EAAMgK,GAAOC,GAAS,GACjDA,IACA7B,EAAKgC,EAAMhB,IAAIL,aAAa/I,GAG9B,QAAIiK,EAAQ,GAAMjK,EAAMgK,IAAQV,EAAQlB,KAEpC8K,IAIJlJ,EAAMI,EAAM6K,eAAejL,EAAKhK,IAChCgV,EAAM5K,EAAM8K,cAAclL,EAAK,GAAMhK,IAC3BA,GAAOsJ,EAAQc,EAAMhB,IAAIL,WAAWiM,EAAM,MAClDhL,EAAMgL,GAGR5K,EAAM1N,KAAOmS,EAAY,GAEzB4B,EAAerG,EAAM1Q,KAAK,eAAgB,IAAMgO,OAAOuC,GAAQ,IACzDuK,OAAS,WAAWzV,MAAM,EAAGkL,GACnCwG,EAAMvN,IAAS,CAAE2L,EAAWzE,EAAM1N,OAElC+T,EAAiBrG,EAAM1Q,KAAK,SAAU,GAAI,IACpCiX,QAAWvG,EAAMhB,IAAIrK,MAAMiB,EAAKgK,GAAKL,OAC3C8G,EAAMvN,IAAW,CAAE2L,EAAWzE,EAAM1N,MACpC+T,EAAMc,SAAW,IAEjBd,EAAerG,EAAM1Q,KAAK,gBAAiB,IAAMgO,OAAOuC,IAAS,IAC3DuK,OAAS,WAAWzV,MAAM,EAAGkL,IAtBd,mCCzBvB,IAAIX,EAAU,iBAGd5N,EAAOC,QAAU,SAAYyO,EAAOyE,EAAWC,EAASoE,GACtD,IAAI3I,EAAQ4K,EAAK/M,EAAIqI,EACjBzQ,EAAMoK,EAAM+J,OAAOtF,GAAazE,EAAMgK,OAAOvF,GAC7C7E,EAAMI,EAAMiK,OAAOxF,GAGvB,GAAIzE,EAAM+E,OAAON,GAAazE,EAAMgF,WAAa,EAAK,OAAO,EAK7D,GAAe,MAHf7E,EAASH,EAAMhB,IAAIL,WAAW/I,OAIf,KAAXuK,GACW,KAAXA,EACF,OAAO,EAMT,IADA4K,EAAM,EACCnV,EAAMgK,GAAK,CAEhB,IADA5B,EAAKgC,EAAMhB,IAAIL,WAAW/I,QACfuK,IAAWjB,EAAQlB,GAAO,OAAO,EACxCA,IAAOmC,GAAU4K,IAGvB,QAAIA,EAAM,IAENjC,IAEJ9I,EAAM1N,KAAOmS,EAAY,GAEzB4B,EAAerG,EAAM1Q,KAAK,KAAM,KAAM,IAChCwJ,IAAS,CAAE2L,EAAWzE,EAAM1N,MAClC+T,EAAM+D,OAASvZ,MAAMka,EAAM,GAAGtT,KAAK6F,OAAOC,aAAa4C,KANlC,mCC9BvB,IAAI6K,EAAc,EAAQ,OACtBnO,EAAyB,WAKzBoO,EAAiB,CACnB,CAAE,6CAA8C,oCAAoC,GACpF,CAAE,QAAgB,OAAS,GAC3B,CAAE,OAAgB,OAAS,GAC3B,CAAE,WAAgB,KAAS,GAC3B,CAAE,eAAgB,SAAS,GAC3B,CAAE,IAAI/b,OAAO,QAAU8b,EAAYvT,KAAK,KAAO,mBAAoB,KAAM,MAAM,GAC/E,CAAE,IAAIvI,OAAO2N,EAAuB9H,OAAS,SAAW,MAAM,IAIhEzD,EAAOC,QAAU,SAAoByO,EAAOyE,EAAWC,EAASoE,GAC9D,IAAIxE,EAAG4E,EAAU7C,EAAO6E,EACpBtV,EAAMoK,EAAM+J,OAAOtF,GAAazE,EAAMgK,OAAOvF,GAC7C7E,EAAMI,EAAMiK,OAAOxF,GAGvB,GAAIzE,EAAM+E,OAAON,GAAazE,EAAMgF,WAAa,EAAK,OAAO,EAE7D,IAAKhF,EAAMQ,GAAGpG,QAAQuL,KAAQ,OAAO,EAErC,GAAkC,KAA9B3F,EAAMhB,IAAIL,WAAW/I,GAAwB,OAAO,EAIxD,IAFAsV,EAAWlL,EAAMhB,IAAIrK,MAAMiB,EAAKgK,GAE3B0E,EAAI,EAAGA,EAAI2G,EAAezc,SACzByc,EAAe3G,GAAG,GAAG/T,KAAK2a,GADO5G,KAIvC,GAAIA,IAAM2G,EAAezc,OAAU,OAAO,EAE1C,GAAIsa,EAEF,OAAOmC,EAAe3G,GAAG,GAO3B,GAJA4E,EAAWzE,EAAY,GAIlBwG,EAAe3G,GAAG,GAAG/T,KAAK2a,GAC7B,KAAOhC,EAAWxE,KACZ1E,EAAM+E,OAAOmE,GAAYlJ,EAAMgF,WADVkE,IAOzB,GAJAtT,EAAMoK,EAAM+J,OAAOb,GAAYlJ,EAAMgK,OAAOd,GAC5CtJ,EAAMI,EAAMiK,OAAOf,GACnBgC,EAAWlL,EAAMhB,IAAIrK,MAAMiB,EAAKgK,GAE5BqL,EAAe3G,GAAG,GAAG/T,KAAK2a,GAAW,CACf,IAApBA,EAAS1c,QAAgB0a,IAC7B,MAWN,OANAlJ,EAAM1N,KAAO4W,GAEb7C,EAAgBrG,EAAM1Q,KAAK,aAAc,GAAI,IACvCwJ,IAAU,CAAE2L,EAAWyE,GAC7B7C,EAAME,QAAUvG,EAAMsK,SAAS7F,EAAWyE,EAAUlJ,EAAMgF,WAAW,IAE9D,2BCnET1T,EAAOC,QAAU,SAAkByO,EAAOyE,EAAWC,GACnD,IAAI6B,EAASoD,EAAWrF,EAAGgB,EAAGe,EAAOzQ,EAAKgK,EAAKC,EAAOM,EACxBoJ,EAA1BL,EAAWzE,EAAY,EACvBmF,EAAkB5J,EAAMQ,GAAGiC,MAAMQ,MAAM0B,SAAS,aAGpD,GAAI3E,EAAM+E,OAAON,GAAazE,EAAMgF,WAAa,EAAK,OAAO,EAM7D,IAJAuE,EAAgBvJ,EAAMmK,WACtBnK,EAAMmK,WAAa,YAGZjB,EAAWxE,IAAY1E,EAAMkF,QAAQgE,GAAWA,IAGrD,KAAIlJ,EAAM+E,OAAOmE,GAAYlJ,EAAMgF,UAAY,GAA/C,CAKA,GAAIhF,EAAM+E,OAAOmE,IAAalJ,EAAMgF,YAClCpP,EAAMoK,EAAM+J,OAAOb,GAAYlJ,EAAMgK,OAAOd,KAC5CtJ,EAAMI,EAAMiK,OAAOf,MAKF,MAFf/I,EAASH,EAAMhB,IAAIL,WAAW/I,KAEW,KAAXuK,KAC5BvK,EAAMoK,EAAM0K,UAAU9U,EAAKuK,IAC3BvK,EAAMoK,EAAM2K,WAAW/U,KAEZgK,GAAK,CACdC,EAAoB,KAAXM,EAAyB,EAAI,EACtC,MAOR,KAAIH,EAAM+E,OAAOmE,GAAY,GAA7B,CAIA,IADAS,GAAY,EACPrF,EAAI,EAAGgB,EAAIsE,EAAgBpb,OAAQ8V,EAAIgB,EAAGhB,IAC7C,GAAIsF,EAAgBtF,GAAGtE,EAAOkJ,EAAUxE,GAAS,GAAO,CACtDiF,GAAY,EACZ,MAGJ,GAAIA,EAAa,OAGnB,QAAK9J,IAKL0G,EAAUvG,EAAMsK,SAAS7F,EAAWyE,EAAUlJ,EAAMgF,WAAW,GAAOzF,OAEtES,EAAM1N,KAAO4W,EAAW,GAExB7C,EAAiBrG,EAAM1Q,KAAK,eAAgB,IAAMgO,OAAOuC,GAAQ,IAC3DuK,OAAW9M,OAAOC,aAAa4C,GACrCkG,EAAMvN,IAAW,CAAE2L,EAAWzE,EAAM1N,OAEpC+T,EAAiBrG,EAAM1Q,KAAK,SAAU,GAAI,IACpCiX,QAAWA,EACjBF,EAAMvN,IAAW,CAAE2L,EAAWzE,EAAM1N,KAAO,GAC3C+T,EAAMc,SAAW,IAEjBd,EAAiBrG,EAAM1Q,KAAK,gBAAiB,IAAMgO,OAAOuC,IAAS,IAC7DuK,OAAW9M,OAAOC,aAAa4C,GAErCH,EAAMmK,WAAaZ,GAEZ,kCC7ET,IAAIrK,EAAU,iBAKd,SAASiM,EAAqBnL,EAAOyE,GACnC,IAAItE,EAAQvK,EAAKgK,EAAK5B,EAOtB,OALApI,EAAMoK,EAAM+J,OAAOtF,GAAazE,EAAMgK,OAAOvF,GAC7C7E,EAAMI,EAAMiK,OAAOxF,GAIJ,MAFftE,EAASH,EAAMhB,IAAIL,WAAW/I,OAGf,KAAXuK,GACW,KAAXA,GAIAvK,EAAMgK,IACR5B,EAAKgC,EAAMhB,IAAIL,WAAW/I,IAErBsJ,EAAQlB,KANL,EAYHpI,EAKT,SAASwV,EAAsBpL,EAAOyE,GACpC,IAAIzG,EACAxE,EAAQwG,EAAM+J,OAAOtF,GAAazE,EAAMgK,OAAOvF,GAC/C7O,EAAM4D,EACNoG,EAAMI,EAAMiK,OAAOxF,GAGvB,GAAI7O,EAAM,GAAKgK,EAAO,OAAQ,EAI9B,IAFA5B,EAAKgC,EAAMhB,IAAIL,WAAW/I,MAEjB,IAAeoI,EAAK,GAAe,OAAQ,EAEpD,OAAS,CAEP,GAAIpI,GAAOgK,EAAO,OAAQ,EAI1B,MAFA5B,EAAKgC,EAAMhB,IAAIL,WAAW/I,OAEhB,IAAeoI,GAAM,IAA/B,CAUA,GAAW,KAAPA,GAA6B,KAAPA,EACxB,MAGF,OAAQ,EAVN,GAAIpI,EAAM4D,GAAS,GAAM,OAAQ,EAcrC,OAAI5D,EAAMgK,IACR5B,EAAKgC,EAAMhB,IAAIL,WAAW/I,IAErBsJ,EAAQlB,KAEH,EAGLpI,EAiBTtE,EAAOC,QAAU,SAAcyO,EAAOyE,EAAWC,EAASoE,GACxD,IAAI9K,EACAqN,EACA/G,EACAgH,EACAC,EACAvC,EACAwC,EACAC,EACAnG,EACAoG,EACAC,EACAC,EACAC,EACAjM,EACAsJ,EACAC,EACA2C,EACAvC,EACAC,EACAC,EACAsC,EACAnW,EACAoW,EACAC,EACAzS,EACAmQ,EACAC,EACAvD,EACA6F,GAAyB,EACzBjH,GAAQ,EAGZ,GAAIjF,EAAM+E,OAAON,GAAazE,EAAMgF,WAAa,EAAK,OAAO,EAQ7D,GAAIhF,EAAMmM,YAAc,GACpBnM,EAAM+E,OAAON,GAAazE,EAAMmM,YAAc,GAC9CnM,EAAM+E,OAAON,GAAazE,EAAMgF,UAClC,OAAO,EAiBT,GAZI8D,GAA+B,cAArB9I,EAAMmK,YAMdnK,EAAM+E,OAAON,IAAczE,EAAMgF,YACnCkH,GAAyB,IAKxBF,EAAiBZ,EAAsBpL,EAAOyE,KAAe,GAOhE,GANA+G,GAAY,EACZhS,EAAQwG,EAAM+J,OAAOtF,GAAazE,EAAMgK,OAAOvF,GAC/CoH,EAAcO,OAAOpM,EAAMhB,IAAIrK,MAAM6E,EAAOwS,EAAiB,IAIzDE,GAA0C,IAAhBL,EAAmB,OAAO,MAEnD,OAAKG,EAAiBb,EAAqBnL,EAAOyE,KAAe,GAItE,OAAO,EAHP+G,GAAY,EAQd,GAAIU,GACElM,EAAM2K,WAAWqB,IAAmBhM,EAAMiK,OAAOxF,GAAY,OAAO,EAO1E,GAHAmH,EAAiB5L,EAAMhB,IAAIL,WAAWqN,EAAiB,GAGnDlD,EAAU,OAAO,EA6BrB,IA1BA6C,EAAa3L,EAAM+D,OAAOvV,OAEtBgd,GACFnF,EAAcrG,EAAM1Q,KAAK,oBAAqB,KAAM,GAChC,IAAhBuc,IACFxF,EAAMW,MAAQ,CAAE,CAAE,QAAS6E,MAI7BxF,EAAcrG,EAAM1Q,KAAK,mBAAoB,KAAM,GAGrD+W,EAAMvN,IAAS4S,EAAY,CAAEjH,EAAW,GACxC4B,EAAM+D,OAAS9M,OAAOC,aAAaqO,GAMnC1C,EAAWzE,EACXwH,GAAe,EACfrC,EAAkB5J,EAAMQ,GAAGiC,MAAMQ,MAAM0B,SAAS,QAEhD4E,EAAgBvJ,EAAMmK,WACtBnK,EAAMmK,WAAa,OAEZjB,EAAWxE,GAAS,CAMzB,IALA9O,EAAMoW,EACNpM,EAAMI,EAAMiK,OAAOf,GAEnBF,EAAUG,EAASnJ,EAAM+E,OAAOmE,GAAY8C,GAAkBhM,EAAM+J,OAAOtF,GAAazE,EAAMgK,OAAOvF,IAE9F7O,EAAMgK,GAAK,CAGhB,GAAW,KAFX5B,EAAKgC,EAAMhB,IAAIL,WAAW/I,IAGxBuT,GAAU,GAAKA,EAASnJ,EAAMkK,QAAQhB,IAAa,MAC9C,IAAW,KAAPlL,EAGT,MAFAmL,IAKFvT,IA+EF,IAxEE2V,GAJFF,EAAezV,IAEKgK,EAEE,EAEAuJ,EAASH,GAKP,IAAKuC,EAAoB,GAIjDD,EAAStC,EAAUuC,GAGnBlF,EAAerG,EAAM1Q,KAAK,iBAAkB,KAAM,IAC5C8a,OAAS9M,OAAOC,aAAaqO,GACnCvF,EAAMvN,IAAS2S,EAAY,CAAEhH,EAAW,GACpC+G,IACFnF,EAAMvS,KAAOkM,EAAMhB,IAAIrK,MAAM6E,EAAOwS,EAAiB,IAIvDD,EAAW/L,EAAMiF,MACjBwE,EAAYzJ,EAAMgK,OAAOvF,GACzB+E,EAAYxJ,EAAM+E,OAAON,GAMzBqH,EAAgB9L,EAAMmM,WACtBnM,EAAMmM,WAAanM,EAAMgF,UACzBhF,EAAMgF,UAAYsG,EAElBtL,EAAMiF,OAAQ,EACdjF,EAAMgK,OAAOvF,GAAa4G,EAAerL,EAAM+J,OAAOtF,GACtDzE,EAAM+E,OAAON,GAAa0E,EAEtBkC,GAAgBzL,GAAOI,EAAMkF,QAAQT,EAAY,GAQnDzE,EAAM1N,KAAO+Z,KAAKC,IAAItM,EAAM1N,KAAO,EAAGoS,GAEtC1E,EAAMQ,GAAGiC,MAAM+B,SAASxE,EAAOyE,EAAWC,GAAS,GAIhD1E,EAAMiF,QAASgH,IAClBhH,GAAQ,GAIVgH,EAAgBjM,EAAM1N,KAAOmS,EAAa,GAAKzE,EAAMkF,QAAQlF,EAAM1N,KAAO,GAE1E0N,EAAMgF,UAAYhF,EAAMmM,WACxBnM,EAAMmM,WAAaL,EACnB9L,EAAMgK,OAAOvF,GAAagF,EAC1BzJ,EAAM+E,OAAON,GAAa+E,EAC1BxJ,EAAMiF,MAAQ8G,GAEd1F,EAAerG,EAAM1Q,KAAK,kBAAmB,MAAO,IAC9C8a,OAAS9M,OAAOC,aAAaqO,GAEnC1C,EAAWzE,EAAYzE,EAAM1N,KAC7BmZ,EAAU,GAAKvC,EACfmC,EAAerL,EAAM+J,OAAOtF,GAExByE,GAAYxE,EAAW,MAK3B,GAAI1E,EAAM+E,OAAOmE,GAAYlJ,EAAMgF,UAAa,MAGhD,GAAIhF,EAAM+E,OAAON,GAAazE,EAAMgF,WAAa,EAAK,MAItD,IADA2E,GAAY,EACPrF,EAAI,EAAGgB,EAAIsE,EAAgBpb,OAAQ8V,EAAIgB,EAAGhB,IAC7C,GAAIsF,EAAgBtF,GAAGtE,EAAOkJ,EAAUxE,GAAS,GAAO,CACtDiF,GAAY,EACZ,MAGJ,GAAIA,EAAa,MAGjB,GAAI6B,EAAW,CAEb,IADAQ,EAAiBZ,EAAsBpL,EAAOkJ,IACzB,EAAK,MAC1B1P,EAAQwG,EAAM+J,OAAOb,GAAYlJ,EAAMgK,OAAOd,QAG9C,IADA8C,EAAiBb,EAAqBnL,EAAOkJ,IACxB,EAAK,MAG5B,GAAI0C,IAAmB5L,EAAMhB,IAAIL,WAAWqN,EAAiB,GAAM,MAqBrE,OAhBE3F,EADEmF,EACMxL,EAAM1Q,KAAK,qBAAsB,MAAO,GAExC0Q,EAAM1Q,KAAK,oBAAqB,MAAO,IAE3C8a,OAAS9M,OAAOC,aAAaqO,GAEnCF,EAAU,GAAKxC,EACflJ,EAAM1N,KAAO4W,EAEblJ,EAAMmK,WAAaZ,EAGftE,GAjRN,SAA6BjF,EAAOtE,GAClC,IAAI4I,EAAGgB,EACHzF,EAAQG,EAAMH,MAAQ,EAE1B,IAAKyE,EAAI5I,EAAM,EAAG4J,EAAItF,EAAM+D,OAAOvV,OAAS,EAAG8V,EAAIgB,EAAGhB,IAChDtE,EAAM+D,OAAOO,GAAGzE,QAAUA,GAAkC,mBAAzBG,EAAM+D,OAAOO,GAAGxV,OACrDkR,EAAM+D,OAAOO,EAAI,GAAGqD,QAAS,EAC7B3H,EAAM+D,OAAOO,GAAGqD,QAAS,EACzBrD,GAAK,GA0QPiI,CAAoBvM,EAAO2L,IAGtB,2BCrWTra,EAAOC,QAAU,SAAmByO,EAAOyE,GACzC,IAAI8B,EAASoD,EAAWrF,EAAGgB,EAAGe,EAAOkD,EACjCL,EAAWzE,EAAY,EACvBmF,EAAkB5J,EAAMQ,GAAGiC,MAAMQ,MAAM0B,SAAS,aAChDD,EAAU1E,EAAMoF,QAMpB,IAJAmE,EAAgBvJ,EAAMmK,WACtBnK,EAAMmK,WAAa,YAGZjB,EAAWxE,IAAY1E,EAAMkF,QAAQgE,GAAWA,IAGrD,KAAIlJ,EAAM+E,OAAOmE,GAAYlJ,EAAMgF,UAAY,GAG3ChF,EAAM+E,OAAOmE,GAAY,GAA7B,CAIA,IADAS,GAAY,EACPrF,EAAI,EAAGgB,EAAIsE,EAAgBpb,OAAQ8V,EAAIgB,EAAGhB,IAC7C,GAAIsF,EAAgBtF,GAAGtE,EAAOkJ,EAAUxE,GAAS,GAAO,CACtDiF,GAAY,EACZ,MAGJ,GAAIA,EAAa,MAmBnB,OAhBApD,EAAUvG,EAAMsK,SAAS7F,EAAWyE,EAAUlJ,EAAMgF,WAAW,GAAOzF,OAEtES,EAAM1N,KAAO4W,GAEb7C,EAAiBrG,EAAM1Q,KAAK,iBAAkB,IAAK,IAC7CwJ,IAAW,CAAE2L,EAAWzE,EAAM1N,OAEpC+T,EAAiBrG,EAAM1Q,KAAK,SAAU,GAAI,IACpCiX,QAAWA,EACjBF,EAAMvN,IAAW,CAAE2L,EAAWzE,EAAM1N,MACpC+T,EAAMc,SAAW,GAEjBd,EAAiBrG,EAAM1Q,KAAK,kBAAmB,KAAM,GAErD0Q,EAAMmK,WAAaZ,GAEZ,iCC/CT,IAAIjK,EAAuB,4BACvBJ,EAAuB,iBAG3B5N,EAAOC,QAAU,SAAmByO,EAAOyE,EAAW+H,EAAU1D,GAC9D,IAAI9K,EACAyO,EACAC,EACAhI,EACAiI,EACArI,EACAgB,EACAsH,EACAvM,EACAkJ,EACAsD,EACArT,EACApL,EACAub,EACAC,EACAkD,EACA/M,EAAQ,EACRnK,EAAMoK,EAAM+J,OAAOtF,GAAazE,EAAMgK,OAAOvF,GAC7C7E,EAAMI,EAAMiK,OAAOxF,GACnByE,EAAWzE,EAAY,EAG3B,GAAIzE,EAAM+E,OAAON,GAAazE,EAAMgF,WAAa,EAAK,OAAO,EAE7D,GAAkC,KAA9BhF,EAAMhB,IAAIL,WAAW/I,GAAwB,OAAO,EAIxD,OAASA,EAAMgK,GACb,GAAkC,KAA9BI,EAAMhB,IAAIL,WAAW/I,IACa,KAAlCoK,EAAMhB,IAAIL,WAAW/I,EAAM,GAAoB,CACjD,GAAIA,EAAM,IAAMgK,EAAO,OAAO,EAC9B,GAAsC,KAAlCI,EAAMhB,IAAIL,WAAW/I,EAAM,GAAsB,OAAO,EAC5D,MAYJ,IARA8O,EAAU1E,EAAMoF,QAGhBwE,EAAkB5J,EAAMQ,GAAGiC,MAAMQ,MAAM0B,SAAS,aAEhD4E,EAAgBvJ,EAAMmK,WACtBnK,EAAMmK,WAAa,YAEZjB,EAAWxE,IAAY1E,EAAMkF,QAAQgE,GAAWA,IAGrD,KAAIlJ,EAAM+E,OAAOmE,GAAYlJ,EAAMgF,UAAY,GAG3ChF,EAAM+E,OAAOmE,GAAY,GAA7B,CAIA,IADAS,GAAY,EACPrF,EAAI,EAAGgB,EAAIsE,EAAgBpb,OAAQ8V,EAAIgB,EAAGhB,IAC7C,GAAIsF,EAAgBtF,GAAGtE,EAAOkJ,EAAUxE,GAAS,GAAO,CACtDiF,GAAY,EACZ,MAGJ,GAAIA,EAAa,MAMnB,IAFA/J,GADAxR,EAAM4R,EAAMsK,SAAS7F,EAAWyE,EAAUlJ,EAAMgF,WAAW,GAAOzF,QACxD/Q,OAELoH,EAAM,EAAGA,EAAMgK,EAAKhK,IAAO,CAE9B,GAAW,MADXoI,EAAK5P,EAAIuQ,WAAW/I,IAElB,OAAO,EACF,GAAW,KAAPoI,EAAqB,CAC9BqC,EAAWzK,EACX,OACgB,KAAPoI,GAEO,KAAPA,KACTpI,EACUgK,GAA+B,KAAxBxR,EAAIuQ,WAAW/I,KAHhCmK,IASJ,GAAIM,EAAW,GAAsC,KAAjCjS,EAAIuQ,WAAW0B,EAAW,GAAsB,OAAO,EAI3E,IAAKzK,EAAMyK,EAAW,EAAGzK,EAAMgK,EAAKhK,IAElC,GAAW,MADXoI,EAAK5P,EAAIuQ,WAAW/I,IAElBmK,SACK,IAAIb,EAAQlB,GAGjB,MAOJ,KADA6O,EAAM7M,EAAMQ,GAAGI,QAAQlB,qBAAqBtR,EAAKwH,EAAKgK,IAC7CE,GAAM,OAAO,EAGtB,GADA6M,EAAO3M,EAAMQ,GAAGkB,cAAcmL,EAAIze,MAC7B4R,EAAMQ,GAAGgB,aAAamL,GAAS,OAAO,EAY3C,IANAF,EAJA7W,EAAMiX,EAAIjX,IAKV8W,EAJA3M,GAAS8M,EAAI9M,MAQbvG,EAAQ5D,EACDA,EAAMgK,EAAKhK,IAEhB,GAAW,MADXoI,EAAK5P,EAAIuQ,WAAW/I,IAElBmK,SACK,IAAIb,EAAQlB,GAGjB,MAkBJ,IAZA6O,EAAM7M,EAAMQ,GAAGI,QAAQjB,eAAevR,EAAKwH,EAAKgK,GAC5ChK,EAAMgK,GAAOpG,IAAU5D,GAAOiX,EAAI/M,IACpCgN,EAAQD,EAAIze,IACZwH,EAAMiX,EAAIjX,IACVmK,GAAS8M,EAAI9M,QAEb+M,EAAQ,GACRlX,EAAM6W,EACN1M,EAAQ2M,GAIH9W,EAAMgK,IACX5B,EAAK5P,EAAIuQ,WAAW/I,GACfsJ,EAAQlB,KACbpI,IAGF,GAAIA,EAAMgK,GAA+B,KAAxBxR,EAAIuQ,WAAW/I,IAC1BkX,EAMF,IAHAA,EAAQ,GACRlX,EAAM6W,EACN1M,EAAQ2M,EACD9W,EAAMgK,IACX5B,EAAK5P,EAAIuQ,WAAW/I,GACfsJ,EAAQlB,KACbpI,IAKN,QAAIA,EAAMgK,GAA+B,KAAxBxR,EAAIuQ,WAAW/I,MAKhCgX,EAAQtN,EAAmBlR,EAAIuG,MAAM,EAAG0L,OAQpCyI,SAEgC,IAAzB9I,EAAMtS,IAAIqf,aACnB/M,EAAMtS,IAAIqf,WAAa,SAEkB,IAAhC/M,EAAMtS,IAAIqf,WAAWH,KAC9B5M,EAAMtS,IAAIqf,WAAWH,GAAS,CAAEE,MAAOA,EAAOH,KAAMA,IAGtD3M,EAAMmK,WAAaZ,EAEnBvJ,EAAM1N,KAAOmS,EAAY1E,EAAQ,GAXZ,mCCpLvB,IAAIiN,EAAQ,EAAQ,OAChB9N,EAAU,iBAGd,SAAS+N,EAAWjO,EAAKwB,EAAI9S,EAAKqW,GAChC,IAAI/F,EAAIkP,EAAG1T,EAAO5D,EAAKkF,EAAKwQ,EAAQnC,EAAQgE,EAuD5C,IArDAld,KAAK+O,IAAMA,EAGX/O,KAAKuQ,GAASA,EAEdvQ,KAAKvC,IAAMA,EAMXuC,KAAK8T,OAASA,EAEd9T,KAAK8Z,OAAS,GACd9Z,KAAKga,OAAS,GACdha,KAAK+Z,OAAS,GACd/Z,KAAK8U,OAAS,GAYd9U,KAAKia,QAAU,GAGfja,KAAK+U,UAAa,EAElB/U,KAAKqC,KAAa,EAClBrC,KAAKmV,QAAa,EAClBnV,KAAKgV,OAAa,EAClBhV,KAAKmd,UAAc,EACnBnd,KAAKkc,YAAc,EAInBlc,KAAKka,WAAa,OAElBla,KAAK4P,MAAQ,EAGb5P,KAAKoL,OAAS,GAKd8R,GAAe,EAEV3T,EAAQ5D,EAAM0V,EAASnC,EAAS,EAAGrO,GAHxCoS,EAAIjd,KAAK+O,KAGuCxQ,OAAQoH,EAAMkF,EAAKlF,IAAO,CAGxE,GAFAoI,EAAKkP,EAAEvO,WAAW/I,IAEbuX,EAAc,CACjB,GAAIjO,EAAQlB,GAAK,CACfsN,IAEW,IAAPtN,EACFmL,GAAU,EAAIA,EAAS,EAEvBA,IAEF,SAEAgE,GAAe,EAIR,KAAPnP,GAAepI,IAAQkF,EAAM,IACpB,KAAPkD,GAAepI,IACnB3F,KAAK8Z,OAAOza,KAAKkK,GACjBvJ,KAAKga,OAAO3a,KAAKsG,GACjB3F,KAAK+Z,OAAO1a,KAAKgc,GACjBrb,KAAK8U,OAAOzV,KAAK6Z,GACjBlZ,KAAKia,QAAQ5a,KAAK,GAElB6d,GAAe,EACf7B,EAAS,EACTnC,EAAS,EACT3P,EAAQ5D,EAAM,GAKlB3F,KAAK8Z,OAAOza,KAAK4d,EAAE1e,QACnByB,KAAKga,OAAO3a,KAAK4d,EAAE1e,QACnByB,KAAK+Z,OAAO1a,KAAK,GACjBW,KAAK8U,OAAOzV,KAAK,GACjBW,KAAKia,QAAQ5a,KAAK,GAElBW,KAAKmV,QAAUnV,KAAK8Z,OAAOvb,OAAS,EAKtCye,EAAWvY,UAAUpF,KAAO,SAAUR,EAAM+Y,EAAKD,GAC/C,IAAIvB,EAAQ,IAAI2G,EAAMle,EAAM+Y,EAAKD,GAQjC,OAPAvB,EAAM5D,OAAQ,EAEVmF,EAAU,GAAG3X,KAAK4P,QACtBwG,EAAMxG,MAAQ5P,KAAK4P,MACf+H,EAAU,GAAG3X,KAAK4P,QAEtB5P,KAAK8T,OAAOzU,KAAK+W,GACVA,GAGT4G,EAAWvY,UAAUwQ,QAAU,SAAiB5S,GAC9C,OAAOrC,KAAK8Z,OAAOzX,GAAQrC,KAAK+Z,OAAO1X,IAASrC,KAAKga,OAAO3X,IAG9D2a,EAAWvY,UAAUoQ,eAAiB,SAAwBuI,GAC5D,IAAK,IAAIzN,EAAM3P,KAAKmV,QAASiI,EAAOzN,KAC9B3P,KAAK8Z,OAAOsD,GAAQpd,KAAK+Z,OAAOqD,GAAQpd,KAAKga,OAAOoD,IADjBA,KAKzC,OAAOA,GAITJ,EAAWvY,UAAUiW,WAAa,SAAoB/U,GAGpD,IAFA,IAAIoI,EAEK4B,EAAM3P,KAAK+O,IAAIxQ,OAAQoH,EAAMgK,IACpC5B,EAAK/N,KAAK+O,IAAIL,WAAW/I,GACpBsJ,EAAQlB,IAF4BpI,KAI3C,OAAOA,GAITqX,EAAWvY,UAAUmW,eAAiB,SAAwBjV,EAAK0W,GACjE,GAAI1W,GAAO0W,EAAO,OAAO1W,EAEzB,KAAOA,EAAM0W,GACX,IAAKpN,EAAQjP,KAAK+O,IAAIL,aAAa/I,IAAS,OAAOA,EAAM,EAE3D,OAAOA,GAITqX,EAAWvY,UAAUgW,UAAY,SAAmB9U,EAAK8I,GACvD,IAAK,IAAIkB,EAAM3P,KAAK+O,IAAIxQ,OAAQoH,EAAMgK,GAChC3P,KAAK+O,IAAIL,WAAW/I,KAAS8I,EADQ9I,KAG3C,OAAOA,GAITqX,EAAWvY,UAAUoW,cAAgB,SAAuBlV,EAAK8I,EAAM4N,GACrE,GAAI1W,GAAO0W,EAAO,OAAO1W,EAEzB,KAAOA,EAAM0W,GACX,GAAI5N,IAASzO,KAAK+O,IAAIL,aAAa/I,GAAQ,OAAOA,EAAM,EAE1D,OAAOA,GAITqX,EAAWvY,UAAU4V,SAAW,SAAkBgD,EAAO7T,EAAK6R,EAAQiC,GACpE,IAAIjJ,EAAGkJ,EAAYxP,EAAIyP,EAAOpD,EAAMqD,EAAOC,EACvCrb,EAAOgb,EAEX,GAAIA,GAAS7T,EACX,MAAO,GAKT,IAFAiU,EAAQ,IAAI7c,MAAM4I,EAAM6T,GAEnBhJ,EAAI,EAAGhS,EAAOmH,EAAKnH,IAAQgS,IAAK,CAWnC,IAVAkJ,EAAa,EACbG,EAAYF,EAAQxd,KAAK8Z,OAAOzX,GAI9B+X,EAFE/X,EAAO,EAAImH,GAAO8T,EAEbtd,KAAKga,OAAO3X,GAAQ,EAEpBrC,KAAKga,OAAO3X,GAGdmb,EAAQpD,GAAQmD,EAAalC,GAAQ,CAG1C,GAFAtN,EAAK/N,KAAK+O,IAAIL,WAAW8O,GAErBvO,EAAQlB,GACC,IAAPA,EACFwP,GAAc,GAAKA,EAAavd,KAAKia,QAAQ5X,IAAS,EAEtDkb,QAEG,MAAIC,EAAQE,EAAY1d,KAAK+Z,OAAO1X,IAIzC,MAFAkb,IAKFC,IAMAC,EAAMpJ,GAHJkJ,EAAalC,EAGJ,IAAIza,MAAM2c,EAAalC,EAAS,GAAG7T,KAAK,KAAOxH,KAAK+O,IAAIrK,MAAM8Y,EAAOpD,GAErEpa,KAAK+O,IAAIrK,MAAM8Y,EAAOpD,GAIrC,OAAOqD,EAAMjW,KAAK,KAIpBwV,EAAWvY,UAAUsY,MAAQA,EAG7B1b,EAAOC,QAAU0b,gCClOjB,IAAI/N,EAAU,iBAGd,SAAS0O,EAAQ5N,EAAO1N,GACtB,IAAIsD,EAAMoK,EAAM+J,OAAOzX,GAAQ0N,EAAMgK,OAAO1X,GACxCsN,EAAMI,EAAMiK,OAAO3X,GAEvB,OAAO0N,EAAMhB,IAAI6O,OAAOjY,EAAKgK,EAAMhK,GAGrC,SAASkY,EAAa1f,GACpB,IAGI4P,EAHA3C,EAAS,GACTzF,EAAM,EACNgK,EAAMxR,EAAII,OAEVuf,GAAY,EACZC,EAAU,EACVC,EAAU,GAId,IAFAjQ,EAAM5P,EAAIuQ,WAAW/I,GAEdA,EAAMgK,GACA,MAAP5B,IACG+P,GAOHE,GAAW7f,EAAI8f,UAAUF,EAASpY,EAAM,GACxCoY,EAAUpY,IANVyF,EAAO/L,KAAK2e,EAAU7f,EAAI8f,UAAUF,EAASpY,IAC7CqY,EAAU,GACVD,EAAUpY,EAAM,IAQpBmY,EAAoB,KAAP/P,EACbpI,IAEAoI,EAAK5P,EAAIuQ,WAAW/I,GAKtB,OAFAyF,EAAO/L,KAAK2e,EAAU7f,EAAI8f,UAAUF,IAE7B3S,EAIT/J,EAAOC,QAAU,SAAeyO,EAAOyE,EAAWC,EAASoE,GACzD,IAAI9K,EAAIkN,EAAUtV,EAAK0O,EAAGgB,EAAG4D,EAAUiF,EAASC,EAAa/H,EACzDgI,EAAQC,EAAGC,EAAYC,EAAYjF,EAAeI,EAClDC,EAAiB6E,EAASC,EAG9B,GAAIjK,EAAY,EAAIC,EAAW,OAAO,EAItC,GAFAwE,EAAWzE,EAAY,EAEnBzE,EAAM+E,OAAOmE,GAAYlJ,EAAMgF,UAAa,OAAO,EAGvD,GAAIhF,EAAM+E,OAAOmE,GAAYlJ,EAAMgF,WAAa,EAAK,OAAO,EAO5D,IADApP,EAAMoK,EAAM+J,OAAOb,GAAYlJ,EAAMgK,OAAOd,KACjClJ,EAAMiK,OAAOf,GAAa,OAAO,EAG5C,GAAgB,OADhBuF,EAAUzO,EAAMhB,IAAIL,WAAW/I,OACY,KAAZ6Y,GAAuC,KAAZA,EAA2B,OAAO,EAE5F,GAAI7Y,GAAOoK,EAAMiK,OAAOf,GAAa,OAAO,EAG5C,GAAiB,OADjBwF,EAAW1O,EAAMhB,IAAIL,WAAW/I,OACa,KAAb8Y,GAAyC,KAAbA,IAA6BxP,EAAQwP,GAC/F,OAAO,EAKT,GAAgB,KAAZD,GAA2BvP,EAAQwP,GAAa,OAAO,EAE3D,KAAO9Y,EAAMoK,EAAMiK,OAAOf,IAAW,CAGnC,GAAW,OAFXlL,EAAKgC,EAAMhB,IAAIL,WAAW/I,KAEO,KAAPoI,GAA6B,KAAPA,IAAuBkB,EAAQlB,GAAO,OAAO,EAE7FpI,IAOF,IAFAuY,GAFAjD,EAAW0C,EAAQ5N,EAAOyE,EAAY,IAEnB3N,MAAM,KACzBuX,EAAS,GACJ/J,EAAI,EAAGA,EAAI6J,EAAQ3f,OAAQ8V,IAAK,CAEnC,KADAgK,EAAIH,EAAQ7J,GAAG/E,QACP,CAGN,GAAU,IAAN+E,GAAWA,IAAM6J,EAAQ3f,OAAS,EACpC,SAEA,OAAO,EAIX,IAAK,WAAW+B,KAAK+d,GAAM,OAAO,EACC,KAA/BA,EAAE3P,WAAW2P,EAAE9f,OAAS,GAC1B6f,EAAO/e,KAAyB,KAApBgf,EAAE3P,WAAW,GAAqB,SAAW,SAC5B,KAApB2P,EAAE3P,WAAW,GACtB0P,EAAO/e,KAAK,QAEZ+e,EAAO/e,KAAK,IAKhB,IAA+B,KAD/B4b,EAAW0C,EAAQ5N,EAAOyE,GAAWlF,QACxBnE,QAAQ,KAAe,OAAO,EAC3C,GAAI4E,EAAM+E,OAAON,GAAazE,EAAMgF,WAAa,EAAK,OAAO,EAQ7D,IAPAmJ,EAAUL,EAAa5C,IACX1c,QAAyB,KAAf2f,EAAQ,IAAWA,EAAQ5U,QAC7C4U,EAAQ3f,QAA0C,KAAhC2f,EAAQA,EAAQ3f,OAAS,IAAW2f,EAAQQ,MAK9C,KADpBP,EAAcD,EAAQ3f,SACG4f,IAAgBC,EAAO7f,OAAU,OAAO,EAEjE,GAAIsa,EAAU,OAAO,EAkBrB,IAhBAS,EAAgBvJ,EAAMmK,WACtBnK,EAAMmK,WAAa,QAInBP,EAAkB5J,EAAMQ,GAAGiC,MAAMQ,MAAM0B,SAAS,eAEhD0B,EAAYrG,EAAM1Q,KAAK,aAAc,QAAS,IACxCwJ,IAAMyV,EAAa,CAAE9J,EAAW,IAEtC4B,EAAYrG,EAAM1Q,KAAK,aAAc,QAAS,IACxCwJ,IAAM,CAAE2L,EAAWA,EAAY,IAErC4B,EAAYrG,EAAM1Q,KAAK,UAAW,KAAM,IAClCwJ,IAAM,CAAE2L,EAAWA,EAAY,GAEhCH,EAAI,EAAGA,EAAI6J,EAAQ3f,OAAQ8V,IAC9B+B,EAAiBrG,EAAM1Q,KAAK,UAAW,KAAM,GACzC+e,EAAO/J,KACT+B,EAAMW,MAAS,CAAE,CAAE,QAAS,cAAgBqH,EAAO/J,OAGrD+B,EAAiBrG,EAAM1Q,KAAK,SAAU,GAAI,IACpCiX,QAAW4H,EAAQ7J,GAAG/E,OAC5B8G,EAAMc,SAAW,GAEjBd,EAAiBrG,EAAM1Q,KAAK,WAAY,MAAO,GAMjD,IAHA+W,EAAYrG,EAAM1Q,KAAK,WAAY,MAAO,GAC1C+W,EAAYrG,EAAM1Q,KAAK,cAAe,SAAU,GAE3C4Z,EAAWzE,EAAY,EAAGyE,EAAWxE,KACpC1E,EAAM+E,OAAOmE,GAAYlJ,EAAMgF,WADckE,IAAY,CAI7D,IADAS,GAAY,EACPrF,EAAI,EAAGgB,EAAIsE,EAAgBpb,OAAQ8V,EAAIgB,EAAGhB,IAC7C,GAAIsF,EAAgBtF,GAAGtE,EAAOkJ,EAAUxE,GAAS,GAAO,CACtDiF,GAAY,EACZ,MAIJ,GAAIA,EAAa,MAEjB,KADAuB,EAAW0C,EAAQ5N,EAAOkJ,GAAU3J,QACnB,MACjB,GAAIS,EAAM+E,OAAOmE,GAAYlJ,EAAMgF,WAAa,EAAK,MAarD,KAZAmJ,EAAUL,EAAa5C,IACX1c,QAAyB,KAAf2f,EAAQ,IAAWA,EAAQ5U,QAC7C4U,EAAQ3f,QAA0C,KAAhC2f,EAAQA,EAAQ3f,OAAS,IAAW2f,EAAQQ,MAE9DzF,IAAazE,EAAY,KAC3B4B,EAAYrG,EAAM1Q,KAAK,aAAc,QAAS,IACxCwJ,IAAM0V,EAAa,CAAE/J,EAAY,EAAG,KAG5C4B,EAAYrG,EAAM1Q,KAAK,UAAW,KAAM,IAClCwJ,IAAM,CAAEoQ,EAAUA,EAAW,GAE9B5E,EAAI,EAAGA,EAAI8J,EAAa9J,IAC3B+B,EAAiBrG,EAAM1Q,KAAK,UAAW,KAAM,GACzC+e,EAAO/J,KACT+B,EAAMW,MAAS,CAAE,CAAE,QAAS,cAAgBqH,EAAO/J,OAGrD+B,EAAiBrG,EAAM1Q,KAAK,SAAU,GAAI,IACpCiX,QAAW4H,EAAQ7J,GAAK6J,EAAQ7J,GAAG/E,OAAS,GAClD8G,EAAMc,SAAW,GAEjBd,EAAiBrG,EAAM1Q,KAAK,WAAY,MAAO,GAEjD+W,EAAQrG,EAAM1Q,KAAK,WAAY,MAAO,GAaxC,OAVIkf,IACFnI,EAAQrG,EAAM1Q,KAAK,cAAe,SAAU,GAC5Ckf,EAAW,GAAKtF,GAGlB7C,EAAQrG,EAAM1Q,KAAK,cAAe,SAAU,GAC5Cif,EAAW,GAAKrF,EAEhBlJ,EAAMmK,WAAaZ,EACnBvJ,EAAM1N,KAAO4W,GACN,2BCxNT5X,EAAOC,QAAU,SAAeyO,GAC9B,IAAIqG,EAEArG,EAAMkE,aACRmC,EAAiB,IAAIrG,EAAMgN,MAAM,SAAU,GAAI,IACzCzG,QAAWvG,EAAMhB,IACvBqH,EAAMvN,IAAW,CAAE,EAAG,GACtBuN,EAAMc,SAAW,GACjBnH,EAAM+D,OAAOzU,KAAK+W,IAElBrG,EAAMQ,GAAGiC,MAAMb,MAAM5B,EAAMhB,IAAKgB,EAAMQ,GAAIR,EAAMtS,IAAKsS,EAAM+D,iCCX/DzS,EAAOC,QAAU,SAAgByO,GAC/B,IAA2B4O,EAAKtK,EAAGgB,EAA/BvB,EAAS/D,EAAM+D,OAGnB,IAAKO,EAAI,EAAGgB,EAAIvB,EAAOvV,OAAQ8V,EAAIgB,EAAGhB,IAEnB,YADjBsK,EAAM7K,EAAOO,IACLxV,MACNkR,EAAMQ,GAAGC,OAAOmB,MAAMgN,EAAIrI,QAASvG,EAAMQ,GAAIR,EAAMtS,IAAKkhB,EAAIzH,yCCFlE,IAAIpI,EAAiB,wBAMrB,SAAS8P,EAAYzgB,GACnB,MAAO,aAAamC,KAAKnC,GAI3BkD,EAAOC,QAAU,SAAiByO,GAChC,IAAIsE,EAAGwK,EAAGxJ,EAAGvB,EAAQsC,EAAO0I,EAAcC,EAAOC,EAAItZ,EAAMC,EAAKoY,EAC5DnO,EAAOqP,EAAelV,EAAKmV,EAASC,EAEpCC,EAZcjhB,EAWdkhB,EAActP,EAAM+D,OAGxB,GAAK/D,EAAMQ,GAAGpG,QAAQwI,QAEtB,IAAKkM,EAAI,EAAGxJ,EAAIgK,EAAY9gB,OAAQsgB,EAAIxJ,EAAGwJ,IACzC,GAA4B,WAAxBQ,EAAYR,GAAGhgB,MACdkR,EAAMQ,GAAGoC,QAAQ1J,QAAQoW,EAAYR,GAAGvI,SAU7C,IAJA2I,EAAgB,EAIX5K,GANLP,EAASuL,EAAYR,GAAG3H,UAMR3Y,OAAS,EAAG8V,GAAK,EAAGA,IAIlC,GAA0B,gBAH1ByK,EAAehL,EAAOO,IAGLxV,MAiBjB,GAR0B,gBAAtBigB,EAAajgB,OAzCHV,EA0CG2gB,EAAaxI,QAzC3B,YAAYhW,KAAKnC,IAyCsB8gB,EAAgB,GACtDA,IAEEL,EAAYE,EAAaxI,UAC3B2I,OAGAA,EAAgB,IAEM,SAAtBH,EAAajgB,MAAmBkR,EAAMQ,GAAGoC,QAAQrS,KAAKwe,EAAaxI,SAAU,CAU/E,IARA5Q,EAAOoZ,EAAaxI,QACpB8I,EAAQrP,EAAMQ,GAAGoC,QAAQxM,MAAMT,GAG/BqZ,EAAQ,GACRnP,EAAQkP,EAAalP,MACrBmO,EAAU,EAELiB,EAAK,EAAGA,EAAKI,EAAM7gB,OAAQygB,IAE9BjV,EAAMqV,EAAMJ,GAAIjV,IAChBmV,EAAUnP,EAAMQ,GAAGkB,cAAc1H,GAC5BgG,EAAMQ,GAAGgB,aAAa2N,KAE3BC,EAAUC,EAAMJ,GAAItZ,KAWlByZ,EALGC,EAAMJ,GAAItV,OAEiB,YAArB0V,EAAMJ,GAAItV,QAAyB,YAAYpJ,KAAK6e,GAGnDpP,EAAMQ,GAAG2B,kBAAkBiN,GAF3BpP,EAAMQ,GAAG2B,kBAAkB,UAAYiN,GAASjgB,QAAQ,WAAY,IAFpE6Q,EAAMQ,GAAG2B,kBAAkB,UAAYiN,GAASjgB,QAAQ,aAAc,KAOlFyG,EAAMyZ,EAAMJ,GAAInV,OAENkU,KACR3H,EAAgB,IAAIrG,EAAMgN,MAAM,OAAQ,GAAI,IACtCzG,QAAU5Q,EAAKhB,MAAMqZ,EAASpY,GACpCyQ,EAAMxG,MAAUA,EAChBmP,EAAM1f,KAAK+W,KAGbA,EAAgB,IAAIrG,EAAMgN,MAAM,YAAa,IAAK,IAC5ChG,MAAU,CAAE,CAAE,OAAQmI,IAC5B9I,EAAMxG,MAAUA,IAChBwG,EAAM+D,OAAU,UAChB/D,EAAMvS,KAAU,OAChBkb,EAAM1f,KAAK+W,IAEXA,EAAgB,IAAIrG,EAAMgN,MAAM,OAAQ,GAAI,IACtCzG,QAAU6I,EAChB/I,EAAMxG,MAAUA,EAChBmP,EAAM1f,KAAK+W,IAEXA,EAAgB,IAAIrG,EAAMgN,MAAM,aAAc,KAAM,IAC9CnN,QAAYA,EAClBwG,EAAM+D,OAAU,UAChB/D,EAAMvS,KAAU,OAChBkb,EAAM1f,KAAK+W,GAEX2H,EAAUqB,EAAMJ,GAAI3e,WAElB0d,EAAUrY,EAAKnH,UACjB6X,EAAgB,IAAIrG,EAAMgN,MAAM,OAAQ,GAAI,IACtCzG,QAAU5Q,EAAKhB,MAAMqZ,GAC3B3H,EAAMxG,MAAUA,EAChBmP,EAAM1f,KAAK+W,IAIbiJ,EAAYR,GAAG3H,SAAWpD,EAAShF,EAAegF,EAAQO,EAAG0K,SApF7D,IADA1K,IACOP,EAAOO,GAAGzE,QAAUkP,EAAalP,OAA4B,cAAnBkE,EAAOO,GAAGxV,MACzDwV,6BCvCV,IAAIiL,EAAe,YACfC,EAAe,MAGnBle,EAAOC,QAAU,SAAmByO,GAClC,IAAI5R,EAMJA,GAHAA,EAAM4R,EAAMhB,IAAI7P,QAAQogB,EAAa,OAG3BpgB,QAAQqgB,EAAS,KAE3BxP,EAAMhB,IAAM5Q,2BCFd,IAAIqhB,EAAU,+BAIVC,EAAsB,kBAEtBC,EAAiB,mBACjBC,EAAc,CAChB1S,EAAG,IACH2S,EAAG,IACHC,EAAG,IACHC,GAAI,KAGN,SAASC,EAAU5Z,EAAOxH,GACxB,OAAOghB,EAAYhhB,EAAKiL,eAG1B,SAASoW,EAAeC,GACtB,IAAI5L,EAAG+B,EAAO8J,EAAkB,EAEhC,IAAK7L,EAAI4L,EAAa1hB,OAAS,EAAG8V,GAAK,EAAGA,IAGrB,UAFnB+B,EAAQ6J,EAAa5L,IAEXxV,MAAoBqhB,IAC5B9J,EAAME,QAAUF,EAAME,QAAQpX,QAAQwgB,EAAgBK,IAGrC,cAAf3J,EAAMvX,MAAuC,SAAfuX,EAAMvS,MACtCqc,IAGiB,eAAf9J,EAAMvX,MAAwC,SAAfuX,EAAMvS,MACvCqc,IAKN,SAASC,EAAaF,GACpB,IAAI5L,EAAG+B,EAAO8J,EAAkB,EAEhC,IAAK7L,EAAI4L,EAAa1hB,OAAS,EAAG8V,GAAK,EAAGA,IAGrB,UAFnB+B,EAAQ6J,EAAa5L,IAEXxV,MAAoBqhB,GACxBV,EAAQlf,KAAK8V,EAAME,WACrBF,EAAME,QAAUF,EAAME,QACnBpX,QAAQ,OAAQ,KAGhBA,QAAQ,UAAW,KAAKA,QAAQ,WAAY,QAC5CA,QAAQ,cAAe,UAAUA,QAAQ,SAAU,KAEnDA,QAAQ,0BAA2B,OAEnCA,QAAQ,qBAAsB,OAC9BA,QAAQ,6BAA8B,QAI1B,cAAfkX,EAAMvX,MAAuC,SAAfuX,EAAMvS,MACtCqc,IAGiB,eAAf9J,EAAMvX,MAAwC,SAAfuX,EAAMvS,MACvCqc,IAMN7e,EAAOC,QAAU,SAAiByO,GAChC,IAAIqQ,EAEJ,GAAKrQ,EAAMQ,GAAGpG,QAAQ2L,YAEtB,IAAKsK,EAASrQ,EAAM+D,OAAOvV,OAAS,EAAG6hB,GAAU,EAAGA,IAEhB,WAA9BrQ,EAAM+D,OAAOsM,GAAQvhB,OAErB4gB,EAAoBnf,KAAKyP,EAAM+D,OAAOsM,GAAQ9J,UAChD0J,EAAejQ,EAAM+D,OAAOsM,GAAQlJ,UAGlCsI,EAAQlf,KAAKyP,EAAM+D,OAAOsM,GAAQ9J,UACpC6J,EAAapQ,EAAM+D,OAAOsM,GAAQlJ,0CCjGxC,IAAIhI,EAAiB,sBACjBE,EAAiB,qBACjBD,EAAiB,wBAEjBkR,EAAgB,OAChBC,EAAW,QAIf,SAASC,EAAUpiB,EAAK0L,EAAOkE,GAC7B,OAAO5P,EAAIyf,OAAO,EAAG/T,GAASkE,EAAK5P,EAAIyf,OAAO/T,EAAQ,GAGxD,SAAS2W,EAAgB1M,EAAQ/D,GAC/B,IAAIsE,EAAG+B,EAAO1Q,EAAM2Y,EAAG1Y,EAAKgK,EAAK8Q,EAAWC,EAAMC,EAAUC,EACxDC,EAAiBC,EAAiBC,EAAkBC,EACpDC,EAASC,EAAUrC,EAAGsC,EAAUjjB,EAAOkjB,EAAWC,EAItD,IAFAnjB,EAAQ,GAEHmW,EAAI,EAAGA,EAAIP,EAAOvV,OAAQ8V,IAAK,CAKlC,IAJA+B,EAAQtC,EAAOO,GAEfoM,EAAY3M,EAAOO,GAAGzE,MAEjBiP,EAAI3gB,EAAMK,OAAS,EAAGsgB,GAAK,KAC1B3gB,EAAM2gB,GAAGjP,OAAS6Q,GADW5B,KAKnC,GAFA3gB,EAAMK,OAASsgB,EAAI,EAEA,SAAfzI,EAAMvX,KAAV,CAGA8G,EAAM,EACNgK,GAFAjK,EAAO0Q,EAAME,SAEF/X,OAGX+iB,EACA,KAAO3b,EAAMgK,IACX2Q,EAASjgB,UAAYsF,EACrB0Y,EAAIiC,EAAStV,KAAKtF,KAFF,CAchB,GATAub,EAAUC,GAAW,EACrBvb,EAAM0Y,EAAExU,MAAQ,EAChBsX,EAAqB,MAAT9C,EAAE,GAKdsC,EAAW,GAEPtC,EAAExU,MAAQ,GAAK,EACjB8W,EAAWjb,EAAKgJ,WAAW2P,EAAExU,MAAQ,QAErC,IAAKgV,EAAIxK,EAAI,EAAGwK,GAAK,GACI,cAAnB/K,EAAO+K,GAAGhgB,MAA2C,cAAnBiV,EAAO+K,GAAGhgB,KAD1BggB,IAEtB,GAAK/K,EAAO+K,GAAGvI,QAAf,CAEAqK,EAAW7M,EAAO+K,GAAGvI,QAAQ5H,WAAWoF,EAAO+K,GAAGvI,QAAQ/X,OAAS,GACnE,MASJ,GAFAqiB,EAAW,GAEPjb,EAAMgK,EACRiR,EAAWlb,EAAKgJ,WAAW/I,QAE3B,IAAKkZ,EAAIxK,EAAI,EAAGwK,EAAI/K,EAAOvV,QACF,cAAnBuV,EAAO+K,GAAGhgB,MAA2C,cAAnBiV,EAAO+K,GAAGhgB,KADfggB,IAEjC,GAAK/K,EAAO+K,GAAGvI,QAAf,CAEAsK,EAAW9M,EAAO+K,GAAGvI,QAAQ5H,WAAW,GACxC,MA6CJ,GAzCAmS,EAAkB1R,EAAewR,IAAavR,EAAY/B,OAAOC,aAAaqT,IAC9EG,EAAkB3R,EAAeyR,IAAaxR,EAAY/B,OAAOC,aAAasT,IAE9EG,EAAmB7R,EAAayR,IAChCK,EAAmB9R,EAAa0R,IAG9BK,GAAU,EACDH,IACHC,GAAoBF,IACxBI,GAAU,IAIVF,EACFG,GAAW,EACFL,IACHG,GAAoBF,IACxBI,GAAW,IAIE,KAAbN,GAAsC,MAATvC,EAAE,IAC7BsC,GAAY,IAAgBA,GAAY,KAE1CO,EAAWD,GAAU,GAIrBA,GAAWC,IAQbD,EAAUJ,EACVK,EAAWJ,GAGRG,GAAYC,EAAjB,CAQA,GAAIA,EAEF,IAAKrC,EAAI3gB,EAAMK,OAAS,EAAGsgB,GAAK,IAC9B6B,EAAOxiB,EAAM2gB,KACT3gB,EAAM2gB,GAAGjP,MAAQ6Q,IAFY5B,IAGjC,GAAI6B,EAAKa,SAAWJ,GAAYjjB,EAAM2gB,GAAGjP,QAAU6Q,EAAW,CAC5DC,EAAOxiB,EAAM2gB,GAETsC,GACFC,EAAYrR,EAAMQ,GAAGpG,QAAQ4L,OAAO,GACpCsL,EAAatR,EAAMQ,GAAGpG,QAAQ4L,OAAO,KAErCqL,EAAYrR,EAAMQ,GAAGpG,QAAQ4L,OAAO,GACpCsL,EAAatR,EAAMQ,GAAGpG,QAAQ4L,OAAO,IAMvCK,EAAME,QAAUiK,EAAUnK,EAAME,QAAS+H,EAAExU,MAAOwX,GAClDvN,EAAO4M,EAAKtK,OAAOE,QAAUiK,EAC3BzM,EAAO4M,EAAKtK,OAAOE,QAASoK,EAAK/a,IAAKyb,GAExCzb,GAAO0b,EAAW9iB,OAAS,EACvBmiB,EAAKtK,QAAU/B,IAAK1O,GAAOyb,EAAU7iB,OAAS,GAGlDoR,GADAjK,EAAO0Q,EAAME,SACF/X,OAEXL,EAAMK,OAASsgB,EACf,SAASyC,EAKXL,EACF/iB,EAAMmB,KAAK,CACT+W,MAAO/B,EACP1O,IAAK0Y,EAAExU,MACP0X,OAAQJ,EACRvR,MAAO6Q,IAEAS,GAAYC,IACrB/K,EAAME,QAAUiK,EAAUnK,EAAME,QAAS+H,EAAExU,MAvKlC,WAsHLsX,IACF/K,EAAME,QAAUiK,EAAUnK,EAAME,QAAS+H,EAAExU,MAvHpC,SA8KjBxI,EAAOC,QAAU,SAAqByO,GAEpC,IAAIqQ,EAEJ,GAAKrQ,EAAMQ,GAAGpG,QAAQ2L,YAEtB,IAAKsK,EAASrQ,EAAM+D,OAAOvV,OAAS,EAAG6hB,GAAU,EAAGA,IAEhB,WAA9BrQ,EAAM+D,OAAOsM,GAAQvhB,MACpBwhB,EAAc/f,KAAKyP,EAAM+D,OAAOsM,GAAQ9J,UAI7CkK,EAAgBzQ,EAAM+D,OAAOsM,GAAQlJ,SAAUnH,kCClMnD,IAAIgN,EAAQ,EAAQ,OAGpB,SAASyE,EAAUzS,EAAKwB,EAAI9S,GAC1BuC,KAAK+O,IAAMA,EACX/O,KAAKvC,IAAMA,EACXuC,KAAK8T,OAAS,GACd9T,KAAKiU,YAAa,EAClBjU,KAAKuQ,GAAKA,EAIZiR,EAAU/c,UAAUsY,MAAQA,EAG5B1b,EAAOC,QAAUkgB,0BCbjB,IAAIC,EAAc,0IACdC,EAAc,sDAGlBrgB,EAAOC,QAAU,SAAkByO,EAAO8I,GACxC,IAAI9O,EAAKmV,EAAS9I,EAAOrI,EAAIxE,EAAOoG,EAChChK,EAAMoK,EAAMpK,IAEhB,GAAkC,KAA9BoK,EAAMhB,IAAIL,WAAW/I,GAAwB,OAAO,EAKxD,IAHA4D,EAAQwG,EAAMpK,IACdgK,EAAMI,EAAMM,SAEH,CACP,KAAM1K,GAAOgK,EAAK,OAAO,EAIzB,GAAW,MAFX5B,EAAKgC,EAAMhB,IAAIL,WAAW/I,IAED,OAAO,EAChC,GAAW,KAAPoI,EAAqB,MAK3B,OAFAhE,EAAMgG,EAAMhB,IAAIrK,MAAM6E,EAAQ,EAAG5D,GAE7B+b,EAAYphB,KAAKyJ,IACnBmV,EAAUnP,EAAMQ,GAAGkB,cAAc1H,KAC5BgG,EAAMQ,GAAGgB,aAAa2N,KAEtBrG,KACHzC,EAAgBrG,EAAM1Q,KAAK,YAAa,IAAK,IACvC0X,MAAU,CAAE,CAAE,OAAQmI,IAC5B9I,EAAM+D,OAAU,WAChB/D,EAAMvS,KAAU,QAEhBuS,EAAgBrG,EAAM1Q,KAAK,OAAQ,GAAI,IACjCiX,QAAUvG,EAAMQ,GAAG2B,kBAAkBnI,IAE3CqM,EAAgBrG,EAAM1Q,KAAK,aAAc,KAAM,IACzC8a,OAAU,WAChB/D,EAAMvS,KAAU,QAGlBkM,EAAMpK,KAAOoE,EAAIxL,OAAS,GACnB,MAGLkjB,EAASnhB,KAAKyJ,KAChBmV,EAAUnP,EAAMQ,GAAGkB,cAAc,UAAY1H,KACxCgG,EAAMQ,GAAGgB,aAAa2N,KAEtBrG,KACHzC,EAAgBrG,EAAM1Q,KAAK,YAAa,IAAK,IACvC0X,MAAU,CAAE,CAAE,OAAQmI,IAC5B9I,EAAM+D,OAAU,WAChB/D,EAAMvS,KAAU,QAEhBuS,EAAgBrG,EAAM1Q,KAAK,OAAQ,GAAI,IACjCiX,QAAUvG,EAAMQ,GAAG2B,kBAAkBnI,IAE3CqM,EAAgBrG,EAAM1Q,KAAK,aAAc,KAAM,IACzC8a,OAAU,WAChB/D,EAAMvS,KAAU,QAGlBkM,EAAMpK,KAAOoE,EAAIxL,OAAS,GACnB,6BClEX8C,EAAOC,QAAU,SAAkByO,EAAO8I,GACxC,IAAItP,EAAOoG,EAAKO,EAAQkG,EAAOuL,EAAYC,EAAUC,EAAcC,EAC/Dnc,EAAMoK,EAAMpK,IAGhB,GAAW,KAFFoK,EAAMhB,IAAIL,WAAW/I,GAEJ,OAAO,EAOjC,IALA4D,EAAQ5D,EACRA,IACAgK,EAAMI,EAAMM,OAGL1K,EAAMgK,GAAqC,KAA9BI,EAAMhB,IAAIL,WAAW/I,IAAwBA,IAKjE,GAFAkc,GADA3R,EAASH,EAAMhB,IAAIrK,MAAM6E,EAAO5D,IACVpH,OAElBwR,EAAMgS,mBAAqBhS,EAAMiS,UAAUH,IAAiB,IAAMtY,EAGpE,OAFKsP,IAAQ9I,EAAMyF,SAAWtF,GAC9BH,EAAMpK,KAAOkc,GACN,EAMT,IAHAF,EAAaC,EAAWjc,GAGoC,KAApDgc,EAAa5R,EAAMhB,IAAI5D,QAAQ,IAAKyW,KAAmB,CAI7D,IAHAA,EAAWD,EAAa,EAGjBC,EAAWjS,GAA0C,KAAnCI,EAAMhB,IAAIL,WAAWkT,IAA6BA,IAI3E,IAFAE,EAAeF,EAAWD,KAELE,EAUnB,OARKhJ,KACHzC,EAAYrG,EAAM1Q,KAAK,cAAe,OAAQ,IACxC8a,OAAUjK,EAChBkG,EAAME,QAAUvG,EAAMhB,IAAIrK,MAAMiB,EAAKgc,GAClCziB,QAAQ,MAAO,KACfA,QAAQ,WAAY,OAEzB6Q,EAAMpK,IAAMic,GACL,EAIT7R,EAAMiS,UAAUF,GAAgBH,EAQlC,OAJA5R,EAAMgS,kBAAmB,EAEpBlJ,IAAQ9I,EAAMyF,SAAWtF,GAC9BH,EAAMpK,KAAOkc,GACN,0BCxDT,SAASI,EAAkBlS,EAAOmS,GAChC,IAAIC,EAAWC,EAAWC,EAAQC,EAAQC,EAAcC,EACpDC,EAAYC,EACZC,EAAgB,GAChBhT,EAAMuS,EAAW3jB,OAErB,GAAKoR,EAAL,CAGA,IAAIiT,EAAY,EACZC,GAAgB,EAChBC,EAAQ,GAEZ,IAAKX,EAAY,EAAGA,EAAYxS,EAAKwS,IAqBnC,GApBAE,EAASH,EAAWC,GAEpBW,EAAMzjB,KAAK,GAMP6iB,EAAWU,GAAW1S,SAAWmS,EAAOnS,QAAU2S,IAAiBR,EAAOjM,MAAQ,IACpFwM,EAAYT,GAGdU,EAAeR,EAAOjM,MAMtBiM,EAAO9jB,OAAS8jB,EAAO9jB,QAAU,EAE5B8jB,EAAOtjB,MAAZ,CAgBA,IAVK4jB,EAAcpY,eAAe8X,EAAOnS,UACvCyS,EAAcN,EAAOnS,QAAU,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAGxDqS,EAAeI,EAAcN,EAAOnS,SAASmS,EAAOvjB,KAAO,EAAI,GAAMujB,EAAO9jB,OAAS,GAIrFikB,EAFAJ,EAAYQ,EAAYE,EAAMF,GAAa,EAIpCR,EAAYG,EAAcH,GAAaU,EAAMV,GAAa,EAG/D,IAFAE,EAASJ,EAAWE,IAETlS,SAAWmS,EAAOnS,QAEzBoS,EAAOxjB,MAAQwjB,EAAO9Y,IAAM,IAE9BiZ,GAAa,GASTH,EAAOvjB,OAASsjB,EAAOvjB,QACpBwjB,EAAO/jB,OAAS8jB,EAAO9jB,QAAU,GAAM,IACtC+jB,EAAO/jB,OAAS,GAAM,GAAK8jB,EAAO9jB,OAAS,GAAM,IACnDkkB,GAAa,KAKdA,GAAY,CAKfC,EAAWN,EAAY,IAAMF,EAAWE,EAAY,GAAGtjB,KACrDgkB,EAAMV,EAAY,GAAK,EACvB,EAEFU,EAAMX,GAAaA,EAAYC,EAAYM,EAC3CI,EAAMV,GAAaM,EAEnBL,EAAOvjB,MAAQ,EACfwjB,EAAO9Y,IAAQ2Y,EACfG,EAAOvjB,OAAQ,EACfyjB,GAAmB,EAGnBK,GAAgB,EAChB,OAKmB,IAArBL,IAQFG,EAAcN,EAAOnS,SAASmS,EAAOvjB,KAAO,EAAI,IAAOujB,EAAO9jB,QAAU,GAAK,GAAMikB,KAMzFnhB,EAAOC,QAAU,SAAoByO,GACnC,IAAIgT,EACAC,EAAcjT,EAAMiT,YACpBrT,EAAMI,EAAMiT,YAAYzkB,OAI5B,IAFA0jB,EAAkBlS,EAAOA,EAAMmS,YAE1Ba,EAAO,EAAGA,EAAOpT,EAAKoT,IACrBC,EAAYD,IAASC,EAAYD,GAAMb,YACzCD,EAAkBlS,EAAOiT,EAAYD,GAAMb,qCCxEjD,SAASe,EAAYlT,EAAOmS,GAC1B,IAAI7N,EACA6O,EACAC,EACA/M,EACArI,EACAqV,EAGJ,IAAK/O,EAFK6N,EAAW3jB,OAEN,EAAG8V,GAAK,EAAGA,IAGE,MAF1B6O,EAAahB,EAAW7N,IAETnE,QAAgD,KAAtBgT,EAAWhT,SAK5B,IAApBgT,EAAW1Z,MAIf2Z,EAAWjB,EAAWgB,EAAW1Z,KAOjC4Z,EAAW/O,EAAI,GACJ6N,EAAW7N,EAAI,GAAG7K,MAAQ0Z,EAAW1Z,IAAM,GAE3C0Y,EAAW7N,EAAI,GAAGnE,SAAWgT,EAAWhT,QACxCgS,EAAW7N,EAAI,GAAG+B,QAAU8M,EAAW9M,MAAQ,GAE/C8L,EAAWgB,EAAW1Z,IAAM,GAAG4M,QAAU+M,EAAS/M,MAAQ,EAErErI,EAAKV,OAAOC,aAAa4V,EAAWhT,SAEpCkG,EAAgBrG,EAAM+D,OAAOoP,EAAW9M,QAClCvX,KAAUukB,EAAW,cAAgB,UAC3ChN,EAAMwB,IAAUwL,EAAW,SAAW,KACtChN,EAAMuB,QAAU,EAChBvB,EAAM+D,OAAUiJ,EAAWrV,EAAKA,EAAKA,EACrCqI,EAAME,QAAU,IAEhBF,EAAgBrG,EAAM+D,OAAOqP,EAAS/M,QAChCvX,KAAUukB,EAAW,eAAiB,WAC5ChN,EAAMwB,IAAUwL,EAAW,SAAW,KACtChN,EAAMuB,SAAW,EACjBvB,EAAM+D,OAAUiJ,EAAWrV,EAAKA,EAAKA,EACrCqI,EAAME,QAAU,GAEZ8M,IACFrT,EAAM+D,OAAOoO,EAAW7N,EAAI,GAAG+B,OAAOE,QAAU,GAChDvG,EAAM+D,OAAOoO,EAAWgB,EAAW1Z,IAAM,GAAG4M,OAAOE,QAAU,GAC7DjC,MAtGNhT,EAAOC,QAAQ,EAAW,SAAkByO,EAAO8I,GACjD,IAAIxE,EAAGgP,EACH9Z,EAAQwG,EAAMpK,IACduK,EAASH,EAAMhB,IAAIL,WAAWnF,GAElC,GAAIsP,EAAU,OAAO,EAErB,GAAe,KAAX3I,GAAsC,KAAXA,EAA2B,OAAO,EAIjE,IAFAmT,EAAUtT,EAAMuT,WAAWvT,EAAMpK,IAAgB,KAAXuK,GAEjCmE,EAAI,EAAGA,EAAIgP,EAAQ9kB,OAAQ8V,IACdtE,EAAM1Q,KAAK,OAAQ,GAAI,GACjCiX,QAAUjJ,OAAOC,aAAa4C,GAEpCH,EAAMmS,WAAW7iB,KAAK,CAGpB6Q,OAAQA,EAIR3R,OAAQ8kB,EAAQ9kB,OAIhB6X,MAAQrG,EAAM+D,OAAOvV,OAAS,EAK9BiL,KAAS,EAKT1K,KAAQukB,EAAQE,SAChBxkB,MAAQskB,EAAQG,YAMpB,OAFAzT,EAAMpK,KAAO0d,EAAQ9kB,QAEd,GAmET8C,EAAOC,QAAQ,EAAc,SAAkByO,GAC7C,IAAIgT,EACAC,EAAcjT,EAAMiT,YACpBrT,EAAMI,EAAMiT,YAAYzkB,OAI5B,IAFA0kB,EAAYlT,EAAOA,EAAMmS,YAEpBa,EAAO,EAAGA,EAAOpT,EAAKoT,IACrBC,EAAYD,IAASC,EAAYD,GAAMb,YACzCe,EAAYlT,EAAOiT,EAAYD,GAAMb,2CC1H3C,IAAIxU,EAAoB,EAAQ,OAC5BZ,EAAoB,aACpBE,EAAoB,2BACpBE,EAAoB,uBAGpBuW,EAAa,uCACbC,EAAa,4BAGjBriB,EAAOC,QAAU,SAAgByO,EAAO8I,GACtC,IAAQpK,EAAMtI,EAAOR,EAAMoK,EAAMpK,IAAKgK,EAAMI,EAAMM,OAElD,GAAkC,KAA9BN,EAAMhB,IAAIL,WAAW/I,GAAwB,OAAO,EAExD,GAAIA,EAAM,EAAIgK,EAGZ,GAAW,KAFNI,EAAMhB,IAAIL,WAAW/I,EAAM,IAI9B,GADAQ,EAAQ4J,EAAMhB,IAAIrK,MAAMiB,GAAKQ,MAAMsd,GAOjC,OALK5K,IACHpK,EAAqC,MAA9BtI,EAAM,GAAG,GAAGyD,cAAwB+E,SAASxI,EAAM,GAAGzB,MAAM,GAAI,IAAMiK,SAASxI,EAAM,GAAI,IAChG4J,EAAMyF,SAAWxI,EAAkByB,GAAQvB,EAAcuB,GAAQvB,EAAc,QAEjF6C,EAAMpK,KAAOQ,EAAM,GAAG5H,QACf,OAIT,IADA4H,EAAQ4J,EAAMhB,IAAIrK,MAAMiB,GAAKQ,MAAMud,KAE7B5W,EAAIY,EAAUvH,EAAM,IAGtB,OAFK0S,IAAU9I,EAAMyF,SAAW9H,EAASvH,EAAM,KAC/C4J,EAAMpK,KAAOQ,EAAM,GAAG5H,QACf,EAQf,OAFKsa,IAAU9I,EAAMyF,SAAW,KAChCzF,EAAMpK,OACC,iCCtCT,IAJA,IAAIsJ,EAAU,iBAEV0U,EAAU,GAELtP,EAAI,EAAGA,EAAI,IAAKA,IAAOsP,EAAQtkB,KAAK,GAE7C,qCACGwH,MAAM,IAAIhC,SAAQ,SAAUkJ,GAAM4V,EAAQ5V,EAAGW,WAAW,IAAM,KAGjErN,EAAOC,QAAU,SAAgByO,EAAO8I,GACtC,IAAI9K,EAAIpI,EAAMoK,EAAMpK,IAAKgK,EAAMI,EAAMM,OAErC,GAAkC,KAA9BN,EAAMhB,IAAIL,WAAW/I,GAAwB,OAAO,EAIxD,KAFAA,EAEUgK,EAAK,CAGb,IAFA5B,EAAKgC,EAAMhB,IAAIL,WAAW/I,IAEjB,KAAuB,IAAhBge,EAAQ5V,GAGtB,OAFK8K,IAAU9I,EAAMyF,SAAWzF,EAAMhB,IAAIpJ,IAC1CoK,EAAMpK,KAAO,GACN,EAGT,GAAW,KAAPoI,EAAa,CAOf,IANK8K,GACH9I,EAAM1Q,KAAK,YAAa,KAAM,GAGhCsG,IAEOA,EAAMgK,IACX5B,EAAKgC,EAAMhB,IAAIL,WAAW/I,GACrBsJ,EAAQlB,KACbpI,IAIF,OADAoK,EAAMpK,IAAMA,GACL,GAMX,OAFKkT,IAAU9I,EAAMyF,SAAW,MAChCzF,EAAMpK,OACC,iCC7CT,IAAIgH,EAAc,WAUlBtL,EAAOC,QAAU,SAAqByO,EAAO8I,GAC3C,IAAI9K,EAAI5H,EAAOwJ,EACXhK,EAAMoK,EAAMpK,IAEhB,SAAKoK,EAAMQ,GAAGpG,QAAQuL,OAGtB/F,EAAMI,EAAMM,OACsB,KAA9BN,EAAMhB,IAAIL,WAAW/I,IACrBA,EAAM,GAAKgK,GAMJ,MADX5B,EAAKgC,EAAMhB,IAAIL,WAAW/I,EAAM,KAErB,KAAPoI,GACO,KAAPA,IAxBN,SAAkBA,GAEhB,IAAI6V,EAAU,GAAL7V,EACT,OAAQ6V,GAAM,IAAiBA,GAAM,IAsBhCC,CAAS9V,MAId5H,EAAQ4J,EAAMhB,IAAIrK,MAAMiB,GAAKQ,MAAMwG,MAG9BkM,IACa9I,EAAM1Q,KAAK,cAAe,GAAI,GACxCiX,QAAUvG,EAAMhB,IAAIrK,MAAMiB,EAAKA,EAAMQ,EAAM,GAAG5H,SAEtDwR,EAAMpK,KAAOQ,EAAM,GAAG5H,OACf,oCCzCT,IAAI8Q,EAAuB,4BACvBJ,EAAuB,iBAG3B5N,EAAOC,QAAU,SAAeyO,EAAO8I,GACrC,IAAI9B,EACAtI,EACA6H,EACAqG,EACAvM,EACA0T,EACAne,EACAoe,EACAnH,EACAC,EACAzG,EACAtC,EACAvK,EACAmT,EAAO,GACPpM,EAASP,EAAMpK,IACfgK,EAAMI,EAAMM,OAEhB,GAAwC,KAApCN,EAAMhB,IAAIL,WAAWqB,EAAMpK,KAAwB,OAAO,EAC9D,GAA4C,KAAxCoK,EAAMhB,IAAIL,WAAWqB,EAAMpK,IAAM,GAAsB,OAAO,EAMlE,GAJAme,EAAa/T,EAAMpK,IAAM,GACzByK,EAAWL,EAAMQ,GAAGI,QAAQnB,eAAeO,EAAOA,EAAMpK,IAAM,GAAG,IAGlD,EAAK,OAAO,EAG3B,IADAA,EAAMyK,EAAW,GACPT,GAAqC,KAA9BI,EAAMhB,IAAIL,WAAW/I,GAAsB,CAQ1D,IADAA,IACOA,EAAMgK,IACXlB,EAAOsB,EAAMhB,IAAIL,WAAW/I,GACvBsJ,EAAQR,IAAkB,KAATA,GAFN9I,KAIlB,GAAIA,GAAOgK,EAAO,OAAO,EAkBzB,IAdApG,EAAQ5D,GACRiX,EAAM7M,EAAMQ,GAAGI,QAAQlB,qBAAqBM,EAAMhB,IAAKpJ,EAAKoK,EAAMM,SAC1DR,KACN6M,EAAO3M,EAAMQ,GAAGkB,cAAcmL,EAAIze,KAC9B4R,EAAMQ,GAAGgB,aAAamL,GACxB/W,EAAMiX,EAAIjX,IAEV+W,EAAO,IAMXnT,EAAQ5D,EACDA,EAAMgK,IACXlB,EAAOsB,EAAMhB,IAAIL,WAAW/I,GACvBsJ,EAAQR,IAAkB,KAATA,GAFN9I,KAQlB,GADAiX,EAAM7M,EAAMQ,GAAGI,QAAQjB,eAAeK,EAAMhB,IAAKpJ,EAAKoK,EAAMM,QACxD1K,EAAMgK,GAAOpG,IAAU5D,GAAOiX,EAAI/M,GAMpC,IALAgN,EAAQD,EAAIze,IACZwH,EAAMiX,EAAIjX,IAIHA,EAAMgK,IACXlB,EAAOsB,EAAMhB,IAAIL,WAAW/I,GACvBsJ,EAAQR,IAAkB,KAATA,GAFN9I,UAKlBkX,EAAQ,GAGV,GAAIlX,GAAOgK,GAAqC,KAA9BI,EAAMhB,IAAIL,WAAW/I,GAErC,OADAoK,EAAMpK,IAAM2K,GACL,EAET3K,QACK,CAIL,QAAoC,IAAzBoK,EAAMtS,IAAIqf,WAA8B,OAAO,EAmB1D,GAjBInX,EAAMgK,GAAqC,KAA9BI,EAAMhB,IAAIL,WAAW/I,IACpC4D,EAAQ5D,EAAM,GACdA,EAAMoK,EAAMQ,GAAGI,QAAQnB,eAAeO,EAAOpK,KAClC,EACTgX,EAAQ5M,EAAMhB,IAAIrK,MAAM6E,EAAO5D,KAE/BA,EAAMyK,EAAW,GAGnBzK,EAAMyK,EAAW,EAKduM,IAASA,EAAQ5M,EAAMhB,IAAIrK,MAAMof,EAAY1T,MAElD2T,EAAMhU,EAAMtS,IAAIqf,WAAWzN,EAAmBsN,KAG5C,OADA5M,EAAMpK,IAAM2K,GACL,EAEToM,EAAOqH,EAAIrH,KACXG,EAAQkH,EAAIlH,MA6Bd,OAtBKhE,IACHvC,EAAUvG,EAAMhB,IAAIrK,MAAMof,EAAY1T,GAEtCL,EAAMQ,GAAGC,OAAOmB,MACd2E,EACAvG,EAAMQ,GACNR,EAAMtS,IACNqW,EAAS,KAGXsC,EAAiBrG,EAAM1Q,KAAK,QAAS,MAAO,IACtC0X,MAAWA,EAAQ,CAAE,CAAE,MAAO2F,GAAQ,CAAE,MAAO,KACrDtG,EAAMc,SAAWpD,EACjBsC,EAAME,QAAWA,EAEbuG,GACF9F,EAAM1X,KAAK,CAAE,QAASwd,KAI1B9M,EAAMpK,IAAMA,EACZoK,EAAMM,OAASV,GACR,iCClJT,IAAIN,EAAuB,4BACvBJ,EAAuB,iBAG3B5N,EAAOC,QAAU,SAAcyO,EAAO8I,GACpC,IAAI9B,EACAtI,EACAkO,EACAvM,EACA0T,EACAne,EACAiX,EACAmH,EAEArH,EAAO,GACPG,EAAQ,GACRvM,EAASP,EAAMpK,IACfgK,EAAMI,EAAMM,OACZ9G,EAAQwG,EAAMpK,IACdqe,GAAiB,EAErB,GAAwC,KAApCjU,EAAMhB,IAAIL,WAAWqB,EAAMpK,KAAwB,OAAO,EAM9D,GAJAme,EAAa/T,EAAMpK,IAAM,GACzByK,EAAWL,EAAMQ,GAAGI,QAAQnB,eAAeO,EAAOA,EAAMpK,KAAK,IAG9C,EAAK,OAAO,EAG3B,IADAA,EAAMyK,EAAW,GACPT,GAAqC,KAA9BI,EAAMhB,IAAIL,WAAW/I,GAAsB,CAW1D,IALAqe,GAAiB,EAIjBre,IACOA,EAAMgK,IACXlB,EAAOsB,EAAMhB,IAAIL,WAAW/I,GACvBsJ,EAAQR,IAAkB,KAATA,GAFN9I,KAIlB,GAAIA,GAAOgK,EAAO,OAAO,EAMzB,GAFApG,EAAQ5D,GACRiX,EAAM7M,EAAMQ,GAAGI,QAAQlB,qBAAqBM,EAAMhB,IAAKpJ,EAAKoK,EAAMM,SAC1DR,GAAI,CAWV,IAVA6M,EAAO3M,EAAMQ,GAAGkB,cAAcmL,EAAIze,KAC9B4R,EAAMQ,GAAGgB,aAAamL,GACxB/W,EAAMiX,EAAIjX,IAEV+W,EAAO,GAKTnT,EAAQ5D,EACDA,EAAMgK,IACXlB,EAAOsB,EAAMhB,IAAIL,WAAW/I,GACvBsJ,EAAQR,IAAkB,KAATA,GAFN9I,KAQlB,GADAiX,EAAM7M,EAAMQ,GAAGI,QAAQjB,eAAeK,EAAMhB,IAAKpJ,EAAKoK,EAAMM,QACxD1K,EAAMgK,GAAOpG,IAAU5D,GAAOiX,EAAI/M,GAMpC,IALAgN,EAAQD,EAAIze,IACZwH,EAAMiX,EAAIjX,IAIHA,EAAMgK,IACXlB,EAAOsB,EAAMhB,IAAIL,WAAW/I,GACvBsJ,EAAQR,IAAkB,KAATA,GAFN9I,OAOlBA,GAAOgK,GAAqC,KAA9BI,EAAMhB,IAAIL,WAAW/I,MAErCqe,GAAiB,GAEnBre,IAGF,GAAIqe,EAAgB,CAIlB,QAAoC,IAAzBjU,EAAMtS,IAAIqf,WAA8B,OAAO,EAmB1D,GAjBInX,EAAMgK,GAAqC,KAA9BI,EAAMhB,IAAIL,WAAW/I,IACpC4D,EAAQ5D,EAAM,GACdA,EAAMoK,EAAMQ,GAAGI,QAAQnB,eAAeO,EAAOpK,KAClC,EACTgX,EAAQ5M,EAAMhB,IAAIrK,MAAM6E,EAAO5D,KAE/BA,EAAMyK,EAAW,GAGnBzK,EAAMyK,EAAW,EAKduM,IAASA,EAAQ5M,EAAMhB,IAAIrK,MAAMof,EAAY1T,MAElD2T,EAAMhU,EAAMtS,IAAIqf,WAAWzN,EAAmBsN,KAG5C,OADA5M,EAAMpK,IAAM2K,GACL,EAEToM,EAAOqH,EAAIrH,KACXG,EAAQkH,EAAIlH,MAwBd,OAjBKhE,IACH9I,EAAMpK,IAAMme,EACZ/T,EAAMM,OAASD,EAEAL,EAAM1Q,KAAK,YAAa,IAAK,GACtC0X,MAASA,EAAQ,CAAE,CAAE,OAAQ2F,IAC/BG,GACF9F,EAAM1X,KAAK,CAAE,QAASwd,IAGxB9M,EAAMQ,GAAGC,OAAO+D,SAASxE,GAEVA,EAAM1Q,KAAK,aAAc,KAAM,IAGhD0Q,EAAMpK,IAAMA,EACZoK,EAAMM,OAASV,GACR,iCC9IT,IAAIV,EAAU,iBAGd5N,EAAOC,QAAU,SAAiByO,EAAO8I,GACvC,IAAIoL,EAAMtU,EAAKuU,EAAIve,EAAMoK,EAAMpK,IAE/B,GAAkC,KAA9BoK,EAAMhB,IAAIL,WAAW/I,GAAyB,OAAO,EASzD,GAPAse,EAAOlU,EAAMyF,QAAQjX,OAAS,EAC9BoR,EAAMI,EAAMM,QAMPwI,EACH,GAAIoL,GAAQ,GAAwC,KAAnClU,EAAMyF,QAAQ9G,WAAWuV,GACxC,GAAIA,GAAQ,GAA4C,KAAvClU,EAAMyF,QAAQ9G,WAAWuV,EAAO,GAAa,CAG5D,IADAC,EAAKD,EAAO,EACLC,GAAM,GAA0C,KAArCnU,EAAMyF,QAAQ9G,WAAWwV,EAAK,IAAaA,IAE7DnU,EAAMyF,QAAUzF,EAAMyF,QAAQ9Q,MAAM,EAAGwf,GACvCnU,EAAM1Q,KAAK,YAAa,KAAM,QAE9B0Q,EAAMyF,QAAUzF,EAAMyF,QAAQ9Q,MAAM,GAAI,GACxCqL,EAAM1Q,KAAK,YAAa,KAAM,QAIhC0Q,EAAM1Q,KAAK,YAAa,KAAM,GAOlC,IAHAsG,IAGOA,EAAMgK,GAAOV,EAAQc,EAAMhB,IAAIL,WAAW/I,KAASA,IAG1D,OADAoK,EAAMpK,IAAMA,GACL,iCCvCT,IAAIoX,EAAiB,EAAQ,OACzB7N,EAAiB,sBACjBE,EAAiB,qBACjBD,EAAiB,wBAGrB,SAASgV,EAAYpV,EAAKwB,EAAI9S,EAAKyX,GACjClV,KAAK+O,IAAMA,EACX/O,KAAKvC,IAAMA,EACXuC,KAAKuQ,GAAKA,EACVvQ,KAAK8T,OAASoB,EACdlV,KAAKgjB,YAAcpiB,MAAMsU,EAAU3W,QAEnCyB,KAAK2F,IAAM,EACX3F,KAAKqQ,OAASrQ,KAAK+O,IAAIxQ,OACvByB,KAAK4P,MAAQ,EACb5P,KAAKwV,QAAU,GACfxV,KAAKokB,aAAe,EAIpBpkB,KAAKuV,MAAQ,GAGbvV,KAAKkiB,WAAa,GAGlBliB,KAAKqkB,iBAAmB,GAGxBrkB,KAAKgiB,UAAY,GACjBhiB,KAAK+hB,kBAAmB,EAM1BoC,EAAY1f,UAAUgR,YAAc,WAClC,IAAIW,EAAQ,IAAI2G,EAAM,OAAQ,GAAI,GAKlC,OAJA3G,EAAME,QAAUtW,KAAKwV,QACrBY,EAAMxG,MAAQ5P,KAAKokB,aACnBpkB,KAAK8T,OAAOzU,KAAK+W,GACjBpW,KAAKwV,QAAU,GACRY,GAOT+N,EAAY1f,UAAUpF,KAAO,SAAUR,EAAM+Y,EAAKD,GAC5C3X,KAAKwV,SACPxV,KAAKyV,cAGP,IAAIW,EAAQ,IAAI2G,EAAMle,EAAM+Y,EAAKD,GAC7B2M,EAAa,KAqBjB,OAnBI3M,EAAU,IAEZ3X,KAAK4P,QACL5P,KAAKkiB,WAAaliB,KAAKqkB,iBAAiB3F,OAG1CtI,EAAMxG,MAAQ5P,KAAK4P,MAEf+H,EAAU,IAEZ3X,KAAK4P,QACL5P,KAAKqkB,iBAAiBhlB,KAAKW,KAAKkiB,YAChCliB,KAAKkiB,WAAa,GAClBoC,EAAa,CAAEpC,WAAYliB,KAAKkiB,aAGlCliB,KAAKokB,aAAepkB,KAAK4P,MACzB5P,KAAK8T,OAAOzU,KAAK+W,GACjBpW,KAAKgjB,YAAY3jB,KAAKilB,GACflO,GAUT+N,EAAY1f,UAAU6e,WAAa,SAAU/Z,EAAOgb,GAClD,IAAiB5D,EAAUC,EAAU4D,EAAOjB,EAAUC,EAClDzC,EAAkBF,EAClBG,EAAkBF,EAFlBnb,EAAM4D,EAGNkb,GAAgB,EAChBC,GAAiB,EACjB/U,EAAM3P,KAAKqQ,OACXH,EAASlQ,KAAK+O,IAAIL,WAAWnF,GAKjC,IAFAoX,EAAWpX,EAAQ,EAAIvJ,KAAK+O,IAAIL,WAAWnF,EAAQ,GAAK,GAEjD5D,EAAMgK,GAAO3P,KAAK+O,IAAIL,WAAW/I,KAASuK,GAAUvK,IAqC3D,OAnCA6e,EAAQ7e,EAAM4D,EAGdqX,EAAWjb,EAAMgK,EAAM3P,KAAK+O,IAAIL,WAAW/I,GAAO,GAElDkb,EAAkB1R,EAAewR,IAAavR,EAAY/B,OAAOC,aAAaqT,IAC9EG,EAAkB3R,EAAeyR,IAAaxR,EAAY/B,OAAOC,aAAasT,IAE9EG,EAAmB7R,EAAayR,IAChCK,EAAmB9R,EAAa0R,IAG9B6D,GAAgB,EACP3D,IACHC,GAAoBF,IACxB4D,GAAgB,IAIhB1D,EACF2D,GAAiB,EACR7D,IACHG,GAAoBF,IACxB4D,GAAiB,IAIhBH,GAIHhB,EAAYkB,EACZjB,EAAYkB,IAJZnB,EAAYkB,KAAoBC,GAAkB7D,GAClD2C,EAAYkB,KAAoBD,GAAkB3D,IAM7C,CACLyC,SAAWA,EACXC,UAAWA,EACXjlB,OAAWimB,IAMfL,EAAY1f,UAAUsY,MAAQA,EAG9B1b,EAAOC,QAAU6iB,0BCzGjB,SAASlB,EAAYlT,EAAOmS,GAC1B,IAAI7N,EAAGwK,EACHqE,EACAC,EACA/M,EACAuO,EAAc,GACdhV,EAAMuS,EAAW3jB,OAErB,IAAK8V,EAAI,EAAGA,EAAI1E,EAAK0E,IAGO,OAF1B6O,EAAahB,EAAW7N,IAETnE,SAIS,IAApBgT,EAAW1Z,MAIf2Z,EAAWjB,EAAWgB,EAAW1Z,MAEjC4M,EAAgBrG,EAAM+D,OAAOoP,EAAW9M,QAClCvX,KAAU,SAChBuX,EAAMwB,IAAU,IAChBxB,EAAMuB,QAAU,EAChBvB,EAAM+D,OAAU,KAChB/D,EAAME,QAAU,IAEhBF,EAAgBrG,EAAM+D,OAAOqP,EAAS/M,QAChCvX,KAAU,UAChBuX,EAAMwB,IAAU,IAChBxB,EAAMuB,SAAW,EACjBvB,EAAM+D,OAAU,KAChB/D,EAAME,QAAU,GAE8B,SAA1CvG,EAAM+D,OAAOqP,EAAS/M,MAAQ,GAAGvX,MACY,MAA7CkR,EAAM+D,OAAOqP,EAAS/M,MAAQ,GAAGE,SAEnCqO,EAAYtlB,KAAK8jB,EAAS/M,MAAQ,IAUtC,KAAOuO,EAAYpmB,QAAQ,CAIzB,IAFAsgB,GADAxK,EAAIsQ,EAAYjG,OACR,EAEDG,EAAI9O,EAAM+D,OAAOvV,QAAmC,YAAzBwR,EAAM+D,OAAO+K,GAAGhgB,MAChDggB,IAKExK,MAFJwK,IAGEzI,EAAQrG,EAAM+D,OAAO+K,GACrB9O,EAAM+D,OAAO+K,GAAK9O,EAAM+D,OAAOO,GAC/BtE,EAAM+D,OAAOO,GAAK+B,IAtGxB/U,EAAOC,QAAQ,EAAW,SAAuByO,EAAO8I,GACtD,IAAIxE,EAAGgP,EAAgBxY,EAAKkD,EACxBxE,EAAQwG,EAAMpK,IACduK,EAASH,EAAMhB,IAAIL,WAAWnF,GAElC,GAAIsP,EAAU,OAAO,EAErB,GAAe,MAAX3I,EAA0B,OAAO,EAMrC,GAHArF,GADAwY,EAAUtT,EAAMuT,WAAWvT,EAAMpK,KAAK,IACxBpH,OACdwP,EAAKV,OAAOC,aAAa4C,GAErBrF,EAAM,EAAK,OAAO,EAQtB,IANIA,EAAM,IACQkF,EAAM1Q,KAAK,OAAQ,GAAI,GACjCiX,QAAUvI,EAChBlD,KAGGwJ,EAAI,EAAGA,EAAIxJ,EAAKwJ,GAAK,EACRtE,EAAM1Q,KAAK,OAAQ,GAAI,GACjCiX,QAAUvI,EAAKA,EAErBgC,EAAMmS,WAAW7iB,KAAK,CACpB6Q,OAAQA,EACR3R,OAAQ,EACR6X,MAAQrG,EAAM+D,OAAOvV,OAAS,EAC9BiL,KAAS,EACT1K,KAAQukB,EAAQE,SAChBxkB,MAAQskB,EAAQG,YAMpB,OAFAzT,EAAMpK,KAAO0d,EAAQ9kB,QAEd,GAyET8C,EAAOC,QAAQ,EAAc,SAAuByO,GAClD,IAAIgT,EACAC,EAAcjT,EAAMiT,YACpBrT,EAAMI,EAAMiT,YAAYzkB,OAI5B,IAFA0kB,EAAYlT,EAAOA,EAAMmS,YAEpBa,EAAO,EAAGA,EAAOpT,EAAKoT,IACrBC,EAAYD,IAASC,EAAYD,GAAMb,YACzCe,EAAYlT,EAAOiT,EAAYD,GAAMb,qCCjH3C,SAAS0C,EAAiB7W,GACxB,OAAQA,GACN,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,IACL,KAAK,IACH,OAAO,EACT,QACE,OAAO,GAIb1M,EAAOC,QAAU,SAAcyO,EAAO8I,GAGpC,IAFA,IAAIlT,EAAMoK,EAAMpK,IAETA,EAAMoK,EAAMM,SAAWuU,EAAiB7U,EAAMhB,IAAIL,WAAW/I,KAClEA,IAGF,OAAIA,IAAQoK,EAAMpK,MAEbkT,IAAU9I,EAAMyF,SAAWzF,EAAMhB,IAAIrK,MAAMqL,EAAMpK,IAAKA,IAE3DoK,EAAMpK,IAAMA,GAEL,4BC9CTtE,EAAOC,QAAU,SAAuByO,GACtC,IAAIgT,EAAM3I,EACNxK,EAAQ,EACRkE,EAAS/D,EAAM+D,OACfnE,EAAMI,EAAM+D,OAAOvV,OAEvB,IAAKwkB,EAAO3I,EAAO,EAAG2I,EAAOpT,EAAKoT,IAG5BjP,EAAOiP,GAAMpL,QAAU,GAAG/H,IAC9BkE,EAAOiP,GAAMnT,MAAQA,EACjBkE,EAAOiP,GAAMpL,QAAU,GAAG/H,IAEJ,SAAtBkE,EAAOiP,GAAMlkB,MACbkkB,EAAO,EAAIpT,GACe,SAA1BmE,EAAOiP,EAAO,GAAGlkB,KAGnBiV,EAAOiP,EAAO,GAAGzM,QAAUxC,EAAOiP,GAAMzM,QAAUxC,EAAOiP,EAAO,GAAGzM,SAE/DyM,IAAS3I,IAAQtG,EAAOsG,GAAQtG,EAAOiP,IAE3C3I,KAIA2I,IAAS3I,IACXtG,EAAOvV,OAAS6b,4BCxBpB,SAAS2C,EAAMle,EAAM+Y,EAAKD,GAMxB3X,KAAKnB,KAAWA,EAOhBmB,KAAK4X,IAAWA,EAOhB5X,KAAK+W,MAAW,KAOhB/W,KAAK6I,IAAW,KAWhB7I,KAAK2X,QAAWA,EAOhB3X,KAAK4P,MAAW,EAOhB5P,KAAKkX,SAAW,KAQhBlX,KAAKsW,QAAW,GAOhBtW,KAAKma,OAAW,GAWhBna,KAAK6D,KAAW,GAOhB7D,KAAK6kB,KAAW,KAQhB7kB,KAAKwS,OAAW,EAQhBxS,KAAK0X,QAAW,EASlBqF,EAAMtY,UAAUqS,UAAY,SAAmBnY,GAC7C,IAAIoY,EAAO1C,EAAGxJ,EAEd,IAAK7K,KAAK+W,MAAS,OAAQ,EAI3B,IAAK1C,EAAI,EAAGxJ,GAFZkM,EAAQ/W,KAAK+W,OAEWxY,OAAQ8V,EAAIxJ,EAAKwJ,IACvC,GAAI0C,EAAM1C,GAAG,KAAO1V,EAAQ,OAAO0V,EAErC,OAAQ,GASV0I,EAAMtY,UAAUqgB,SAAW,SAAkBC,GACvC/kB,KAAK+W,MACP/W,KAAK+W,MAAM1X,KAAK0lB,GAEhB/kB,KAAK+W,MAAQ,CAAEgO,IAUnBhI,EAAMtY,UAAUugB,QAAU,SAAiBrmB,EAAMgB,GAC/C,IAAI8L,EAAMzL,KAAK8W,UAAUnY,GACrBomB,EAAW,CAAEpmB,EAAMgB,GAEnB8L,EAAM,EACRzL,KAAK8kB,SAASC,GAEd/kB,KAAK+W,MAAMtL,GAAOsZ,GAUtBhI,EAAMtY,UAAUwgB,QAAU,SAAiBtmB,GACzC,IAAI8M,EAAMzL,KAAK8W,UAAUnY,GAAOgB,EAAQ,KAIxC,OAHI8L,GAAO,IACT9L,EAAQK,KAAK+W,MAAMtL,GAAK,IAEnB9L,GAUTod,EAAMtY,UAAUygB,SAAW,SAAkBvmB,EAAMgB,GACjD,IAAI8L,EAAMzL,KAAK8W,UAAUnY,GAErB8M,EAAM,EACRzL,KAAK8kB,SAAS,CAAEnmB,EAAMgB,IAEtBK,KAAK+W,MAAMtL,GAAK,GAAKzL,KAAK+W,MAAMtL,GAAK,GAAK,IAAM9L,GAKpD0B,EAAOC,QAAUyb,0BClMjB,IAAIoI,EAAc,GAwBlB,SAAS/S,EAAOgT,EAAQC,GACtB,IAAI9P,EAQJ,MANuB,iBAAZ8P,IACTA,EAAUjT,EAAOC,cAGnBkD,EA7BF,SAAwB8P,GACtB,IAAIhR,EAAGtG,EAAIwH,EAAQ4P,EAAYE,GAC/B,GAAI9P,EAAS,OAAOA,EAIpB,IAFAA,EAAQ4P,EAAYE,GAAW,GAE1BhR,EAAI,EAAGA,EAAI,IAAKA,IACnBtG,EAAKV,OAAOC,aAAa+G,GACzBkB,EAAMlW,KAAK0O,GAGb,IAAKsG,EAAI,EAAGA,EAAIgR,EAAQ9mB,OAAQ8V,IAE9BkB,EADAxH,EAAKsX,EAAQ3W,WAAW2F,IACZ,KAAO,IAAMtG,EAAG9I,SAAS,IAAIsK,eAAe7K,OAAO,GAGjE,OAAO6Q,EAaC+P,CAAeD,GAEhBD,EAAOlmB,QAAQ,qBAAqB,SAASqmB,GAClD,IAAIlR,EAAGgB,EAAGmQ,EAAIC,EAAIC,EAAIC,EAAIC,EACtBxa,EAAS,GAEb,IAAKiJ,EAAI,EAAGgB,EAAIkQ,EAAIhnB,OAAQ8V,EAAIgB,EAAGhB,GAAK,GACtCmR,EAAK7W,SAAS4W,EAAI7gB,MAAM2P,EAAI,EAAGA,EAAI,GAAI,KAE9B,IACPjJ,GAAUmK,EAAMiQ,GAIE,MAAV,IAALA,IAAwBnR,EAAI,EAAIgB,GAIf,MAAV,KAFVoQ,EAAK9W,SAAS4W,EAAI7gB,MAAM2P,EAAI,EAAGA,EAAI,GAAI,OAMnCjJ,IAHFwa,EAAQJ,GAAM,EAAK,KAAe,GAALC,GAEnB,IACE,KAEApY,OAAOC,aAAasY,GAGhCvR,GAAK,GAKW,MAAV,IAALmR,IAAwBnR,EAAI,EAAIgB,IAEnCoQ,EAAK9W,SAAS4W,EAAI7gB,MAAM2P,EAAI,EAAGA,EAAI,GAAI,IACvCqR,EAAK/W,SAAS4W,EAAI7gB,MAAM2P,EAAI,EAAGA,EAAI,GAAI,IAEnB,MAAV,IAALoR,IAAuC,MAAV,IAALC,KAIzBta,IAHFwa,EAAQJ,GAAM,GAAM,MAAYC,GAAM,EAAK,KAAe,GAALC,GAE3C,MAAUE,GAAO,OAAUA,GAAO,MAChC,MAEAvY,OAAOC,aAAasY,GAGhCvR,GAAK,GAKW,MAAV,IAALmR,IAAwBnR,EAAI,EAAIgB,IAEnCoQ,EAAK9W,SAAS4W,EAAI7gB,MAAM2P,EAAI,EAAGA,EAAI,GAAI,IACvCqR,EAAK/W,SAAS4W,EAAI7gB,MAAM2P,EAAI,EAAGA,EAAI,GAAI,IACvCsR,EAAKhX,SAAS4W,EAAI7gB,MAAM2P,EAAI,GAAIA,EAAI,IAAK,IAErB,MAAV,IAALoR,IAAuC,MAAV,IAALC,IAAuC,MAAV,IAALC,MACnDC,EAAQJ,GAAM,GAAM,QAAcC,GAAM,GAAM,OAAaC,GAAM,EAAK,KAAe,GAALC,GAEtE,OAAWC,EAAM,QACzBxa,GAAU,QAEVwa,GAAO,MACPxa,GAAUiC,OAAOC,aAAa,OAAUsY,GAAO,IAAK,OAAgB,KAANA,KAGhEvR,GAAK,GAKTjJ,GAAU,IAGZ,OAAOA,KAKXgH,EAAOC,aAAiB,cACxBD,EAAOyT,eAAiB,GAGxBxkB,EAAOC,QAAU8Q,yBCrHjB,IAAI0T,EAAc,GAsClB,SAAS9T,EAAOoT,EAAQC,EAASU,GAC/B,IAAI1R,EAAGgB,EAAG5G,EAAMuX,EAAUzQ,EACtBnK,EAAS,GAcb,IAZuB,iBAAZia,IAETU,EAAeV,EACfA,EAAUrT,EAAOK,mBAGQ,IAAhB0T,IACTA,GAAc,GAGhBxQ,EA9CF,SAAwB8P,GACtB,IAAIhR,EAAGtG,EAAIwH,EAAQuQ,EAAYT,GAC/B,GAAI9P,EAAS,OAAOA,EAIpB,IAFAA,EAAQuQ,EAAYT,GAAW,GAE1BhR,EAAI,EAAGA,EAAI,IAAKA,IACnBtG,EAAKV,OAAOC,aAAa+G,GAErB,cAAc/T,KAAKyN,GAErBwH,EAAMlW,KAAK0O,GAEXwH,EAAMlW,KAAK,KAAO,IAAMgV,EAAEpP,SAAS,IAAIsK,eAAe7K,OAAO,IAIjE,IAAK2P,EAAI,EAAGA,EAAIgR,EAAQ9mB,OAAQ8V,IAC9BkB,EAAM8P,EAAQ3W,WAAW2F,IAAMgR,EAAQhR,GAGzC,OAAOkB,EAyBC0Q,CAAeZ,GAElBhR,EAAI,EAAGgB,EAAI+P,EAAO7mB,OAAQ8V,EAAIgB,EAAGhB,IAGpC,GAFA5F,EAAO2W,EAAO1W,WAAW2F,GAErB0R,GAAwB,KAATtX,GAAyB4F,EAAI,EAAIgB,GAC9C,iBAAiB/U,KAAK8kB,EAAO1gB,MAAM2P,EAAI,EAAGA,EAAI,IAChDjJ,GAAUga,EAAO1gB,MAAM2P,EAAGA,EAAI,GAC9BA,GAAK,OAKT,GAAI5F,EAAO,IACTrD,GAAUmK,EAAM9G,QAIlB,GAAIA,GAAQ,OAAUA,GAAQ,MAA9B,CACE,GAAIA,GAAQ,OAAUA,GAAQ,OAAU4F,EAAI,EAAIgB,IAC9C2Q,EAAWZ,EAAO1W,WAAW2F,EAAI,KACjB,OAAU2R,GAAY,MAAQ,CAC5C5a,GAAU8a,mBAAmBd,EAAO/Q,GAAK+Q,EAAO/Q,EAAI,IACpDA,IACA,SAGJjJ,GAAU,iBAIZA,GAAU8a,mBAAmBd,EAAO/Q,IAGtC,OAAOjJ,EAGT4G,EAAOK,aAAiB,uBACxBL,EAAO6T,eAAiB,YAGxBxkB,EAAOC,QAAU0Q,0BC7FjB3Q,EAAOC,QAAU,SAAgByI,GAC/B,IAAIqB,EAAS,GAkBb,OAhBAA,GAAUrB,EAAI8H,UAAY,GAC1BzG,GAAUrB,EAAIoc,QAAU,KAAO,GAC/B/a,GAAUrB,EAAIqc,KAAOrc,EAAIqc,KAAO,IAAM,GAElCrc,EAAI6H,WAA2C,IAA/B7H,EAAI6H,SAASzG,QAAQ,KAEvCC,GAAU,IAAMrB,EAAI6H,SAAW,IAE/BxG,GAAUrB,EAAI6H,UAAY,GAG5BxG,GAAUrB,EAAIsc,KAAO,IAAMtc,EAAIsc,KAAO,GACtCjb,GAAUrB,EAAIuc,UAAY,IAC1Blb,GAAUrB,EAAImB,QAAU,KACdnB,EAAIwc,MAAQ,mCClBxBllB,EAAOC,QAAQ0Q,OAAS,EAAxB,MACA3Q,EAAOC,QAAQ8Q,OAAS,EAAxB,OACA/Q,EAAOC,QAAQ2Q,OAAS,EAAxB,OACA5Q,EAAOC,QAAQqQ,MAAf,iCCuCA,SAAS6U,IACPxmB,KAAK6R,SAAW,KAChB7R,KAAKmmB,QAAU,KACfnmB,KAAKomB,KAAO,KACZpmB,KAAKqmB,KAAO,KACZrmB,KAAK4R,SAAW,KAChB5R,KAAKumB,KAAO,KACZvmB,KAAKkL,OAAS,KACdlL,KAAKsmB,SAAW,KAOlB,IAAIG,EAAkB,oBAClBC,EAAc,WAGdC,EAAoB,qCAOpBC,EAAS,CAAE,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM3mB,OAHlC,CAAE,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,OAMhD4mB,EAAa,CAAE,KAAO5mB,OAAO2mB,GAK7BE,EAAe,CAAE,IAAK,IAAK,IAAK,IAAK,KAAM7mB,OAAO4mB,GAClDE,EAAkB,CAAE,IAAK,IAAK,KAE9BC,EAAsB,yBACtBC,EAAoB,+BAIpBC,EAAmB,CACjB,YAAc,EACd,eAAe,GAGjBC,EAAkB,CAChB,MAAQ,EACR,OAAS,EACT,KAAO,EACP,QAAU,EACV,MAAQ,EACR,SAAS,EACT,UAAU,EACV,QAAQ,EACR,WAAW,EACX,SAAS,GAYfX,EAAI/hB,UAAUkN,MAAQ,SAAS5H,EAAKqd,GAClC,IAAI/S,EAAGgB,EAAGgS,EAAYC,EAAKnB,EACvBoB,EAAOxd,EAMX,GAFAwd,EAAOA,EAAKjY,QAEP8X,GAA+C,IAA1Brd,EAAIlD,MAAM,KAAKtI,OAAc,CAErD,IAAIipB,EAAab,EAAkB3b,KAAKuc,GACxC,GAAIC,EAKF,OAJAxnB,KAAKsmB,SAAWkB,EAAW,GACvBA,EAAW,KACbxnB,KAAKkL,OAASsc,EAAW,IAEpBxnB,KAIX,IAAIynB,EAAQhB,EAAgBzb,KAAKuc,GAoBjC,GAnBIE,IAEFJ,GADAI,EAAQA,EAAM,IACK7d,cACnB5J,KAAK6R,SAAW4V,EAChBF,EAAOA,EAAK3J,OAAO6J,EAAMlpB,UAOvB6oB,GAAqBK,GAASF,EAAKphB,MAAM,6BAC3CggB,EAAgC,OAAtBoB,EAAK3J,OAAO,EAAG,KACR6J,GAASP,EAAiBO,KACzCF,EAAOA,EAAK3J,OAAO,GACnB5d,KAAKmmB,SAAU,KAIde,EAAiBO,KACjBtB,GAAYsB,IAAUN,EAAgBM,IAAU,CAkBnD,IAUIrB,EAAMsB,EAVNC,GAAW,EACf,IAAKtT,EAAI,EAAGA,EAAI0S,EAAgBxoB,OAAQ8V,KAEzB,KADbiT,EAAMC,EAAKpc,QAAQ4b,EAAgB1S,QACH,IAAbsT,GAAkBL,EAAMK,KACzCA,EAAUL,GA0Bd,KARgB,KATdI,GAFe,IAAbC,EAEOJ,EAAKK,YAAY,KAIjBL,EAAKK,YAAY,IAAKD,MAM/BvB,EAAOmB,EAAK7iB,MAAM,EAAGgjB,GACrBH,EAAOA,EAAK7iB,MAAMgjB,EAAS,GAC3B1nB,KAAKomB,KAAOA,GAIduB,GAAW,EACNtT,EAAI,EAAGA,EAAIyS,EAAavoB,OAAQ8V,KAEtB,KADbiT,EAAMC,EAAKpc,QAAQ2b,EAAazS,QACA,IAAbsT,GAAkBL,EAAMK,KACzCA,EAAUL,IAIG,IAAbK,IACFA,EAAUJ,EAAKhpB,QAGS,MAAtBgpB,EAAKI,EAAU,IAAcA,IACjC,IAAIE,EAAON,EAAK7iB,MAAM,EAAGijB,GACzBJ,EAAOA,EAAK7iB,MAAMijB,GAGlB3nB,KAAK8nB,UAAUD,GAIf7nB,KAAK4R,SAAW5R,KAAK4R,UAAY,GAIjC,IAAImW,EAAoC,MAArB/nB,KAAK4R,SAAS,IACe,MAA5C5R,KAAK4R,SAAS5R,KAAK4R,SAASrT,OAAS,GAGzC,IAAKwpB,EAAc,CACjB,IAAIC,EAAYhoB,KAAK4R,SAAS/K,MAAM,MACpC,IAAKwN,EAAI,EAAGgB,EAAI2S,EAAUzpB,OAAQ8V,EAAIgB,EAAGhB,IAAK,CAC5C,IAAI4T,EAAOD,EAAU3T,GACrB,GAAK4T,IACAA,EAAK9hB,MAAM6gB,GAAsB,CAEpC,IADA,IAAIkB,EAAU,GACLrJ,EAAI,EAAGvU,EAAI2d,EAAK1pB,OAAQsgB,EAAIvU,EAAGuU,IAClCoJ,EAAKvZ,WAAWmQ,GAAK,IAIvBqJ,GAAW,IAEXA,GAAWD,EAAKpJ,GAIpB,IAAKqJ,EAAQ/hB,MAAM6gB,GAAsB,CACvC,IAAImB,EAAaH,EAAUtjB,MAAM,EAAG2P,GAChC+T,EAAUJ,EAAUtjB,MAAM2P,EAAI,GAC9BgU,EAAMJ,EAAK9hB,MAAM8gB,GACjBoB,IACFF,EAAW9oB,KAAKgpB,EAAI,IACpBD,EAAQE,QAAQD,EAAI,KAElBD,EAAQ7pB,SACVgpB,EAAOa,EAAQ5gB,KAAK,KAAO+f,GAE7BvnB,KAAK4R,SAAWuW,EAAW3gB,KAAK,KAChC,SAMJxH,KAAK4R,SAASrT,OA1LD,MA2LfyB,KAAK4R,SAAW,IAKdmW,IACF/nB,KAAK4R,SAAW5R,KAAK4R,SAASgM,OAAO,EAAG5d,KAAK4R,SAASrT,OAAS,IAKnE,IAAIgoB,EAAOgB,EAAKpc,QAAQ,MACV,IAAVob,IAEFvmB,KAAKumB,KAAOgB,EAAK3J,OAAO2I,GACxBgB,EAAOA,EAAK7iB,MAAM,EAAG6hB,IAEvB,IAAIgC,EAAKhB,EAAKpc,QAAQ,KAWtB,OAVY,IAARod,IACFvoB,KAAKkL,OAASqc,EAAK3J,OAAO2K,GAC1BhB,EAAOA,EAAK7iB,MAAM,EAAG6jB,IAEnBhB,IAAQvnB,KAAKsmB,SAAWiB,GACxBJ,EAAgBE,IAChBrnB,KAAK4R,WAAa5R,KAAKsmB,WACzBtmB,KAAKsmB,SAAW,IAGXtmB,MAGTwmB,EAAI/hB,UAAUqjB,UAAY,SAASD,GACjC,IAAIxB,EAAOK,EAAY1b,KAAK6c,GACxBxB,IAEW,OADbA,EAAOA,EAAK,MAEVrmB,KAAKqmB,KAAOA,EAAKzI,OAAO,IAE1BiK,EAAOA,EAAKjK,OAAO,EAAGiK,EAAKtpB,OAAS8nB,EAAK9nB,SAEvCspB,IAAQ7nB,KAAK4R,SAAWiW,IAG9BxmB,EAAOC,QA7MP,SAAkByI,EAAKqd,GACrB,GAAIrd,GAAOA,aAAeyc,EAAO,OAAOzc,EAExC,IAAIye,EAAI,IAAIhC,EAEZ,OADAgC,EAAE7W,MAAM5H,EAAKqd,GACNoB,gDCrFT,SAASC,EAAWC,GAClB,GAAoB,iBAATA,EACT,MAAM,IAAIloB,UAAU,mCAAqCmoB,KAAKC,UAAUF,IAK5E,SAASG,EAAqBH,EAAMI,GAMlC,IALA,IAIIra,EAJAmO,EAAM,GACNmM,EAAoB,EACpBC,GAAa,EACbC,EAAO,EAEF5U,EAAI,EAAGA,GAAKqU,EAAKnqB,SAAU8V,EAAG,CACrC,GAAIA,EAAIqU,EAAKnqB,OACXkQ,EAAOia,EAAKha,WAAW2F,OACpB,IAAa,KAAT5F,EACP,MAEAA,EAAO,GACT,GAAa,KAATA,EAAmB,CACrB,GAAIua,IAAc3U,EAAI,GAAc,IAAT4U,QAEpB,GAAID,IAAc3U,EAAI,GAAc,IAAT4U,EAAY,CAC5C,GAAIrM,EAAIre,OAAS,GAA2B,IAAtBwqB,GAA8D,KAAnCnM,EAAIlO,WAAWkO,EAAIre,OAAS,IAAsD,KAAnCqe,EAAIlO,WAAWkO,EAAIre,OAAS,GAC1H,GAAIqe,EAAIre,OAAS,EAAG,CAClB,IAAI2qB,EAAiBtM,EAAIgL,YAAY,KACrC,GAAIsB,IAAmBtM,EAAIre,OAAS,EAAG,EACb,IAApB2qB,GACFtM,EAAM,GACNmM,EAAoB,GAGpBA,GADAnM,EAAMA,EAAIlY,MAAM,EAAGwkB,IACK3qB,OAAS,EAAIqe,EAAIgL,YAAY,KAEvDoB,EAAY3U,EACZ4U,EAAO,EACP,eAEG,GAAmB,IAAfrM,EAAIre,QAA+B,IAAfqe,EAAIre,OAAc,CAC/Cqe,EAAM,GACNmM,EAAoB,EACpBC,EAAY3U,EACZ4U,EAAO,EACP,SAGAH,IACElM,EAAIre,OAAS,EACfqe,GAAO,MAEPA,EAAM,KACRmM,EAAoB,QAGlBnM,EAAIre,OAAS,EACfqe,GAAO,IAAM8L,EAAKhkB,MAAMskB,EAAY,EAAG3U,GAEvCuI,EAAM8L,EAAKhkB,MAAMskB,EAAY,EAAG3U,GAClC0U,EAAoB1U,EAAI2U,EAAY,EAEtCA,EAAY3U,EACZ4U,EAAO,OACW,KAATxa,IAA+B,IAAVwa,IAC5BA,EAEFA,GAAQ,EAGZ,OAAOrM,EAeT,IAAIuM,EAAQ,CAEVC,QAAS,WAKP,IAJA,IAEIC,EAFAC,EAAe,GACfC,GAAmB,EAGdlV,EAAIzP,UAAUrG,OAAS,EAAG8V,IAAM,IAAMkV,EAAkBlV,IAAK,CACpE,IAAIqU,EACArU,GAAK,EACPqU,EAAO9jB,UAAUyP,SAELmV,IAARH,IACFA,EAAM7rB,EAAQ6rB,OAChBX,EAAOW,GAGTZ,EAAWC,GAGS,IAAhBA,EAAKnqB,SAIT+qB,EAAeZ,EAAO,IAAMY,EAC5BC,EAA0C,KAAvBb,EAAKha,WAAW,IASrC,OAFA4a,EAAeT,EAAqBS,GAAeC,GAE/CA,EACED,EAAa/qB,OAAS,EACjB,IAAM+qB,EAEN,IACAA,EAAa/qB,OAAS,EACxB+qB,EAEA,KAIX7gB,UAAW,SAAmBigB,GAG5B,GAFAD,EAAWC,GAES,IAAhBA,EAAKnqB,OAAc,MAAO,IAE9B,IAAIkrB,EAAoC,KAAvBf,EAAKha,WAAW,GAC7Bgb,EAAyD,KAArChB,EAAKha,WAAWga,EAAKnqB,OAAS,GAQtD,OAHoB,KAFpBmqB,EAAOG,EAAqBH,GAAOe,IAE1BlrB,QAAiBkrB,IAAYf,EAAO,KACzCA,EAAKnqB,OAAS,GAAKmrB,IAAmBhB,GAAQ,KAE9Ce,EAAmB,IAAMf,EACtBA,GAGTe,WAAY,SAAoBf,GAE9B,OADAD,EAAWC,GACJA,EAAKnqB,OAAS,GAA4B,KAAvBmqB,EAAKha,WAAW,IAG5ClH,KAAM,WACJ,GAAyB,IAArB5C,UAAUrG,OACZ,MAAO,IAET,IADA,IAAIorB,EACKtV,EAAI,EAAGA,EAAIzP,UAAUrG,SAAU8V,EAAG,CACzC,IAAIuV,EAAMhlB,UAAUyP,GACpBoU,EAAWmB,GACPA,EAAIrrB,OAAS,SACAirB,IAAXG,EACFA,EAASC,EAETD,GAAU,IAAMC,GAGtB,YAAeJ,IAAXG,EACK,IACFR,EAAM1gB,UAAUkhB,IAGzBE,SAAU,SAAkBzM,EAAM0M,GAIhC,GAHArB,EAAWrL,GACXqL,EAAWqB,GAEP1M,IAAS0M,EAAI,MAAO,GAKxB,IAHA1M,EAAO+L,EAAMC,QAAQhM,OACrB0M,EAAKX,EAAMC,QAAQU,IAEF,MAAO,GAIxB,IADA,IAAIC,EAAY,EACTA,EAAY3M,EAAK7e,QACa,KAA/B6e,EAAK1O,WAAWqb,KADYA,GASlC,IALA,IAAIC,EAAU5M,EAAK7e,OACf0rB,EAAUD,EAAUD,EAGpBG,EAAU,EACPA,EAAUJ,EAAGvrB,QACa,KAA3BurB,EAAGpb,WAAWwb,KADUA,GAW9B,IAPA,IACIC,EADQL,EAAGvrB,OACK2rB,EAGhB3rB,EAAS0rB,EAAUE,EAAQF,EAAUE,EACrCC,GAAiB,EACjB/V,EAAI,EACDA,GAAK9V,IAAU8V,EAAG,CACvB,GAAIA,IAAM9V,EAAQ,CAChB,GAAI4rB,EAAQ5rB,EAAQ,CAClB,GAAmC,KAA/BurB,EAAGpb,WAAWwb,EAAU7V,GAG1B,OAAOyV,EAAGplB,MAAMwlB,EAAU7V,EAAI,GACzB,GAAU,IAANA,EAGT,OAAOyV,EAAGplB,MAAMwlB,EAAU7V,QAEnB4V,EAAU1rB,IACoB,KAAnC6e,EAAK1O,WAAWqb,EAAY1V,GAG9B+V,EAAgB/V,EACD,IAANA,IAGT+V,EAAgB,IAGpB,MAEF,IAAIC,EAAWjN,EAAK1O,WAAWqb,EAAY1V,GAE3C,GAAIgW,IADSP,EAAGpb,WAAWwb,EAAU7V,GAEnC,MACoB,KAAbgW,IACPD,EAAgB/V,GAGpB,IAAIiW,EAAM,GAGV,IAAKjW,EAAI0V,EAAYK,EAAgB,EAAG/V,GAAK2V,IAAW3V,EAClDA,IAAM2V,GAAkC,KAAvB5M,EAAK1O,WAAW2F,KAChB,IAAfiW,EAAI/rB,OACN+rB,GAAO,KAEPA,GAAO,OAMb,OAAIA,EAAI/rB,OAAS,EACR+rB,EAAMR,EAAGplB,MAAMwlB,EAAUE,IAEhCF,GAAWE,EACoB,KAA3BN,EAAGpb,WAAWwb,MACdA,EACGJ,EAAGplB,MAAMwlB,KAIpBK,UAAW,SAAmB7B,GAC5B,OAAOA,GAGT8B,QAAS,SAAiB9B,GAExB,GADAD,EAAWC,GACS,IAAhBA,EAAKnqB,OAAc,MAAO,IAK9B,IAJA,IAAIkQ,EAAOia,EAAKha,WAAW,GACvB+b,EAAmB,KAAThc,EACVjF,GAAO,EACPkhB,GAAe,EACVrW,EAAIqU,EAAKnqB,OAAS,EAAG8V,GAAK,IAAKA,EAEtC,GAAa,MADb5F,EAAOia,EAAKha,WAAW2F,KAEnB,IAAKqW,EAAc,CACjBlhB,EAAM6K,EACN,YAIJqW,GAAe,EAInB,OAAa,IAATlhB,EAAmBihB,EAAU,IAAM,IACnCA,GAAmB,IAARjhB,EAAkB,KAC1Bkf,EAAKhkB,MAAM,EAAG8E,IAGvBmhB,SAAU,SAAkBjC,EAAMkC,GAChC,QAAYpB,IAARoB,GAAoC,iBAARA,EAAkB,MAAM,IAAIpqB,UAAU,mCACtEioB,EAAWC,GAEX,IAGIrU,EAHA9K,EAAQ,EACRC,GAAO,EACPkhB,GAAe,EAGnB,QAAYlB,IAARoB,GAAqBA,EAAIrsB,OAAS,GAAKqsB,EAAIrsB,QAAUmqB,EAAKnqB,OAAQ,CACpE,GAAIqsB,EAAIrsB,SAAWmqB,EAAKnqB,QAAUqsB,IAAQlC,EAAM,MAAO,GACvD,IAAImC,EAASD,EAAIrsB,OAAS,EACtBusB,GAAoB,EACxB,IAAKzW,EAAIqU,EAAKnqB,OAAS,EAAG8V,GAAK,IAAKA,EAAG,CACrC,IAAI5F,EAAOia,EAAKha,WAAW2F,GAC3B,GAAa,KAAT5F,GAGA,IAAKic,EAAc,CACjBnhB,EAAQ8K,EAAI,EACZ,YAGsB,IAAtByW,IAGFJ,GAAe,EACfI,EAAmBzW,EAAI,GAErBwW,GAAU,IAERpc,IAASmc,EAAIlc,WAAWmc,IACR,KAAZA,IAGJrhB,EAAM6K,IAKRwW,GAAU,EACVrhB,EAAMshB,IAOd,OADIvhB,IAAUC,EAAKA,EAAMshB,GAAmC,IAATthB,IAAYA,EAAMkf,EAAKnqB,QACnEmqB,EAAKhkB,MAAM6E,EAAOC,GAEzB,IAAK6K,EAAIqU,EAAKnqB,OAAS,EAAG8V,GAAK,IAAKA,EAClC,GAA2B,KAAvBqU,EAAKha,WAAW2F,IAGhB,IAAKqW,EAAc,CACjBnhB,EAAQ8K,EAAI,EACZ,YAEgB,IAAT7K,IAGXkhB,GAAe,EACflhB,EAAM6K,EAAI,GAId,OAAa,IAAT7K,EAAmB,GAChBkf,EAAKhkB,MAAM6E,EAAOC,IAI7BuhB,QAAS,SAAiBrC,GACxBD,EAAWC,GAQX,IAPA,IAAIsC,GAAY,EACZC,EAAY,EACZzhB,GAAO,EACPkhB,GAAe,EAGfQ,EAAc,EACT7W,EAAIqU,EAAKnqB,OAAS,EAAG8V,GAAK,IAAKA,EAAG,CACzC,IAAI5F,EAAOia,EAAKha,WAAW2F,GAC3B,GAAa,KAAT5F,GASS,IAATjF,IAGFkhB,GAAe,EACflhB,EAAM6K,EAAI,GAEC,KAAT5F,GAEkB,IAAduc,EACFA,EAAW3W,EACY,IAAhB6W,IACPA,EAAc,IACK,IAAdF,IAGTE,GAAe,QArBb,IAAKR,EAAc,CACjBO,EAAY5W,EAAI,EAChB,OAuBR,OAAkB,IAAd2W,IAA4B,IAATxhB,GAEH,IAAhB0hB,GAEgB,IAAhBA,GAAqBF,IAAaxhB,EAAM,GAAKwhB,IAAaC,EAAY,EACjE,GAEFvC,EAAKhkB,MAAMsmB,EAAUxhB,IAG9ByI,OAAQ,SAAgBkZ,GACtB,GAAmB,OAAfA,GAA6C,iBAAfA,EAChC,MAAM,IAAI3qB,UAAU,0EAA4E2qB,GAElG,OAvVJ,SAAiBC,EAAKD,GACpB,IAAIE,EAAMF,EAAWE,KAAOF,EAAWG,KACnCC,EAAOJ,EAAWI,OAASJ,EAAWxsB,MAAQ,KAAOwsB,EAAWP,KAAO,IAC3E,OAAKS,EAGDA,IAAQF,EAAWG,KACdD,EAAME,EAERF,EA8UU,IA9UEE,EALVA,EAmVAC,CAAQ,EAAKL,IAGtBxZ,MAAO,SAAe+W,GACpBD,EAAWC,GAEX,IAAI+C,EAAM,CAAEH,KAAM,GAAID,IAAK,GAAIE,KAAM,GAAIX,IAAK,GAAIjsB,KAAM,IACxD,GAAoB,IAAhB+pB,EAAKnqB,OAAc,OAAOktB,EAC9B,IAEIliB,EAFAkF,EAAOia,EAAKha,WAAW,GACvB+a,EAAsB,KAAThb,EAEbgb,GACFgC,EAAIH,KAAO,IACX/hB,EAAQ,GAERA,EAAQ,EAaV,IAXA,IAAIyhB,GAAY,EACZC,EAAY,EACZzhB,GAAO,EACPkhB,GAAe,EACfrW,EAAIqU,EAAKnqB,OAAS,EAIlB2sB,EAAc,EAGX7W,GAAK9K,IAAS8K,EAEnB,GAAa,MADb5F,EAAOia,EAAKha,WAAW2F,KAUV,IAAT7K,IAGFkhB,GAAe,EACflhB,EAAM6K,EAAI,GAEC,KAAT5F,GAEkB,IAAduc,EAAiBA,EAAW3W,EAA2B,IAAhB6W,IAAmBA,EAAc,IACrD,IAAdF,IAGXE,GAAe,QAlBb,IAAKR,EAAc,CACjBO,EAAY5W,EAAI,EAChB,MAyCR,OArBkB,IAAd2W,IAA4B,IAATxhB,GAEP,IAAhB0hB,GAEgB,IAAhBA,GAAqBF,IAAaxhB,EAAM,GAAKwhB,IAAaC,EAAY,GACvD,IAATzhB,IACiCiiB,EAAIF,KAAOE,EAAI9sB,KAAhC,IAAdssB,GAAmBxB,EAAkCf,EAAKhkB,MAAM,EAAG8E,GAAgCkf,EAAKhkB,MAAMumB,EAAWzhB,KAG7G,IAAdyhB,GAAmBxB,GACrBgC,EAAI9sB,KAAO+pB,EAAKhkB,MAAM,EAAGsmB,GACzBS,EAAIF,KAAO7C,EAAKhkB,MAAM,EAAG8E,KAEzBiiB,EAAI9sB,KAAO+pB,EAAKhkB,MAAMumB,EAAWD,GACjCS,EAAIF,KAAO7C,EAAKhkB,MAAMumB,EAAWzhB,IAEnCiiB,EAAIb,IAAMlC,EAAKhkB,MAAMsmB,EAAUxhB,IAG7ByhB,EAAY,EAAGQ,EAAIJ,IAAM3C,EAAKhkB,MAAM,EAAGumB,EAAY,GAAYxB,IAAYgC,EAAIJ,IAAM,KAElFI,GAGTL,IAAK,IACLM,UAAW,IACXC,MAAO,KACPxC,MAAO,MAGTA,EAAMA,MAAQA,EAEd9nB,EAAOC,QAAU6nB,aC/gBjB,IAOIyC,EACAC,EARAruB,EAAU6D,EAAOC,QAAU,GAU/B,SAASwqB,IACL,MAAM,IAAI3jB,MAAM,mCAEpB,SAAS4jB,IACL,MAAM,IAAI5jB,MAAM,qCAsBpB,SAAS6jB,EAAWC,GAChB,GAAIL,IAAqBM,WAErB,OAAOA,WAAWD,EAAK,GAG3B,IAAKL,IAAqBE,IAAqBF,IAAqBM,WAEhE,OADAN,EAAmBM,WACZA,WAAWD,EAAK,GAE3B,IAEI,OAAOL,EAAiBK,EAAK,GAC/B,MAAME,GACJ,IAEI,OAAOP,EAAiBjnB,KAAK,KAAMsnB,EAAK,GAC1C,MAAME,GAEJ,OAAOP,EAAiBjnB,KAAK3E,KAAMisB,EAAK,MAvCnD,WACG,IAEQL,EADsB,mBAAfM,WACYA,WAEAJ,EAEzB,MAAOK,GACLP,EAAmBE,EAEvB,IAEQD,EADwB,mBAAjBO,aACcA,aAEAL,EAE3B,MAAOI,GACLN,EAAqBE,GAjB7B,GAwEA,IAEIM,EAFA5O,EAAQ,GACR6O,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaD,IAGlBC,GAAW,EACPD,EAAa9tB,OACbkf,EAAQ4O,EAAapsB,OAAOwd,GAE5B8O,GAAc,EAEd9O,EAAMlf,QACNkuB,KAIR,SAASA,IACL,IAAIH,EAAJ,CAGA,IAAII,EAAUV,EAAWQ,GACzBF,GAAW,EAGX,IADA,IAAIzhB,EAAM4S,EAAMlf,OACVsM,GAAK,CAGP,IAFAwhB,EAAe5O,EACfA,EAAQ,KACC8O,EAAa1hB,GACdwhB,GACAA,EAAaE,GAAYI,MAGjCJ,GAAc,EACd1hB,EAAM4S,EAAMlf,OAEhB8tB,EAAe,KACfC,GAAW,EAnEf,SAAyBpc,GACrB,GAAI2b,IAAuBO,aAEvB,OAAOA,aAAalc,GAGxB,IAAK2b,IAAuBE,IAAwBF,IAAuBO,aAEvE,OADAP,EAAqBO,aACdA,aAAalc,GAExB,IAEW2b,EAAmB3b,GAC5B,MAAOic,GACL,IAEI,OAAON,EAAmBlnB,KAAK,KAAMuL,GACvC,MAAOic,GAGL,OAAON,EAAmBlnB,KAAK3E,KAAMkQ,KAgD7C0c,CAAgBF,IAiBpB,SAASG,EAAKZ,EAAKa,GACf9sB,KAAKisB,IAAMA,EACXjsB,KAAK8sB,MAAQA,EAYjB,SAAS7rB,KA5BTzD,EAAQuvB,SAAW,SAAUd,GACzB,IAAItY,EAAO,IAAI/S,MAAMgE,UAAUrG,OAAS,GACxC,GAAIqG,UAAUrG,OAAS,EACnB,IAAK,IAAI8V,EAAI,EAAGA,EAAIzP,UAAUrG,OAAQ8V,IAClCV,EAAKU,EAAI,GAAKzP,UAAUyP,GAGhCoJ,EAAMpe,KAAK,IAAIwtB,EAAKZ,EAAKtY,IACJ,IAAjB8J,EAAMlf,QAAiB+tB,GACvBN,EAAWS,IASnBI,EAAKpoB,UAAUkoB,IAAM,WACjB3sB,KAAKisB,IAAIrY,MAAM,KAAM5T,KAAK8sB,QAE9BtvB,EAAQqf,MAAQ,UAChBrf,EAAQwvB,SAAU,EAClBxvB,EAAQC,IAAM,GACdD,EAAQyvB,KAAO,GACfzvB,EAAQ0vB,QAAU,GAClB1vB,EAAQ2vB,SAAW,GAInB3vB,EAAQ4vB,GAAKnsB,EACbzD,EAAQ6vB,YAAcpsB,EACtBzD,EAAQ8vB,KAAOrsB,EACfzD,EAAQ+vB,IAAMtsB,EACdzD,EAAQgwB,eAAiBvsB,EACzBzD,EAAQiwB,mBAAqBxsB,EAC7BzD,EAAQkwB,KAAOzsB,EACfzD,EAAQmwB,gBAAkB1sB,EAC1BzD,EAAQowB,oBAAsB3sB,EAE9BzD,EAAQqwB,UAAY,SAAUlvB,GAAQ,MAAO,IAE7CnB,EAAQswB,QAAU,SAAUnvB,GACxB,MAAM,IAAIwJ,MAAM,qCAGpB3K,EAAQ6rB,IAAM,WAAc,MAAO,KACnC7rB,EAAQuwB,MAAQ,SAAU1C,GACtB,MAAM,IAAIljB,MAAM,mCAEpB3K,EAAQwwB,MAAQ,WAAa,OAAO,0BCvLpC,iBACE,SAAS1C,GAGsChqB,GAC9CA,EAAQ2sB,SACoC5sB,GAC5CA,EAAO4sB,SAHT,IAIIC,EAA8B,iBAAV,EAAAC,GAAsB,EAAAA,EAE7CD,EAAWE,SAAWF,GACtBA,EAAWG,SAAWH,GACtBA,EAAWtoB,KAUZ,IAAIoL,EAGJsd,EAAS,WAGT/C,EAAO,GAUPgD,EAAgB,QAChBC,EAAgB,eAChBC,EAAkB,4BAGlBC,EAAS,CACR,SAAY,kDACZ,YAAa,iDACb,gBAAiB,iBAKlBC,EAAQvS,KAAKuS,MACbC,EAAqBvhB,OAAOC,aAa5B,SAASuhB,EAAMhwB,GACd,MAAMiwB,WAAWJ,EAAO7vB,IAWzB,SAASgK,EAAIikB,EAAOvsB,GAGnB,IAFA,IAAIhC,EAASuuB,EAAMvuB,OACf6M,EAAS,GACN7M,KACN6M,EAAO7M,GAAUgC,EAAGusB,EAAMvuB,IAE3B,OAAO6M,EAaR,SAAS2jB,EAAU3J,EAAQ7kB,GAC1B,IAAIyuB,EAAQ5J,EAAOve,MAAM,KACrBuE,EAAS,GAWb,OAVI4jB,EAAMzwB,OAAS,IAGlB6M,EAAS4jB,EAAM,GAAK,IACpB5J,EAAS4J,EAAM,IAMT5jB,EADOvC,GAFduc,EAASA,EAAOlmB,QAAQuvB,EAAiB,MACrB5nB,MAAM,KACAtG,GAAIiH,KAAK,KAiBpC,SAASynB,EAAW7J,GAMnB,IALA,IAGIzlB,EACAuvB,EAJA/vB,EAAS,GACTgwB,EAAU,EACV5wB,EAAS6mB,EAAO7mB,OAGb4wB,EAAU5wB,IAChBoB,EAAQylB,EAAO1W,WAAWygB,OACb,OAAUxvB,GAAS,OAAUwvB,EAAU5wB,EAG3B,QAAX,OADb2wB,EAAQ9J,EAAO1W,WAAWygB,OAEzBhwB,EAAOE,OAAe,KAARM,IAAkB,KAAe,KAARuvB,GAAiB,QAIxD/vB,EAAOE,KAAKM,GACZwvB,KAGDhwB,EAAOE,KAAKM,GAGd,OAAOR,EAWR,SAASiwB,EAAWtC,GACnB,OAAOjkB,EAAIikB,GAAO,SAASntB,GAC1B,IAAIR,EAAS,GAOb,OANIQ,EAAQ,QAEXR,GAAUyvB,GADVjvB,GAAS,SAC8B,GAAK,KAAQ,OACpDA,EAAQ,MAAiB,KAARA,GAElBR,EAAUyvB,EAAmBjvB,MAE3B6H,KAAK,IAoCT,SAAS6nB,EAAaC,EAAOC,GAG5B,OAAOD,EAAQ,GAAK,IAAMA,EAAQ,MAAgB,GAARC,IAAc,GAQzD,SAASC,EAAMC,EAAOC,EAAWC,GAChC,IAAIrlB,EAAI,EAGR,IAFAmlB,EAAQE,EAAYhB,EAAMc,EA1LpB,KA0LoCA,GAAS,EACnDA,GAASd,EAAMc,EAAQC,GACOD,EAAQG,IAA2BtlB,GAAKihB,EACrEkE,EAAQd,EAAMc,EA3KAlE,IA6Kf,OAAOoD,EAAMrkB,EAAI,GAAsBmlB,GAASA,EAhM1C,KA0MP,SAASrd,EAAOpU,GAEf,IAEIssB,EAIAuF,EACAhR,EACAhV,EACAimB,EACAC,EACAzlB,EACAglB,EACAjR,EAEA2R,EArEiBC,EAsDjB9wB,EAAS,GACT+wB,EAAclyB,EAAMO,OAEpB8V,EAAI,EACJ/V,EA7MM,IA8MN6xB,EA/MS,GAoOb,KALAN,EAAQ7xB,EAAM4pB,YA7NH,MA8NC,IACXiI,EAAQ,GAGJhR,EAAI,EAAGA,EAAIgR,IAAShR,EAEpB7gB,EAAM0Q,WAAWmQ,IAAM,KAC1BgQ,EAAM,aAEP1vB,EAAOE,KAAKrB,EAAM0Q,WAAWmQ,IAM9B,IAAKhV,EAAQgmB,EAAQ,EAAIA,EAAQ,EAAI,EAAGhmB,EAAQqmB,GAAwC,CAOvF,IAAKJ,EAAOzb,EAAG0b,EAAI,EAAGzlB,EAAIihB,EAErB1hB,GAASqmB,GACZrB,EAAM,mBAGPS,GAxGmBW,EAwGEjyB,EAAM0Q,WAAW7E,MAvGxB,GAAK,GACbomB,EAAY,GAEhBA,EAAY,GAAK,GACbA,EAAY,GAEhBA,EAAY,GAAK,GACbA,EAAY,GAEb1E,IAgGQA,GAAQ+D,EAAQX,GAAOL,EAASja,GAAK0b,KACjDlB,EAAM,YAGPxa,GAAKib,EAAQS,IAGTT,GAFJjR,EAAI/T,GAAK6lB,EAvQL,EAuQoB7lB,GAAK6lB,EAtQzB,MAsQ8C7lB,EAAI6lB,IAbH7lB,GAAKihB,EAoBpDwE,EAAIpB,EAAML,GADd0B,EAAazE,EAAOlN,KAEnBwQ,EAAM,YAGPkB,GAAKC,EAKNG,EAAOX,EAAMnb,EAAIyb,EADjBxF,EAAMnrB,EAAOZ,OAAS,EACc,GAARuxB,GAIxBnB,EAAMta,EAAIiW,GAAOgE,EAAShwB,GAC7BuwB,EAAM,YAGPvwB,GAAKqwB,EAAMta,EAAIiW,GACfjW,GAAKiW,EAGLnrB,EAAOsZ,OAAOpE,IAAK,EAAG/V,GAIvB,OAAO8wB,EAAWjwB,GAUnB,SAAS6S,EAAOhU,GACf,IAAIM,EACAmxB,EACAW,EACAC,EACAF,EACAtR,EACAnU,EACA4lB,EACAhmB,EACA+T,EACAkS,EAGAL,EAEAM,EACAR,EACAS,EANAtxB,EAAS,GAoBb,IARA+wB,GAHAlyB,EAAQixB,EAAWjxB,IAGCO,OAGpBD,EAvUU,IAwUVmxB,EAAQ,EACRU,EA1Ua,GA6URtR,EAAI,EAAGA,EAAIqR,IAAerR,GAC9B0R,EAAevyB,EAAM6gB,IACF,KAClB1f,EAAOE,KAAKuvB,EAAmB2B,IAejC,IAXAH,EAAiBC,EAAclxB,EAAOZ,OAMlC8xB,GACHlxB,EAAOE,KAzVG,KA6VJ+wB,EAAiBF,GAAa,CAIpC,IAAKxlB,EAAI4jB,EAAQzP,EAAI,EAAGA,EAAIqR,IAAerR,GAC1C0R,EAAevyB,EAAM6gB,KACDvgB,GAAKiyB,EAAe7lB,IACvCA,EAAI6lB,GAcN,IAPI7lB,EAAIpM,EAAIqwB,GAAOL,EAASmB,IAD5Be,EAAwBJ,EAAiB,KAExCvB,EAAM,YAGPY,IAAU/kB,EAAIpM,GAAKkyB,EACnBlyB,EAAIoM,EAECmU,EAAI,EAAGA,EAAIqR,IAAerR,EAO9B,IANA0R,EAAevyB,EAAM6gB,IAEFvgB,KAAOmxB,EAAQnB,GACjCO,EAAM,YAGH0B,GAAgBjyB,EAAG,CAEtB,IAAKgyB,EAAIb,EAAOnlB,EAAIihB,IAEf+E,GADJjS,EAAI/T,GAAK6lB,EAlYP,EAkYsB7lB,GAAK6lB,EAjY3B,MAiYgD7lB,EAAI6lB,IADT7lB,GAAKihB,EAKlDkF,EAAUH,EAAIjS,EACd2R,EAAazE,EAAOlN,EACpBlf,EAAOE,KACNuvB,EAAmBS,EAAahR,EAAIoS,EAAUT,EAAY,KAE3DM,EAAI3B,EAAM8B,EAAUT,GAGrB7wB,EAAOE,KAAKuvB,EAAmBS,EAAaiB,EAAG,KAC/CH,EAAOX,EAAMC,EAAOe,EAAuBJ,GAAkBC,GAC7DZ,EAAQ,IACNW,IAIFX,IACAnxB,EAGH,OAAOa,EAAOqI,KAAK,IA4CpBwJ,EAAW,CAMV,QAAW,QAQX,KAAQ,CACP,OAAUie,EACV,OAAUG,GAEX,OAAUhd,EACV,OAAUJ,EACV,QA/BD,SAAiBhU,GAChB,OAAO+wB,EAAU/wB,GAAO,SAASonB,GAChC,OAAOoJ,EAAcluB,KAAK8kB,GACvB,OAASpT,EAAOoT,GAChBA,MA4BJ,UAnDD,SAAmBpnB,GAClB,OAAO+wB,EAAU/wB,GAAO,SAASonB,GAChC,OAAOmJ,EAAcjuB,KAAK8kB,GACvBhT,EAAOgT,EAAO1gB,MAAM,GAAGkF,eACvBwb,YA4DH,KAFD,aACC,OAAOpU,GACP,8BAngBF,cCDD3P,EAAOC,QAAQ,gCCAfD,EAAOC,QAAQ,mOCAfD,EAAOC,QAAQ,g3DCAfD,EAAOC,QAAQ,yFCEfA,EAAQovB,IAAM,EAAd,OACApvB,EAAQqvB,GAAR,SACArvB,EAAQsvB,GAAR,SACAtvB,EAAQuvB,EAAR,SACAvvB,EAAQwvB,EAAR,oBCNAzvB,EAAOC,QAAQ,on5BCCXyvB,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBzH,IAAjB0H,EACH,OAAOA,EAAa5vB,QAGrB,IAAID,EAAS0vB,EAAyBE,GAAY,CACjDE,GAAIF,EACJG,QAAQ,EACR9vB,QAAS,IAUV,OANA+vB,EAAoBJ,GAAUtsB,KAAKtD,EAAOC,QAASD,EAAQA,EAAOC,QAAS0vB,GAG3E3vB,EAAO+vB,QAAS,EAGT/vB,EAAOC,QCvBf0vB,EAAoB1yB,EAAK+C,IACxB,IAAIiwB,EAASjwB,GAAUA,EAAOkwB,WAC7B,IAAOlwB,EAAiB,QACxB,IAAM,EAEP,OADA2vB,EAAoBQ,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRN,EAAoBQ,EAAI,CAAClwB,EAASmJ,KACjC,IAAI,IAAI1F,KAAO0F,EACXumB,EAAoBU,EAAEjnB,EAAY1F,KAASisB,EAAoBU,EAAEpwB,EAASyD,IAC5EjE,OAAOvB,eAAe+B,EAASyD,EAAK,CAAEtF,YAAY,EAAMI,IAAK4K,EAAW1F,MCJ3EisB,EAAoB7C,EAAI,WACvB,GAA0B,iBAAfwD,WAAyB,OAAOA,WAC3C,IACC,OAAO3xB,MAAQ,IAAI4xB,SAAS,cAAb,GACd,MAAOzF,GACR,GAAsB,iBAAXkC,OAAqB,OAAOA,QALjB,GCAxB2C,EAAoBU,EAAI,CAACntB,EAAKstB,IAAU/wB,OAAO2D,UAAU8F,eAAe5F,KAAKJ,EAAKstB,GCAlFb,EAAoBc,IAAOzwB,IAC1BA,EAAO0wB,MAAQ,GACV1wB,EAAO6V,WAAU7V,EAAO6V,SAAW,IACjC7V","sources":["webpack://@web3os-core/kernel/./node_modules/.pnpm/ansi-colors@4.1.3/node_modules/ansi-colors/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/ansi-colors@4.1.3/node_modules/ansi-colors/symbols.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/linkify-it@3.0.3/node_modules/linkify-it/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/linkify-it@3.0.3/node_modules/linkify-it/lib/re.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/common/entities.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/common/html_blocks.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/common/html_re.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/common/utils.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/parser_block.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/parser_core.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/parser_inline.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/presets/commonmark.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/presets/default.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/presets/zero.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/renderer.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/ruler.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/blockquote.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/code.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/fence.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/heading.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/hr.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/html_block.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/lheading.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/list.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/paragraph.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/reference.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/state_block.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/table.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/block.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/inline.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/linkify.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/normalize.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/replacements.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/state_core.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/autolink.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/backticks.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/entity.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/escape.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/image.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/link.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/newline.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/text.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/token.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/decode.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/encode.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/format.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/parse.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/path-browserify@1.0.1/node_modules/path-browserify/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/punycode@1.3.2/node_modules/punycode/punycode.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Cc/regex.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Cf/regex.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/P/regex.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Z/regex.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/properties/Any/regex.js","webpack://@web3os-core/kernel/webpack/bootstrap","webpack://@web3os-core/kernel/webpack/runtime/compat get default export","webpack://@web3os-core/kernel/webpack/runtime/define property getters","webpack://@web3os-core/kernel/webpack/runtime/global","webpack://@web3os-core/kernel/webpack/runtime/hasOwnProperty shorthand","webpack://@web3os-core/kernel/webpack/runtime/node module decorator"],"sourcesContent":["'use strict';\n\nconst isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n\n/* eslint-disable no-control-regex */\n// this is a modified version of https://github.com/chalk/ansi-regex (MIT License)\nconst ANSI_REGEX = /[\\u001b\\u009b][[\\]#;?()]*(?:(?:(?:[^\\W_]*;?[^\\W_]*)\\u0007)|(?:(?:[0-9]{1,4}(;[0-9]{0,4})*)?[~0-9=<>cf-nqrtyA-PRZ]))/g;\n\nconst hasColor = () => {\n  if (typeof process !== 'undefined') {\n    return process.env.FORCE_COLOR !== '0';\n  }\n  return false;\n};\n\nconst create = () => {\n  const colors = {\n    enabled: hasColor(),\n    visible: true,\n    styles: {},\n    keys: {}\n  };\n\n  const ansi = style => {\n    let open = style.open = `\\u001b[${style.codes[0]}m`;\n    let close = style.close = `\\u001b[${style.codes[1]}m`;\n    let regex = style.regex = new RegExp(`\\\\u001b\\\\[${style.codes[1]}m`, 'g');\n    style.wrap = (input, newline) => {\n      if (input.includes(close)) input = input.replace(regex, close + open);\n      let output = open + input + close;\n      // see https://github.com/chalk/chalk/pull/92, thanks to the\n      // chalk contributors for this fix. However, we've confirmed that\n      // this issue is also present in Windows terminals\n      return newline ? output.replace(/\\r*\\n/g, `${close}$&${open}`) : output;\n    };\n    return style;\n  };\n\n  const wrap = (style, input, newline) => {\n    return typeof style === 'function' ? style(input) : style.wrap(input, newline);\n  };\n\n  const style = (input, stack) => {\n    if (input === '' || input == null) return '';\n    if (colors.enabled === false) return input;\n    if (colors.visible === false) return '';\n    let str = '' + input;\n    let nl = str.includes('\\n');\n    let n = stack.length;\n    if (n > 0 && stack.includes('unstyle')) {\n      stack = [...new Set(['unstyle', ...stack])].reverse();\n    }\n    while (n-- > 0) str = wrap(colors.styles[stack[n]], str, nl);\n    return str;\n  };\n\n  const define = (name, codes, type) => {\n    colors.styles[name] = ansi({ name, codes });\n    let keys = colors.keys[type] || (colors.keys[type] = []);\n    keys.push(name);\n\n    Reflect.defineProperty(colors, name, {\n      configurable: true,\n      enumerable: true,\n      set(value) {\n        colors.alias(name, value);\n      },\n      get() {\n        let color = input => style(input, color.stack);\n        Reflect.setPrototypeOf(color, colors);\n        color.stack = this.stack ? this.stack.concat(name) : [name];\n        return color;\n      }\n    });\n  };\n\n  define('reset', [0, 0], 'modifier');\n  define('bold', [1, 22], 'modifier');\n  define('dim', [2, 22], 'modifier');\n  define('italic', [3, 23], 'modifier');\n  define('underline', [4, 24], 'modifier');\n  define('inverse', [7, 27], 'modifier');\n  define('hidden', [8, 28], 'modifier');\n  define('strikethrough', [9, 29], 'modifier');\n\n  define('black', [30, 39], 'color');\n  define('red', [31, 39], 'color');\n  define('green', [32, 39], 'color');\n  define('yellow', [33, 39], 'color');\n  define('blue', [34, 39], 'color');\n  define('magenta', [35, 39], 'color');\n  define('cyan', [36, 39], 'color');\n  define('white', [37, 39], 'color');\n  define('gray', [90, 39], 'color');\n  define('grey', [90, 39], 'color');\n\n  define('bgBlack', [40, 49], 'bg');\n  define('bgRed', [41, 49], 'bg');\n  define('bgGreen', [42, 49], 'bg');\n  define('bgYellow', [43, 49], 'bg');\n  define('bgBlue', [44, 49], 'bg');\n  define('bgMagenta', [45, 49], 'bg');\n  define('bgCyan', [46, 49], 'bg');\n  define('bgWhite', [47, 49], 'bg');\n\n  define('blackBright', [90, 39], 'bright');\n  define('redBright', [91, 39], 'bright');\n  define('greenBright', [92, 39], 'bright');\n  define('yellowBright', [93, 39], 'bright');\n  define('blueBright', [94, 39], 'bright');\n  define('magentaBright', [95, 39], 'bright');\n  define('cyanBright', [96, 39], 'bright');\n  define('whiteBright', [97, 39], 'bright');\n\n  define('bgBlackBright', [100, 49], 'bgBright');\n  define('bgRedBright', [101, 49], 'bgBright');\n  define('bgGreenBright', [102, 49], 'bgBright');\n  define('bgYellowBright', [103, 49], 'bgBright');\n  define('bgBlueBright', [104, 49], 'bgBright');\n  define('bgMagentaBright', [105, 49], 'bgBright');\n  define('bgCyanBright', [106, 49], 'bgBright');\n  define('bgWhiteBright', [107, 49], 'bgBright');\n\n  colors.ansiRegex = ANSI_REGEX;\n  colors.hasColor = colors.hasAnsi = str => {\n    colors.ansiRegex.lastIndex = 0;\n    return typeof str === 'string' && str !== '' && colors.ansiRegex.test(str);\n  };\n\n  colors.alias = (name, color) => {\n    let fn = typeof color === 'string' ? colors[color] : color;\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('Expected alias to be the name of an existing color (string) or a function');\n    }\n\n    if (!fn.stack) {\n      Reflect.defineProperty(fn, 'name', { value: name });\n      colors.styles[name] = fn;\n      fn.stack = [name];\n    }\n\n    Reflect.defineProperty(colors, name, {\n      configurable: true,\n      enumerable: true,\n      set(value) {\n        colors.alias(name, value);\n      },\n      get() {\n        let color = input => style(input, color.stack);\n        Reflect.setPrototypeOf(color, colors);\n        color.stack = this.stack ? this.stack.concat(fn.stack) : fn.stack;\n        return color;\n      }\n    });\n  };\n\n  colors.theme = custom => {\n    if (!isObject(custom)) throw new TypeError('Expected theme to be an object');\n    for (let name of Object.keys(custom)) {\n      colors.alias(name, custom[name]);\n    }\n    return colors;\n  };\n\n  colors.alias('unstyle', str => {\n    if (typeof str === 'string' && str !== '') {\n      colors.ansiRegex.lastIndex = 0;\n      return str.replace(colors.ansiRegex, '');\n    }\n    return '';\n  });\n\n  colors.alias('noop', str => str);\n  colors.none = colors.clear = colors.noop;\n\n  colors.stripColor = colors.unstyle;\n  colors.symbols = require('./symbols');\n  colors.define = define;\n  return colors;\n};\n\nmodule.exports = create();\nmodule.exports.create = create;\n","'use strict';\n\nconst isHyper = typeof process !== 'undefined' && process.env.TERM_PROGRAM === 'Hyper';\nconst isWindows = typeof process !== 'undefined' && process.platform === 'win32';\nconst isLinux = typeof process !== 'undefined' && process.platform === 'linux';\n\nconst common = {\n  ballotDisabled: '☒',\n  ballotOff: '☐',\n  ballotOn: '☑',\n  bullet: '•',\n  bulletWhite: '◦',\n  fullBlock: '█',\n  heart: '❤',\n  identicalTo: '≡',\n  line: '─',\n  mark: '※',\n  middot: '·',\n  minus: '－',\n  multiplication: '×',\n  obelus: '÷',\n  pencilDownRight: '✎',\n  pencilRight: '✏',\n  pencilUpRight: '✐',\n  percent: '%',\n  pilcrow2: '❡',\n  pilcrow: '¶',\n  plusMinus: '±',\n  question: '?',\n  section: '§',\n  starsOff: '☆',\n  starsOn: '★',\n  upDownArrow: '↕'\n};\n\nconst windows = Object.assign({}, common, {\n  check: '√',\n  cross: '×',\n  ellipsisLarge: '...',\n  ellipsis: '...',\n  info: 'i',\n  questionSmall: '?',\n  pointer: '>',\n  pointerSmall: '»',\n  radioOff: '( )',\n  radioOn: '(*)',\n  warning: '‼'\n});\n\nconst other = Object.assign({}, common, {\n  ballotCross: '✘',\n  check: '✔',\n  cross: '✖',\n  ellipsisLarge: '⋯',\n  ellipsis: '…',\n  info: 'ℹ',\n  questionFull: '？',\n  questionSmall: '﹖',\n  pointer: isLinux ? '▸' : '❯',\n  pointerSmall: isLinux ? '‣' : '›',\n  radioOff: '◯',\n  radioOn: '◉',\n  warning: '⚠'\n});\n\nmodule.exports = (isWindows && !isHyper) ? windows : other;\nReflect.defineProperty(module.exports, 'common', { enumerable: false, value: common });\nReflect.defineProperty(module.exports, 'windows', { enumerable: false, value: windows });\nReflect.defineProperty(module.exports, 'other', { enumerable: false, value: other });\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + ').|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};"],"names":["ANSI_REGEX","create","colors","enabled","process","env","FORCE_COLOR","visible","styles","keys","wrap","style","input","newline","stack","str","nl","includes","n","length","Set","reverse","define","name","codes","type","open","close","regex","RegExp","replace","output","ansi","push","Reflect","defineProperty","configurable","enumerable","set","value","alias","get","color","setPrototypeOf","this","concat","ansiRegex","hasColor","hasAnsi","lastIndex","test","fn","TypeError","theme","custom","val","Array","isArray","Object","none","clear","noop","stripColor","unstyle","symbols","module","exports","isHyper","TERM_PROGRAM","isWindows","platform","isLinux","common","ballotDisabled","ballotOff","ballotOn","bullet","bulletWhite","fullBlock","heart","identicalTo","line","mark","middot","minus","multiplication","obelus","pencilDownRight","pencilRight","pencilUpRight","percent","pilcrow2","pilcrow","plusMinus","question","section","starsOff","starsOn","upDownArrow","windows","assign","check","cross","ellipsisLarge","ellipsis","info","questionSmall","pointer","pointerSmall","radioOff","radioOn","warning","other","ballotCross","questionFull","obj","sources","prototype","slice","call","arguments","forEach","source","key","_class","toString","isFunction","escapeRE","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","text","pos","self","tail","re","http","src_auth","src_host_port_strict","src_path","match","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","split","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","Error","__compiled__","__schemas__","compiled","link","createValidator","normalize","isString","slist","filter","map","schema_test","src_ZPCc","schema_search","pretest","__index__","__text_cache__","resetScanCache","Match","shift","start","end","__last_index__","schema","__schema__","toLowerCase","index","raw","url","createMatch","LinkifyIt","schemas","options","reduce","acc","k","hasOwnProperty","add","definition","m","ml","me","len","next","tld_pos","exec","testSchemaAt","search","indexOf","result","list","keepOld","sort","el","idx","arr","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","_hasOwnProperty","has","object","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","mdurl","ucmicro","unescapeMd","unescapeAll","escaped","entity","code","charCodeAt","parseInt","replaceEntityPattern","escapeHtml","arrayReplaceAt","src","newElements","isSpace","isWhiteSpace","isMdAsciiPunct","isPunctChar","normalizeReference","trim","toUpperCase","parseLinkLabel","parseLinkDestination","parseLinkTitle","max","level","ok","lines","state","disableNested","found","marker","prevPos","labelEnd","posMax","oldPos","md","inline","skipToken","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","RECODE_HOSTNAME_FOR","normalizeLink","parsed","parse","hostname","protocol","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","defaultChars","MarkdownIt","presetName","block","core","renderer","linkify","configure","presets","components","rules","ruler","enableOnly","rules2","ruler2","enable","ignoreInvalid","chain","missed","disable","use","plugin","args","apply","State","tokens","render","parseInline","inlineMode","renderInline","Ruler","_rules","i","alt","tokenize","startLine","endLine","getRules","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","Core","l","_rules2","cache","pending","pushPending","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","default_rules","code_inline","slf","token","renderAttrs","content","code_block","fence","highlighted","tmpAttrs","tmpToken","langName","langAttrs","attrIndex","attrs","image","renderInlineAsText","children","renderToken","hardbreak","softbreak","html_block","html_inline","nextToken","needLf","hidden","nesting","tag","__rules__","__cache__","__find__","__compile__","chains","rule","altName","at","opt","before","beforeName","ruleName","splice","after","afterName","chainName","silent","adjustTab","initial","lastLineEmpty","nextLine","offset","oldBMarks","oldBSCount","oldIndent","oldParentType","oldSCount","oldTShift","spaceAfterMarker","terminate","terminatorRules","isOutdented","oldLineMax","bMarks","tShift","eMarks","bsCount","parentType","markup","last","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","tmp","skipSpacesBack","skipCharsBack","cnt","block_names","HTML_SEQUENCES","lineText","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","Math","min","markTightParagraphs","_endLine","destEndPos","destEndLineNo","href","label","res","title","references","Token","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","getLine","substr","escapedSplit","isEscaped","lastPos","current","substring","columns","columnCount","aligns","t","tableLines","tbodyLines","firstCh","secondCh","pop","tok","isLinkClose","j","currentToken","nodes","ln","htmlLinkLevel","fullUrl","urlText","links","blockTokens","NEWLINES_RE","NULL_RE","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","openQuote","closeQuote","OUTER","single","StateCore","EMAIL_RE","AUTOLINK_RE","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","processDelimiters","delimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","curr","tokens_meta","postProcess","startDelim","endDelim","isStrong","scanned","scanDelims","can_open","can_close","DIGITAL_RE","NAMED_RE","ESCAPED","lc","isLetter","labelStart","ref","parseReference","pmax","ws","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","loneMarkers","isTerminatorChar","meta","attrPush","attrData","attrSet","attrGet","attrJoin","decodeCache","string","exclude","getDecodeCache","seq","b1","b2","b3","b4","chr","componentChars","encodeCache","keepEscaped","nextCode","getEncodeCache","encodeURIComponent","slashes","auth","port","pathname","hash","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","rest","simplePath","proto","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm","u","assertPath","path","JSON","stringify","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","posix","resolve","cwd","resolvedPath","resolvedAbsolute","undefined","isAbsolute","trailingSeparator","joined","arg","relative","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","matchedSlash","basename","ext","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","sep","dir","root","base","_format","ret","delimiter","win32","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","Item","array","nextTick","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","umask","nodeType","freeGlobal","g","global","window","maxInt","regexPunycode","regexNonASCII","regexSeparators","errors","floor","stringFromCharCode","error","RangeError","mapDomain","parts","ucs2decode","extra","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","basic","oldi","w","baseMinusT","codePoint","inputLength","bias","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","Any","Cc","Cf","P","Z","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","getter","__esModule","d","a","o","globalThis","Function","prop","nmd","paths"],"sourceRoot":""}