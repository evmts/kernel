{"version":3,"file":"4493.js","mappings":"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","sources":["file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/ethereum-cryptography@0.1.3/node_modules/ethereum-cryptography/hash-utils.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/ethereum-cryptography@0.1.3/node_modules/ethereum-cryptography/keccak.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/ethereum-cryptography@0.1.3/node_modules/ethereum-cryptography/random.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/ethereum-cryptography@0.1.3/node_modules/ethereum-cryptography/secp256k1.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/dist.browser/account.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/dist.browser/address.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/dist.browser/bytes.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/dist.browser/constants.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/dist.browser/externals.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/dist.browser/hash.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/dist.browser/helpers.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/dist.browser/index.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/dist.browser/internal.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/dist.browser/object.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/dist.browser/signature.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/dist.browser/types.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/keccak@3.0.2/node_modules/keccak/js.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/keccak@3.0.2/node_modules/keccak/lib/api/index.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/keccak@3.0.2/node_modules/keccak/lib/api/keccak.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/keccak@3.0.2/node_modules/keccak/lib/api/shake.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/keccak@3.0.2/node_modules/keccak/lib/keccak-state-unroll.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/keccak@3.0.2/node_modules/keccak/lib/keccak.js","file:////home/j/code/web3os/@web3os-core/kernel/node_modules/.pnpm/rlp@2.2.7/node_modules/rlp/dist.browser/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction createHashFunction(hashConstructor) {\n    return function (msg) {\n        var hash = hashConstructor();\n        hash.update(msg);\n        return Buffer.from(hash.digest());\n    };\n}\nexports.createHashFunction = createHashFunction;\n//# sourceMappingURL=hash-utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hash_utils_1 = require(\"./hash-utils\");\nvar createKeccakHash = require(\"keccak\");\nexports.keccak224 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak224\");\n});\nexports.keccak256 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak256\");\n});\nexports.keccak384 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak384\");\n});\nexports.keccak512 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak512\");\n});\n//# sourceMappingURL=keccak.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar randombytes = require(\"randombytes\");\nfunction getRandomBytes(bytes) {\n    return new Promise(function (resolve, reject) {\n        randombytes(bytes, function (err, resp) {\n            if (err) {\n                reject(err);\n                return;\n            }\n            resolve(resp);\n        });\n    });\n}\nexports.getRandomBytes = getRandomBytes;\nfunction getRandomBytesSync(bytes) {\n    return randombytes(bytes);\n}\nexports.getRandomBytesSync = getRandomBytesSync;\n//# sourceMappingURL=random.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar secp256k1_1 = require(\"secp256k1\");\nvar random_1 = require(\"./random\");\nvar SECP256K1_PRIVATE_KEY_SIZE = 32;\nfunction createPrivateKey() {\n    return __awaiter(this, void 0, void 0, function () {\n        var pk;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!true) return [3 /*break*/, 2];\n                    return [4 /*yield*/, random_1.getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE)];\n                case 1:\n                    pk = _a.sent();\n                    if (secp256k1_1.privateKeyVerify(pk)) {\n                        return [2 /*return*/, pk];\n                    }\n                    return [3 /*break*/, 0];\n                case 2: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.createPrivateKey = createPrivateKey;\nfunction createPrivateKeySync() {\n    while (true) {\n        var pk = random_1.getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);\n        if (secp256k1_1.privateKeyVerify(pk)) {\n            return pk;\n        }\n    }\n}\nexports.createPrivateKeySync = createPrivateKeySync;\n__export(require(\"secp256k1\"));\n//# sourceMappingURL=secp256k1.js.map","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isZeroAddress = exports.zeroAddress = exports.importPublic = exports.privateToAddress = exports.privateToPublic = exports.publicToAddress = exports.pubToAddress = exports.isValidPublic = exports.isValidPrivate = exports.generateAddress2 = exports.generateAddress = exports.isValidChecksumAddress = exports.toChecksumAddress = exports.isValidAddress = exports.Account = void 0;\nvar assert_1 = __importDefault(require(\"assert\"));\nvar externals_1 = require(\"./externals\");\nvar secp256k1_1 = require(\"ethereum-cryptography/secp256k1\");\nvar internal_1 = require(\"./internal\");\nvar constants_1 = require(\"./constants\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\nvar helpers_1 = require(\"./helpers\");\nvar types_1 = require(\"./types\");\nvar Account = /** @class */ (function () {\n    /**\n     * This constructor assigns and validates the values.\n     * Use the static factory methods to assist in creating an Account from varying data types.\n     */\n    function Account(nonce, balance, stateRoot, codeHash) {\n        if (nonce === void 0) { nonce = new externals_1.BN(0); }\n        if (balance === void 0) { balance = new externals_1.BN(0); }\n        if (stateRoot === void 0) { stateRoot = constants_1.KECCAK256_RLP; }\n        if (codeHash === void 0) { codeHash = constants_1.KECCAK256_NULL; }\n        this.nonce = nonce;\n        this.balance = balance;\n        this.stateRoot = stateRoot;\n        this.codeHash = codeHash;\n        this._validate();\n    }\n    Account.fromAccountData = function (accountData) {\n        var nonce = accountData.nonce, balance = accountData.balance, stateRoot = accountData.stateRoot, codeHash = accountData.codeHash;\n        return new Account(nonce ? new externals_1.BN((0, bytes_1.toBuffer)(nonce)) : undefined, balance ? new externals_1.BN((0, bytes_1.toBuffer)(balance)) : undefined, stateRoot ? (0, bytes_1.toBuffer)(stateRoot) : undefined, codeHash ? (0, bytes_1.toBuffer)(codeHash) : undefined);\n    };\n    Account.fromRlpSerializedAccount = function (serialized) {\n        var values = externals_1.rlp.decode(serialized);\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized account input. Must be array');\n        }\n        return this.fromValuesArray(values);\n    };\n    Account.fromValuesArray = function (values) {\n        var _a = __read(values, 4), nonce = _a[0], balance = _a[1], stateRoot = _a[2], codeHash = _a[3];\n        return new Account(new externals_1.BN(nonce), new externals_1.BN(balance), stateRoot, codeHash);\n    };\n    Account.prototype._validate = function () {\n        if (this.nonce.lt(new externals_1.BN(0))) {\n            throw new Error('nonce must be greater than zero');\n        }\n        if (this.balance.lt(new externals_1.BN(0))) {\n            throw new Error('balance must be greater than zero');\n        }\n        if (this.stateRoot.length !== 32) {\n            throw new Error('stateRoot must have a length of 32');\n        }\n        if (this.codeHash.length !== 32) {\n            throw new Error('codeHash must have a length of 32');\n        }\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers for the account, in order.\n     */\n    Account.prototype.raw = function () {\n        return [\n            (0, types_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, types_1.bnToUnpaddedBuffer)(this.balance),\n            this.stateRoot,\n            this.codeHash,\n        ];\n    };\n    /**\n     * Returns the RLP serialization of the account as a `Buffer`.\n     */\n    Account.prototype.serialize = function () {\n        return externals_1.rlp.encode(this.raw());\n    };\n    /**\n     * Returns a `Boolean` determining if the account is a contract.\n     */\n    Account.prototype.isContract = function () {\n        return !this.codeHash.equals(constants_1.KECCAK256_NULL);\n    };\n    /**\n     * Returns a `Boolean` determining if the account is empty complying to the definition of\n     * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n     * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n     */\n    Account.prototype.isEmpty = function () {\n        return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(constants_1.KECCAK256_NULL);\n    };\n    return Account;\n}());\nexports.Account = Account;\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nvar isValidAddress = function (hexAddress) {\n    try {\n        (0, helpers_1.assertIsString)(hexAddress);\n    }\n    catch (e) {\n        return false;\n    }\n    return /^0x[0-9a-fA-F]{40}$/.test(hexAddress);\n};\nexports.isValidAddress = isValidAddress;\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nvar toChecksumAddress = function (hexAddress, eip1191ChainId) {\n    (0, helpers_1.assertIsHexString)(hexAddress);\n    var address = (0, internal_1.stripHexPrefix)(hexAddress).toLowerCase();\n    var prefix = '';\n    if (eip1191ChainId) {\n        var chainId = (0, types_1.toType)(eip1191ChainId, types_1.TypeOutput.BN);\n        prefix = chainId.toString() + '0x';\n    }\n    var hash = (0, hash_1.keccakFromString)(prefix + address).toString('hex');\n    var ret = '0x';\n    for (var i = 0; i < address.length; i++) {\n        if (parseInt(hash[i], 16) >= 8) {\n            ret += address[i].toUpperCase();\n        }\n        else {\n            ret += address[i];\n        }\n    }\n    return ret;\n};\nexports.toChecksumAddress = toChecksumAddress;\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nvar isValidChecksumAddress = function (hexAddress, eip1191ChainId) {\n    return (0, exports.isValidAddress)(hexAddress) && (0, exports.toChecksumAddress)(hexAddress, eip1191ChainId) === hexAddress;\n};\nexports.isValidChecksumAddress = isValidChecksumAddress;\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nvar generateAddress = function (from, nonce) {\n    (0, helpers_1.assertIsBuffer)(from);\n    (0, helpers_1.assertIsBuffer)(nonce);\n    var nonceBN = new externals_1.BN(nonce);\n    if (nonceBN.isZero()) {\n        // in RLP we want to encode null in the case of zero nonce\n        // read the RLP documentation for an answer if you dare\n        return (0, hash_1.rlphash)([from, null]).slice(-20);\n    }\n    // Only take the lower 160bits of the hash\n    return (0, hash_1.rlphash)([from, Buffer.from(nonceBN.toArray())]).slice(-20);\n};\nexports.generateAddress = generateAddress;\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nvar generateAddress2 = function (from, salt, initCode) {\n    (0, helpers_1.assertIsBuffer)(from);\n    (0, helpers_1.assertIsBuffer)(salt);\n    (0, helpers_1.assertIsBuffer)(initCode);\n    (0, assert_1.default)(from.length === 20);\n    (0, assert_1.default)(salt.length === 32);\n    var address = (0, hash_1.keccak256)(Buffer.concat([Buffer.from('ff', 'hex'), from, salt, (0, hash_1.keccak256)(initCode)]));\n    return address.slice(-20);\n};\nexports.generateAddress2 = generateAddress2;\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nvar isValidPrivate = function (privateKey) {\n    return (0, secp256k1_1.privateKeyVerify)(privateKey);\n};\nexports.isValidPrivate = isValidPrivate;\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nvar isValidPublic = function (publicKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    (0, helpers_1.assertIsBuffer)(publicKey);\n    if (publicKey.length === 64) {\n        // Convert to SEC1 for secp256k1\n        return (0, secp256k1_1.publicKeyVerify)(Buffer.concat([Buffer.from([4]), publicKey]));\n    }\n    if (!sanitize) {\n        return false;\n    }\n    return (0, secp256k1_1.publicKeyVerify)(publicKey);\n};\nexports.isValidPublic = isValidPublic;\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nvar pubToAddress = function (pubKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    (0, helpers_1.assertIsBuffer)(pubKey);\n    if (sanitize && pubKey.length !== 64) {\n        pubKey = Buffer.from((0, secp256k1_1.publicKeyConvert)(pubKey, false).slice(1));\n    }\n    (0, assert_1.default)(pubKey.length === 64);\n    // Only take the lower 160bits of the hash\n    return (0, hash_1.keccak)(pubKey).slice(-20);\n};\nexports.pubToAddress = pubToAddress;\nexports.publicToAddress = exports.pubToAddress;\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nvar privateToPublic = function (privateKey) {\n    (0, helpers_1.assertIsBuffer)(privateKey);\n    // skip the type flag and use the X, Y points\n    return Buffer.from((0, secp256k1_1.publicKeyCreate)(privateKey, false)).slice(1);\n};\nexports.privateToPublic = privateToPublic;\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nvar privateToAddress = function (privateKey) {\n    return (0, exports.publicToAddress)((0, exports.privateToPublic)(privateKey));\n};\nexports.privateToAddress = privateToAddress;\n/**\n * Converts a public key to the Ethereum format.\n */\nvar importPublic = function (publicKey) {\n    (0, helpers_1.assertIsBuffer)(publicKey);\n    if (publicKey.length !== 64) {\n        publicKey = Buffer.from((0, secp256k1_1.publicKeyConvert)(publicKey, false).slice(1));\n    }\n    return publicKey;\n};\nexports.importPublic = importPublic;\n/**\n * Returns the zero address.\n */\nvar zeroAddress = function () {\n    var addressLength = 20;\n    var addr = (0, bytes_1.zeros)(addressLength);\n    return (0, bytes_1.bufferToHex)(addr);\n};\nexports.zeroAddress = zeroAddress;\n/**\n * Checks if a given address is the zero address.\n */\nvar isZeroAddress = function (hexAddress) {\n    try {\n        (0, helpers_1.assertIsString)(hexAddress);\n    }\n    catch (e) {\n        return false;\n    }\n    var zeroAddr = (0, exports.zeroAddress)();\n    return zeroAddr === hexAddress;\n};\nexports.isZeroAddress = isZeroAddress;\n//# sourceMappingURL=account.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Address = void 0;\nvar assert_1 = __importDefault(require(\"assert\"));\nvar externals_1 = require(\"./externals\");\nvar bytes_1 = require(\"./bytes\");\nvar account_1 = require(\"./account\");\nvar Address = /** @class */ (function () {\n    function Address(buf) {\n        (0, assert_1.default)(buf.length === 20, 'Invalid address length');\n        this.buf = buf;\n    }\n    /**\n     * Returns the zero address.\n     */\n    Address.zero = function () {\n        return new Address((0, bytes_1.zeros)(20));\n    };\n    /**\n     * Returns an Address object from a hex-encoded string.\n     * @param str - Hex-encoded address\n     */\n    Address.fromString = function (str) {\n        (0, assert_1.default)((0, account_1.isValidAddress)(str), 'Invalid address');\n        return new Address((0, bytes_1.toBuffer)(str));\n    };\n    /**\n     * Returns an address for a given public key.\n     * @param pubKey The two points of an uncompressed key\n     */\n    Address.fromPublicKey = function (pubKey) {\n        (0, assert_1.default)(Buffer.isBuffer(pubKey), 'Public key should be Buffer');\n        var buf = (0, account_1.pubToAddress)(pubKey);\n        return new Address(buf);\n    };\n    /**\n     * Returns an address for a given private key.\n     * @param privateKey A private key must be 256 bits wide\n     */\n    Address.fromPrivateKey = function (privateKey) {\n        (0, assert_1.default)(Buffer.isBuffer(privateKey), 'Private key should be Buffer');\n        var buf = (0, account_1.privateToAddress)(privateKey);\n        return new Address(buf);\n    };\n    /**\n     * Generates an address for a newly created contract.\n     * @param from The address which is creating this new address\n     * @param nonce The nonce of the from account\n     */\n    Address.generate = function (from, nonce) {\n        (0, assert_1.default)(externals_1.BN.isBN(nonce));\n        return new Address((0, account_1.generateAddress)(from.buf, nonce.toArrayLike(Buffer)));\n    };\n    /**\n     * Generates an address for a contract created using CREATE2.\n     * @param from The address which is creating this new address\n     * @param salt A salt\n     * @param initCode The init code of the contract being created\n     */\n    Address.generate2 = function (from, salt, initCode) {\n        (0, assert_1.default)(Buffer.isBuffer(salt));\n        (0, assert_1.default)(Buffer.isBuffer(initCode));\n        return new Address((0, account_1.generateAddress2)(from.buf, salt, initCode));\n    };\n    /**\n     * Is address equal to another.\n     */\n    Address.prototype.equals = function (address) {\n        return this.buf.equals(address.buf);\n    };\n    /**\n     * Is address zero.\n     */\n    Address.prototype.isZero = function () {\n        return this.equals(Address.zero());\n    };\n    /**\n     * True if address is in the address range defined\n     * by EIP-1352\n     */\n    Address.prototype.isPrecompileOrSystemAddress = function () {\n        var addressBN = new externals_1.BN(this.buf);\n        var rangeMin = new externals_1.BN(0);\n        var rangeMax = new externals_1.BN('ffff', 'hex');\n        return addressBN.gte(rangeMin) && addressBN.lte(rangeMax);\n    };\n    /**\n     * Returns hex encoding of address.\n     */\n    Address.prototype.toString = function () {\n        return '0x' + this.buf.toString('hex');\n    };\n    /**\n     * Returns Buffer representation of address.\n     */\n    Address.prototype.toBuffer = function () {\n        return Buffer.from(this.buf);\n    };\n    return Address;\n}());\nexports.Address = Address;\n//# sourceMappingURL=address.js.map","\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufArrToArr = exports.arrToBufArr = exports.validateNoLeadingZeroes = exports.baToJSON = exports.toUtf8 = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToHex = exports.bufferToInt = exports.toBuffer = exports.unpadHexString = exports.unpadArray = exports.unpadBuffer = exports.setLengthRight = exports.setLengthLeft = exports.zeros = exports.intToBuffer = exports.intToHex = void 0;\nvar externals_1 = require(\"./externals\");\nvar internal_1 = require(\"./internal\");\nvar helpers_1 = require(\"./helpers\");\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nvar intToHex = function (i) {\n    if (!Number.isSafeInteger(i) || i < 0) {\n        throw new Error(\"Received an invalid integer type: \".concat(i));\n    }\n    return \"0x\".concat(i.toString(16));\n};\nexports.intToHex = intToHex;\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nvar intToBuffer = function (i) {\n    var hex = (0, exports.intToHex)(i);\n    return Buffer.from((0, internal_1.padToEven)(hex.slice(2)), 'hex');\n};\nexports.intToBuffer = intToBuffer;\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nvar zeros = function (bytes) {\n    return Buffer.allocUnsafe(bytes).fill(0);\n};\nexports.zeros = zeros;\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nvar setLength = function (msg, length, right) {\n    var buf = (0, exports.zeros)(length);\n    if (right) {\n        if (msg.length < length) {\n            msg.copy(buf);\n            return buf;\n        }\n        return msg.slice(0, length);\n    }\n    else {\n        if (msg.length < length) {\n            msg.copy(buf, length - msg.length);\n            return buf;\n        }\n        return msg.slice(-length);\n    }\n};\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nvar setLengthLeft = function (msg, length) {\n    (0, helpers_1.assertIsBuffer)(msg);\n    return setLength(msg, length, false);\n};\nexports.setLengthLeft = setLengthLeft;\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nvar setLengthRight = function (msg, length) {\n    (0, helpers_1.assertIsBuffer)(msg);\n    return setLength(msg, length, true);\n};\nexports.setLengthRight = setLengthRight;\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nvar stripZeros = function (a) {\n    var first = a[0];\n    while (a.length > 0 && first.toString() === '0') {\n        a = a.slice(1);\n        first = a[0];\n    }\n    return a;\n};\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nvar unpadBuffer = function (a) {\n    (0, helpers_1.assertIsBuffer)(a);\n    return stripZeros(a);\n};\nexports.unpadBuffer = unpadBuffer;\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nvar unpadArray = function (a) {\n    (0, helpers_1.assertIsArray)(a);\n    return stripZeros(a);\n};\nexports.unpadArray = unpadArray;\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nvar unpadHexString = function (a) {\n    (0, helpers_1.assertIsHexString)(a);\n    a = (0, internal_1.stripHexPrefix)(a);\n    return stripZeros(a);\n};\nexports.unpadHexString = unpadHexString;\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BN` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nvar toBuffer = function (v) {\n    if (v === null || v === undefined) {\n        return Buffer.allocUnsafe(0);\n    }\n    if (Buffer.isBuffer(v)) {\n        return Buffer.from(v);\n    }\n    if (Array.isArray(v) || v instanceof Uint8Array) {\n        return Buffer.from(v);\n    }\n    if (typeof v === 'string') {\n        if (!(0, internal_1.isHexString)(v)) {\n            throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \".concat(v));\n        }\n        return Buffer.from((0, internal_1.padToEven)((0, internal_1.stripHexPrefix)(v)), 'hex');\n    }\n    if (typeof v === 'number') {\n        return (0, exports.intToBuffer)(v);\n    }\n    if (externals_1.BN.isBN(v)) {\n        if (v.isNeg()) {\n            throw new Error(\"Cannot convert negative BN to buffer. Given: \".concat(v));\n        }\n        return v.toArrayLike(Buffer);\n    }\n    if (v.toArray) {\n        // converts a BN to a Buffer\n        return Buffer.from(v.toArray());\n    }\n    if (v.toBuffer) {\n        return Buffer.from(v.toBuffer());\n    }\n    throw new Error('invalid type');\n};\nexports.toBuffer = toBuffer;\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nvar bufferToInt = function (buf) {\n    return new externals_1.BN((0, exports.toBuffer)(buf)).toNumber();\n};\nexports.bufferToInt = bufferToInt;\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nvar bufferToHex = function (buf) {\n    buf = (0, exports.toBuffer)(buf);\n    return '0x' + buf.toString('hex');\n};\nexports.bufferToHex = bufferToHex;\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nvar fromSigned = function (num) {\n    return new externals_1.BN(num).fromTwos(256);\n};\nexports.fromSigned = fromSigned;\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nvar toUnsigned = function (num) {\n    return Buffer.from(num.toTwos(256).toArray());\n};\nexports.toUnsigned = toUnsigned;\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nvar addHexPrefix = function (str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return (0, internal_1.isHexPrefixed)(str) ? str : '0x' + str;\n};\nexports.addHexPrefix = addHexPrefix;\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nvar toUtf8 = function (hex) {\n    var zerosRegexp = /^(00)+|(00)+$/g;\n    hex = (0, internal_1.stripHexPrefix)(hex);\n    if (hex.length % 2 !== 0) {\n        throw new Error('Invalid non-even hex string input for toUtf8() provided');\n    }\n    var bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex');\n    return bufferVal.toString('utf8');\n};\nexports.toUtf8 = toUtf8;\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nvar baToJSON = function (ba) {\n    if (Buffer.isBuffer(ba)) {\n        return \"0x\".concat(ba.toString('hex'));\n    }\n    else if (ba instanceof Array) {\n        var array = [];\n        for (var i = 0; i < ba.length; i++) {\n            array.push((0, exports.baToJSON)(ba[i]));\n        }\n        return array;\n    }\n};\nexports.baToJSON = baToJSON;\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nvar validateNoLeadingZeroes = function (values) {\n    var e_1, _a;\n    try {\n        for (var _b = __values(Object.entries(values)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var _d = __read(_c.value, 2), k = _d[0], v = _d[1];\n            if (v !== undefined && v.length > 0 && v[0] === 0) {\n                throw new Error(\"\".concat(k, \" cannot have leading zeroes, received: \").concat(v.toString('hex')));\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n};\nexports.validateNoLeadingZeroes = validateNoLeadingZeroes;\nfunction arrToBufArr(arr) {\n    if (!Array.isArray(arr)) {\n        return Buffer.from(arr);\n    }\n    return arr.map(function (a) { return arrToBufArr(a); });\n}\nexports.arrToBufArr = arrToBufArr;\nfunction bufArrToArr(arr) {\n    if (!Array.isArray(arr)) {\n        return Uint8Array.from(arr !== null && arr !== void 0 ? arr : []);\n    }\n    return arr.map(function (a) { return bufArrToArr(a); });\n}\nexports.bufArrToArr = bufArrToArr;\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.MAX_INTEGER = exports.MAX_UINT64 = void 0;\nvar buffer_1 = require(\"buffer\");\nvar externals_1 = require(\"./externals\");\n/**\n * 2^64-1\n */\nexports.MAX_UINT64 = new externals_1.BN('ffffffffffffffff', 16);\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexports.MAX_INTEGER = new externals_1.BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256\n */\nexports.TWO_POW256 = new externals_1.BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL = buffer_1.Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY = buffer_1.Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP = buffer_1.Buffer.from(exports.KECCAK256_RLP_S, 'hex');\n//# sourceMappingURL=constants.js.map","\"use strict\";\n/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rlp = exports.BN = void 0;\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nexports.BN = bn_js_1.default;\nvar rlp = __importStar(require(\"rlp\"));\nexports.rlp = rlp;\n//# sourceMappingURL=externals.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rlphash = exports.ripemd160FromArray = exports.ripemd160FromString = exports.ripemd160 = exports.sha256FromArray = exports.sha256FromString = exports.sha256 = exports.keccakFromArray = exports.keccakFromHexString = exports.keccakFromString = exports.keccak256 = exports.keccak = void 0;\nvar keccak_1 = require(\"ethereum-cryptography/keccak\");\nvar createHash = require('create-hash');\nvar externals_1 = require(\"./externals\");\nvar bytes_1 = require(\"./bytes\");\nvar helpers_1 = require(\"./helpers\");\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nvar keccak = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    (0, helpers_1.assertIsBuffer)(a);\n    switch (bits) {\n        case 224: {\n            return (0, keccak_1.keccak224)(a);\n        }\n        case 256: {\n            return (0, keccak_1.keccak256)(a);\n        }\n        case 384: {\n            return (0, keccak_1.keccak384)(a);\n        }\n        case 512: {\n            return (0, keccak_1.keccak512)(a);\n        }\n        default: {\n            throw new Error(\"Invald algorithm: keccak\".concat(bits));\n        }\n    }\n};\nexports.keccak = keccak;\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nvar keccak256 = function (a) {\n    return (0, exports.keccak)(a);\n};\nexports.keccak256 = keccak256;\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nvar keccakFromString = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    (0, helpers_1.assertIsString)(a);\n    var buf = Buffer.from(a, 'utf8');\n    return (0, exports.keccak)(buf, bits);\n};\nexports.keccakFromString = keccakFromString;\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nvar keccakFromHexString = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    (0, helpers_1.assertIsHexString)(a);\n    return (0, exports.keccak)((0, bytes_1.toBuffer)(a), bits);\n};\nexports.keccakFromHexString = keccakFromHexString;\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nvar keccakFromArray = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    (0, helpers_1.assertIsArray)(a);\n    return (0, exports.keccak)((0, bytes_1.toBuffer)(a), bits);\n};\nexports.keccakFromArray = keccakFromArray;\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nvar _sha256 = function (a) {\n    a = (0, bytes_1.toBuffer)(a);\n    return createHash('sha256').update(a).digest();\n};\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nvar sha256 = function (a) {\n    (0, helpers_1.assertIsBuffer)(a);\n    return _sha256(a);\n};\nexports.sha256 = sha256;\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nvar sha256FromString = function (a) {\n    (0, helpers_1.assertIsString)(a);\n    return _sha256(a);\n};\nexports.sha256FromString = sha256FromString;\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nvar sha256FromArray = function (a) {\n    (0, helpers_1.assertIsArray)(a);\n    return _sha256(a);\n};\nexports.sha256FromArray = sha256FromArray;\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nvar _ripemd160 = function (a, padded) {\n    a = (0, bytes_1.toBuffer)(a);\n    var hash = createHash('rmd160').update(a).digest();\n    if (padded === true) {\n        return (0, bytes_1.setLengthLeft)(hash, 32);\n    }\n    else {\n        return hash;\n    }\n};\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nvar ripemd160 = function (a, padded) {\n    (0, helpers_1.assertIsBuffer)(a);\n    return _ripemd160(a, padded);\n};\nexports.ripemd160 = ripemd160;\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nvar ripemd160FromString = function (a, padded) {\n    (0, helpers_1.assertIsString)(a);\n    return _ripemd160(a, padded);\n};\nexports.ripemd160FromString = ripemd160FromString;\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nvar ripemd160FromArray = function (a, padded) {\n    (0, helpers_1.assertIsArray)(a);\n    return _ripemd160(a, padded);\n};\nexports.ripemd160FromArray = ripemd160FromArray;\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nvar rlphash = function (a) {\n    return (0, exports.keccak)(externals_1.rlp.encode(a));\n};\nexports.rlphash = rlphash;\n//# sourceMappingURL=hash.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertIsString = exports.assertIsArray = exports.assertIsBuffer = exports.assertIsHexString = void 0;\nvar internal_1 = require(\"./internal\");\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nvar assertIsHexString = function (input) {\n    if (!(0, internal_1.isHexString)(input)) {\n        var msg = \"This method only supports 0x-prefixed hex strings but input was: \".concat(input);\n        throw new Error(msg);\n    }\n};\nexports.assertIsHexString = assertIsHexString;\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nvar assertIsBuffer = function (input) {\n    if (!Buffer.isBuffer(input)) {\n        var msg = \"This method only supports Buffer but input was: \".concat(input);\n        throw new Error(msg);\n    }\n};\nexports.assertIsBuffer = assertIsBuffer;\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nvar assertIsArray = function (input) {\n    if (!Array.isArray(input)) {\n        var msg = \"This method only supports number arrays but input was: \".concat(input);\n        throw new Error(msg);\n    }\n};\nexports.assertIsArray = assertIsArray;\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nvar assertIsString = function (input) {\n    if (typeof input !== 'string') {\n        var msg = \"This method only supports strings but input was: \".concat(input);\n        throw new Error(msg);\n    }\n};\nexports.assertIsString = assertIsString;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isHexString = exports.getKeys = exports.fromAscii = exports.fromUtf8 = exports.toAscii = exports.arrayContainsArray = exports.getBinarySize = exports.padToEven = exports.stripHexPrefix = exports.isHexPrefixed = void 0;\n/**\n * Constants\n */\n__exportStar(require(\"./constants\"), exports);\n/**\n * Account class and helper functions\n */\n__exportStar(require(\"./account\"), exports);\n/**\n * Address type\n */\n__exportStar(require(\"./address\"), exports);\n/**\n * Hash functions\n */\n__exportStar(require(\"./hash\"), exports);\n/**\n * ECDSA signature\n */\n__exportStar(require(\"./signature\"), exports);\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n__exportStar(require(\"./bytes\"), exports);\n/**\n * Function for definining properties on an object\n */\n__exportStar(require(\"./object\"), exports);\n/**\n * External exports (BN, rlp)\n */\n__exportStar(require(\"./externals\"), exports);\n/**\n * Helpful TypeScript types\n */\n__exportStar(require(\"./types\"), exports);\n/**\n * Export ethjs-util methods\n */\nvar internal_1 = require(\"./internal\");\nObject.defineProperty(exports, \"isHexPrefixed\", { enumerable: true, get: function () { return internal_1.isHexPrefixed; } });\nObject.defineProperty(exports, \"stripHexPrefix\", { enumerable: true, get: function () { return internal_1.stripHexPrefix; } });\nObject.defineProperty(exports, \"padToEven\", { enumerable: true, get: function () { return internal_1.padToEven; } });\nObject.defineProperty(exports, \"getBinarySize\", { enumerable: true, get: function () { return internal_1.getBinarySize; } });\nObject.defineProperty(exports, \"arrayContainsArray\", { enumerable: true, get: function () { return internal_1.arrayContainsArray; } });\nObject.defineProperty(exports, \"toAscii\", { enumerable: true, get: function () { return internal_1.toAscii; } });\nObject.defineProperty(exports, \"fromUtf8\", { enumerable: true, get: function () { return internal_1.fromUtf8; } });\nObject.defineProperty(exports, \"fromAscii\", { enumerable: true, get: function () { return internal_1.fromAscii; } });\nObject.defineProperty(exports, \"getKeys\", { enumerable: true, get: function () { return internal_1.getKeys; } });\nObject.defineProperty(exports, \"isHexString\", { enumerable: true, get: function () { return internal_1.isHexString; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isHexString = exports.getKeys = exports.fromAscii = exports.fromUtf8 = exports.toAscii = exports.arrayContainsArray = exports.getBinarySize = exports.padToEven = exports.stripHexPrefix = exports.isHexPrefixed = void 0;\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nfunction isHexPrefixed(str) {\n    if (typeof str !== 'string') {\n        throw new Error(\"[isHexPrefixed] input must be type 'string', received type \".concat(typeof str));\n    }\n    return str[0] === '0' && str[1] === 'x';\n}\nexports.isHexPrefixed = isHexPrefixed;\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nvar stripHexPrefix = function (str) {\n    if (typeof str !== 'string')\n        throw new Error(\"[stripHexPrefix] input must be type 'string', received \".concat(typeof str));\n    return isHexPrefixed(str) ? str.slice(2) : str;\n};\nexports.stripHexPrefix = stripHexPrefix;\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nfunction padToEven(value) {\n    var a = value;\n    if (typeof a !== 'string') {\n        throw new Error(\"[padToEven] value must be type 'string', received \".concat(typeof a));\n    }\n    if (a.length % 2)\n        a = \"0\".concat(a);\n    return a;\n}\nexports.padToEven = padToEven;\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nfunction getBinarySize(str) {\n    if (typeof str !== 'string') {\n        throw new Error(\"[getBinarySize] method requires input type 'string', recieved \".concat(typeof str));\n    }\n    return Buffer.byteLength(str, 'utf8');\n}\nexports.getBinarySize = getBinarySize;\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nfunction arrayContainsArray(superset, subset, some) {\n    if (Array.isArray(superset) !== true) {\n        throw new Error(\"[arrayContainsArray] method requires input 'superset' to be an array, got type '\".concat(typeof superset, \"'\"));\n    }\n    if (Array.isArray(subset) !== true) {\n        throw new Error(\"[arrayContainsArray] method requires input 'subset' to be an array, got type '\".concat(typeof subset, \"'\"));\n    }\n    return subset[some ? 'some' : 'every'](function (value) { return superset.indexOf(value) >= 0; });\n}\nexports.arrayContainsArray = arrayContainsArray;\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nfunction toAscii(hex) {\n    var str = '';\n    var i = 0;\n    var l = hex.length;\n    if (hex.substring(0, 2) === '0x')\n        i = 2;\n    for (; i < l; i += 2) {\n        var code = parseInt(hex.substr(i, 2), 16);\n        str += String.fromCharCode(code);\n    }\n    return str;\n}\nexports.toAscii = toAscii;\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n    var str = Buffer.from(stringValue, 'utf8');\n    return \"0x\".concat(padToEven(str.toString('hex')).replace(/^0+|0+$/g, ''));\n}\nexports.fromUtf8 = fromUtf8;\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nfunction fromAscii(stringValue) {\n    var hex = '';\n    for (var i = 0; i < stringValue.length; i++) {\n        var code = stringValue.charCodeAt(i);\n        var n = code.toString(16);\n        hex += n.length < 2 ? \"0\".concat(n) : n;\n    }\n    return \"0x\".concat(hex);\n}\nexports.fromAscii = fromAscii;\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n    if (!Array.isArray(params)) {\n        throw new Error(\"[getKeys] method expects input 'params' to be an array, got \".concat(typeof params));\n    }\n    if (typeof key !== 'string') {\n        throw new Error(\"[getKeys] method expects input 'key' to be type 'string', got \".concat(typeof params));\n    }\n    var result = [];\n    for (var i = 0; i < params.length; i++) {\n        var value = params[i][key];\n        if (allowEmpty && !value) {\n            value = '';\n        }\n        else if (typeof value !== 'string') {\n            throw new Error(\"invalid abi - expected type 'string', received \".concat(typeof value));\n        }\n        result.push(value);\n    }\n    return result;\n}\nexports.getKeys = getKeys;\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nfunction isHexString(value, length) {\n    if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/))\n        return false;\n    if (length && value.length !== 2 + 2 * length)\n        return false;\n    return true;\n}\nexports.isHexString = isHexString;\n//# sourceMappingURL=internal.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defineProperties = void 0;\nvar assert_1 = __importDefault(require(\"assert\"));\nvar internal_1 = require(\"./internal\");\nvar externals_1 = require(\"./externals\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nvar defineProperties = function (self, fields, data) {\n    self.raw = [];\n    self._fields = [];\n    // attach the `toJSON`\n    self.toJSON = function (label) {\n        if (label === void 0) { label = false; }\n        if (label) {\n            var obj_1 = {};\n            self._fields.forEach(function (field) {\n                obj_1[field] = \"0x\".concat(self[field].toString('hex'));\n            });\n            return obj_1;\n        }\n        return (0, bytes_1.baToJSON)(self.raw);\n    };\n    self.serialize = function serialize() {\n        return externals_1.rlp.encode(self.raw);\n    };\n    fields.forEach(function (field, i) {\n        self._fields.push(field.name);\n        function getter() {\n            return self.raw[i];\n        }\n        function setter(v) {\n            v = (0, bytes_1.toBuffer)(v);\n            if (v.toString('hex') === '00' && !field.allowZero) {\n                v = Buffer.allocUnsafe(0);\n            }\n            if (field.allowLess && field.length) {\n                v = (0, bytes_1.unpadBuffer)(v);\n                (0, assert_1.default)(field.length >= v.length, \"The field \".concat(field.name, \" must not have more \").concat(field.length, \" bytes\"));\n            }\n            else if (!(field.allowZero && v.length === 0) && field.length) {\n                (0, assert_1.default)(field.length === v.length, \"The field \".concat(field.name, \" must have byte length of \").concat(field.length));\n            }\n            self.raw[i] = v;\n        }\n        Object.defineProperty(self, field.name, {\n            enumerable: true,\n            configurable: true,\n            get: getter,\n            set: setter,\n        });\n        if (field.default) {\n            self[field.name] = field.default;\n        }\n        // attach alias\n        if (field.alias) {\n            Object.defineProperty(self, field.alias, {\n                enumerable: false,\n                configurable: true,\n                set: setter,\n                get: getter,\n            });\n        }\n    });\n    // if the constuctor is passed data\n    if (data) {\n        if (typeof data === 'string') {\n            data = Buffer.from((0, internal_1.stripHexPrefix)(data), 'hex');\n        }\n        if (Buffer.isBuffer(data)) {\n            data = externals_1.rlp.decode(data);\n        }\n        if (Array.isArray(data)) {\n            if (data.length > self._fields.length) {\n                throw new Error('wrong number of fields in data');\n            }\n            // make sure all the items are buffers\n            data.forEach(function (d, i) {\n                self[self._fields[i]] = (0, bytes_1.toBuffer)(d);\n            });\n        }\n        else if (typeof data === 'object') {\n            var keys_1 = Object.keys(data);\n            fields.forEach(function (field) {\n                if (keys_1.indexOf(field.name) !== -1)\n                    self[field.name] = data[field.name];\n                if (keys_1.indexOf(field.alias) !== -1)\n                    self[field.alias] = data[field.alias];\n            });\n        }\n        else {\n            throw new Error('invalid data');\n        }\n    }\n};\nexports.defineProperties = defineProperties;\n//# sourceMappingURL=object.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toCompactSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0;\nvar secp256k1_1 = require(\"ethereum-cryptography/secp256k1\");\nvar externals_1 = require(\"./externals\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\nvar helpers_1 = require(\"./helpers\");\nvar types_1 = require(\"./types\");\nfunction ecsign(msgHash, privateKey, chainId) {\n    var _a = (0, secp256k1_1.ecdsaSign)(msgHash, privateKey), signature = _a.signature, recovery = _a.recid;\n    var r = Buffer.from(signature.slice(0, 32));\n    var s = Buffer.from(signature.slice(32, 64));\n    if (!chainId || typeof chainId === 'number') {\n        // return legacy type ECDSASignature (deprecated in favor of ECDSASignatureBuffer to handle large chainIds)\n        if (chainId && !Number.isSafeInteger(chainId)) {\n            throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n        }\n        var v_1 = chainId ? recovery + (chainId * 2 + 35) : recovery + 27;\n        return { r: r, s: s, v: v_1 };\n    }\n    var chainIdBN = (0, types_1.toType)(chainId, types_1.TypeOutput.BN);\n    var v = chainIdBN.muln(2).addn(35).addn(recovery).toArrayLike(Buffer);\n    return { r: r, s: s, v: v };\n}\nexports.ecsign = ecsign;\nfunction calculateSigRecovery(v, chainId) {\n    var vBN = (0, types_1.toType)(v, types_1.TypeOutput.BN);\n    if (vBN.eqn(0) || vBN.eqn(1))\n        return (0, types_1.toType)(v, types_1.TypeOutput.BN);\n    if (!chainId) {\n        return vBN.subn(27);\n    }\n    var chainIdBN = (0, types_1.toType)(chainId, types_1.TypeOutput.BN);\n    return vBN.sub(chainIdBN.muln(2).addn(35));\n}\nfunction isValidSigRecovery(recovery) {\n    var rec = new externals_1.BN(recovery);\n    return rec.eqn(0) || rec.eqn(1);\n}\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nvar ecrecover = function (msgHash, v, r, s, chainId) {\n    var signature = Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(s, 32)], 64);\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    var senderPubKey = (0, secp256k1_1.ecdsaRecover)(signature, recovery.toNumber(), msgHash);\n    return Buffer.from((0, secp256k1_1.publicKeyConvert)(senderPubKey, false).slice(1));\n};\nexports.ecrecover = ecrecover;\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Signature\n */\nvar toRpcSig = function (v, r, s, chainId) {\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n    return (0, bytes_1.bufferToHex)(Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(s, 32), (0, bytes_1.toBuffer)(v)]));\n};\nexports.toRpcSig = toRpcSig;\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Signature\n */\nvar toCompactSig = function (v, r, s, chainId) {\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    var vn = (0, types_1.toType)(v, types_1.TypeOutput.Number);\n    var ss = s;\n    if ((vn > 28 && vn % 2 === 1) || vn === 1 || vn === 28) {\n        ss = Buffer.from(s);\n        ss[0] |= 0x80;\n    }\n    return (0, bytes_1.bufferToHex)(Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(ss, 32)]));\n};\nexports.toCompactSig = toCompactSig;\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nvar fromRpcSig = function (sig) {\n    var buf = (0, bytes_1.toBuffer)(sig);\n    var r;\n    var s;\n    var v;\n    if (buf.length >= 65) {\n        r = buf.slice(0, 32);\n        s = buf.slice(32, 64);\n        v = (0, bytes_1.bufferToInt)(buf.slice(64));\n    }\n    else if (buf.length === 64) {\n        // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n        r = buf.slice(0, 32);\n        s = buf.slice(32, 64);\n        v = (0, bytes_1.bufferToInt)(buf.slice(32, 33)) >> 7;\n        s[0] &= 0x7f;\n    }\n    else {\n        throw new Error('Invalid signature length');\n    }\n    // support both versions of `eth_sign` responses\n    if (v < 27) {\n        v += 27;\n    }\n    return {\n        v: v,\n        r: r,\n        s: s,\n    };\n};\nexports.fromRpcSig = fromRpcSig;\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nvar isValidSignature = function (v, r, s, homesteadOrLater, chainId) {\n    if (homesteadOrLater === void 0) { homesteadOrLater = true; }\n    var SECP256K1_N_DIV_2 = new externals_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n    var SECP256K1_N = new externals_1.BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n    if (r.length !== 32 || s.length !== 32) {\n        return false;\n    }\n    if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n        return false;\n    }\n    var rBN = new externals_1.BN(r);\n    var sBN = new externals_1.BN(s);\n    if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n        return false;\n    }\n    if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n        return false;\n    }\n    return true;\n};\nexports.isValidSignature = isValidSignature;\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nvar hashPersonalMessage = function (message) {\n    (0, helpers_1.assertIsBuffer)(message);\n    var prefix = Buffer.from(\"\\u0019Ethereum Signed Message:\\n\".concat(message.length), 'utf-8');\n    return (0, hash_1.keccak)(Buffer.concat([prefix, message]));\n};\nexports.hashPersonalMessage = hashPersonalMessage;\n//# sourceMappingURL=signature.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toType = exports.TypeOutput = exports.bnToRlp = exports.bnToUnpaddedBuffer = exports.bnToHex = void 0;\nvar externals_1 = require(\"./externals\");\nvar internal_1 = require(\"./internal\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nfunction bnToHex(value) {\n    return \"0x\".concat(value.toString(16));\n}\nexports.bnToHex = bnToHex;\n/**\n * Convert value from BN to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nfunction bnToUnpaddedBuffer(value) {\n    // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n    // for compatibility with browserify and similar tools\n    return (0, bytes_1.unpadBuffer)(value.toArrayLike(Buffer));\n}\nexports.bnToUnpaddedBuffer = bnToUnpaddedBuffer;\n/**\n * Deprecated alias for {@link bnToUnpaddedBuffer}\n * @deprecated\n */\nfunction bnToRlp(value) {\n    return bnToUnpaddedBuffer(value);\n}\nexports.bnToRlp = bnToRlp;\n/**\n * Type output options\n */\nvar TypeOutput;\n(function (TypeOutput) {\n    TypeOutput[TypeOutput[\"Number\"] = 0] = \"Number\";\n    TypeOutput[TypeOutput[\"BN\"] = 1] = \"BN\";\n    TypeOutput[TypeOutput[\"Buffer\"] = 2] = \"Buffer\";\n    TypeOutput[TypeOutput[\"PrefixedHexString\"] = 3] = \"PrefixedHexString\";\n})(TypeOutput = exports.TypeOutput || (exports.TypeOutput = {}));\nfunction toType(input, outputType) {\n    if (input === null) {\n        return null;\n    }\n    if (input === undefined) {\n        return undefined;\n    }\n    if (typeof input === 'string' && !(0, internal_1.isHexString)(input)) {\n        throw new Error(\"A string must be provided with a 0x-prefix, given: \".concat(input));\n    }\n    else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n        throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n    }\n    var output = (0, bytes_1.toBuffer)(input);\n    if (outputType === TypeOutput.Buffer) {\n        return output;\n    }\n    else if (outputType === TypeOutput.BN) {\n        return new externals_1.BN(output);\n    }\n    else if (outputType === TypeOutput.Number) {\n        var bn = new externals_1.BN(output);\n        var max = new externals_1.BN(Number.MAX_SAFE_INTEGER.toString());\n        if (bn.gt(max)) {\n            throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)');\n        }\n        return bn.toNumber();\n    }\n    else {\n        // outputType === TypeOutput.PrefixedHexString\n        return \"0x\".concat(output.toString('hex'));\n    }\n}\nexports.toType = toType;\n//# sourceMappingURL=types.js.map","module.exports = require('./lib/api')(require('./lib/keccak'))\n","const createKeccak = require('./keccak')\nconst createShake = require('./shake')\n\nmodule.exports = function (KeccakState) {\n  const Keccak = createKeccak(KeccakState)\n  const Shake = createShake(KeccakState)\n\n  return function (algorithm, options) {\n    const hash = typeof algorithm === 'string' ? algorithm.toLowerCase() : algorithm\n    switch (hash) {\n      case 'keccak224': return new Keccak(1152, 448, null, 224, options)\n      case 'keccak256': return new Keccak(1088, 512, null, 256, options)\n      case 'keccak384': return new Keccak(832, 768, null, 384, options)\n      case 'keccak512': return new Keccak(576, 1024, null, 512, options)\n\n      case 'sha3-224': return new Keccak(1152, 448, 0x06, 224, options)\n      case 'sha3-256': return new Keccak(1088, 512, 0x06, 256, options)\n      case 'sha3-384': return new Keccak(832, 768, 0x06, 384, options)\n      case 'sha3-512': return new Keccak(576, 1024, 0x06, 512, options)\n\n      case 'shake128': return new Shake(1344, 256, 0x1f, options)\n      case 'shake256': return new Shake(1088, 512, 0x1f, options)\n\n      default: throw new Error('Invald algorithm: ' + algorithm)\n    }\n  }\n}\n","const { Transform } = require('readable-stream')\n\nmodule.exports = (KeccakState) => class Keccak extends Transform {\n  constructor (rate, capacity, delimitedSuffix, hashBitLength, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._hashBitLength = hashBitLength\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush (callback) {\n    let error = null\n    try {\n      this.push(this.digest())\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Digest already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  digest (encoding) {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix)\n    let digest = this._state.squeeze(this._hashBitLength / 8)\n    if (encoding !== undefined) digest = digest.toString(encoding)\n\n    this._resetState()\n\n    return digest\n  }\n\n  // remove result from memory\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  // because sometimes we need hash right now and little later\n  _clone () {\n    const clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n","const { Transform } = require('readable-stream')\n\nmodule.exports = (KeccakState) => class Shake extends Transform {\n  constructor (rate, capacity, delimitedSuffix, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush () {}\n\n  _read (size) {\n    this.push(this.squeeze(size))\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  squeeze (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    let data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  _clone () {\n    const clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n","const P1600_ROUND_CONSTANTS = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648]\n\nexports.p1600 = function (s) {\n  for (let round = 0; round < 24; ++round) {\n    // theta\n    const lo0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40]\n    const hi0 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41]\n    const lo1 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42]\n    const hi1 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43]\n    const lo2 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44]\n    const hi2 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45]\n    const lo3 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46]\n    const hi3 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47]\n    const lo4 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48]\n    const hi4 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49]\n\n    let lo = lo4 ^ (lo1 << 1 | hi1 >>> 31)\n    let hi = hi4 ^ (hi1 << 1 | lo1 >>> 31)\n    const t1slo0 = s[0] ^ lo\n    const t1shi0 = s[1] ^ hi\n    const t1slo5 = s[10] ^ lo\n    const t1shi5 = s[11] ^ hi\n    const t1slo10 = s[20] ^ lo\n    const t1shi10 = s[21] ^ hi\n    const t1slo15 = s[30] ^ lo\n    const t1shi15 = s[31] ^ hi\n    const t1slo20 = s[40] ^ lo\n    const t1shi20 = s[41] ^ hi\n    lo = lo0 ^ (lo2 << 1 | hi2 >>> 31)\n    hi = hi0 ^ (hi2 << 1 | lo2 >>> 31)\n    const t1slo1 = s[2] ^ lo\n    const t1shi1 = s[3] ^ hi\n    const t1slo6 = s[12] ^ lo\n    const t1shi6 = s[13] ^ hi\n    const t1slo11 = s[22] ^ lo\n    const t1shi11 = s[23] ^ hi\n    const t1slo16 = s[32] ^ lo\n    const t1shi16 = s[33] ^ hi\n    const t1slo21 = s[42] ^ lo\n    const t1shi21 = s[43] ^ hi\n    lo = lo1 ^ (lo3 << 1 | hi3 >>> 31)\n    hi = hi1 ^ (hi3 << 1 | lo3 >>> 31)\n    const t1slo2 = s[4] ^ lo\n    const t1shi2 = s[5] ^ hi\n    const t1slo7 = s[14] ^ lo\n    const t1shi7 = s[15] ^ hi\n    const t1slo12 = s[24] ^ lo\n    const t1shi12 = s[25] ^ hi\n    const t1slo17 = s[34] ^ lo\n    const t1shi17 = s[35] ^ hi\n    const t1slo22 = s[44] ^ lo\n    const t1shi22 = s[45] ^ hi\n    lo = lo2 ^ (lo4 << 1 | hi4 >>> 31)\n    hi = hi2 ^ (hi4 << 1 | lo4 >>> 31)\n    const t1slo3 = s[6] ^ lo\n    const t1shi3 = s[7] ^ hi\n    const t1slo8 = s[16] ^ lo\n    const t1shi8 = s[17] ^ hi\n    const t1slo13 = s[26] ^ lo\n    const t1shi13 = s[27] ^ hi\n    const t1slo18 = s[36] ^ lo\n    const t1shi18 = s[37] ^ hi\n    const t1slo23 = s[46] ^ lo\n    const t1shi23 = s[47] ^ hi\n    lo = lo3 ^ (lo0 << 1 | hi0 >>> 31)\n    hi = hi3 ^ (hi0 << 1 | lo0 >>> 31)\n    const t1slo4 = s[8] ^ lo\n    const t1shi4 = s[9] ^ hi\n    const t1slo9 = s[18] ^ lo\n    const t1shi9 = s[19] ^ hi\n    const t1slo14 = s[28] ^ lo\n    const t1shi14 = s[29] ^ hi\n    const t1slo19 = s[38] ^ lo\n    const t1shi19 = s[39] ^ hi\n    const t1slo24 = s[48] ^ lo\n    const t1shi24 = s[49] ^ hi\n\n    // rho & pi\n    const t2slo0 = t1slo0\n    const t2shi0 = t1shi0\n    const t2slo16 = (t1shi5 << 4 | t1slo5 >>> 28)\n    const t2shi16 = (t1slo5 << 4 | t1shi5 >>> 28)\n    const t2slo7 = (t1slo10 << 3 | t1shi10 >>> 29)\n    const t2shi7 = (t1shi10 << 3 | t1slo10 >>> 29)\n    const t2slo23 = (t1shi15 << 9 | t1slo15 >>> 23)\n    const t2shi23 = (t1slo15 << 9 | t1shi15 >>> 23)\n    const t2slo14 = (t1slo20 << 18 | t1shi20 >>> 14)\n    const t2shi14 = (t1shi20 << 18 | t1slo20 >>> 14)\n    const t2slo10 = (t1slo1 << 1 | t1shi1 >>> 31)\n    const t2shi10 = (t1shi1 << 1 | t1slo1 >>> 31)\n    const t2slo1 = (t1shi6 << 12 | t1slo6 >>> 20)\n    const t2shi1 = (t1slo6 << 12 | t1shi6 >>> 20)\n    const t2slo17 = (t1slo11 << 10 | t1shi11 >>> 22)\n    const t2shi17 = (t1shi11 << 10 | t1slo11 >>> 22)\n    const t2slo8 = (t1shi16 << 13 | t1slo16 >>> 19)\n    const t2shi8 = (t1slo16 << 13 | t1shi16 >>> 19)\n    const t2slo24 = (t1slo21 << 2 | t1shi21 >>> 30)\n    const t2shi24 = (t1shi21 << 2 | t1slo21 >>> 30)\n    const t2slo20 = (t1shi2 << 30 | t1slo2 >>> 2)\n    const t2shi20 = (t1slo2 << 30 | t1shi2 >>> 2)\n    const t2slo11 = (t1slo7 << 6 | t1shi7 >>> 26)\n    const t2shi11 = (t1shi7 << 6 | t1slo7 >>> 26)\n    const t2slo2 = (t1shi12 << 11 | t1slo12 >>> 21)\n    const t2shi2 = (t1slo12 << 11 | t1shi12 >>> 21)\n    const t2slo18 = (t1slo17 << 15 | t1shi17 >>> 17)\n    const t2shi18 = (t1shi17 << 15 | t1slo17 >>> 17)\n    const t2slo9 = (t1shi22 << 29 | t1slo22 >>> 3)\n    const t2shi9 = (t1slo22 << 29 | t1shi22 >>> 3)\n    const t2slo5 = (t1slo3 << 28 | t1shi3 >>> 4)\n    const t2shi5 = (t1shi3 << 28 | t1slo3 >>> 4)\n    const t2slo21 = (t1shi8 << 23 | t1slo8 >>> 9)\n    const t2shi21 = (t1slo8 << 23 | t1shi8 >>> 9)\n    const t2slo12 = (t1slo13 << 25 | t1shi13 >>> 7)\n    const t2shi12 = (t1shi13 << 25 | t1slo13 >>> 7)\n    const t2slo3 = (t1slo18 << 21 | t1shi18 >>> 11)\n    const t2shi3 = (t1shi18 << 21 | t1slo18 >>> 11)\n    const t2slo19 = (t1shi23 << 24 | t1slo23 >>> 8)\n    const t2shi19 = (t1slo23 << 24 | t1shi23 >>> 8)\n    const t2slo15 = (t1slo4 << 27 | t1shi4 >>> 5)\n    const t2shi15 = (t1shi4 << 27 | t1slo4 >>> 5)\n    const t2slo6 = (t1slo9 << 20 | t1shi9 >>> 12)\n    const t2shi6 = (t1shi9 << 20 | t1slo9 >>> 12)\n    const t2slo22 = (t1shi14 << 7 | t1slo14 >>> 25)\n    const t2shi22 = (t1slo14 << 7 | t1shi14 >>> 25)\n    const t2slo13 = (t1slo19 << 8 | t1shi19 >>> 24)\n    const t2shi13 = (t1shi19 << 8 | t1slo19 >>> 24)\n    const t2slo4 = (t1slo24 << 14 | t1shi24 >>> 18)\n    const t2shi4 = (t1shi24 << 14 | t1slo24 >>> 18)\n\n    // chi\n    s[0] = t2slo0 ^ (~t2slo1 & t2slo2)\n    s[1] = t2shi0 ^ (~t2shi1 & t2shi2)\n    s[10] = t2slo5 ^ (~t2slo6 & t2slo7)\n    s[11] = t2shi5 ^ (~t2shi6 & t2shi7)\n    s[20] = t2slo10 ^ (~t2slo11 & t2slo12)\n    s[21] = t2shi10 ^ (~t2shi11 & t2shi12)\n    s[30] = t2slo15 ^ (~t2slo16 & t2slo17)\n    s[31] = t2shi15 ^ (~t2shi16 & t2shi17)\n    s[40] = t2slo20 ^ (~t2slo21 & t2slo22)\n    s[41] = t2shi20 ^ (~t2shi21 & t2shi22)\n    s[2] = t2slo1 ^ (~t2slo2 & t2slo3)\n    s[3] = t2shi1 ^ (~t2shi2 & t2shi3)\n    s[12] = t2slo6 ^ (~t2slo7 & t2slo8)\n    s[13] = t2shi6 ^ (~t2shi7 & t2shi8)\n    s[22] = t2slo11 ^ (~t2slo12 & t2slo13)\n    s[23] = t2shi11 ^ (~t2shi12 & t2shi13)\n    s[32] = t2slo16 ^ (~t2slo17 & t2slo18)\n    s[33] = t2shi16 ^ (~t2shi17 & t2shi18)\n    s[42] = t2slo21 ^ (~t2slo22 & t2slo23)\n    s[43] = t2shi21 ^ (~t2shi22 & t2shi23)\n    s[4] = t2slo2 ^ (~t2slo3 & t2slo4)\n    s[5] = t2shi2 ^ (~t2shi3 & t2shi4)\n    s[14] = t2slo7 ^ (~t2slo8 & t2slo9)\n    s[15] = t2shi7 ^ (~t2shi8 & t2shi9)\n    s[24] = t2slo12 ^ (~t2slo13 & t2slo14)\n    s[25] = t2shi12 ^ (~t2shi13 & t2shi14)\n    s[34] = t2slo17 ^ (~t2slo18 & t2slo19)\n    s[35] = t2shi17 ^ (~t2shi18 & t2shi19)\n    s[44] = t2slo22 ^ (~t2slo23 & t2slo24)\n    s[45] = t2shi22 ^ (~t2shi23 & t2shi24)\n    s[6] = t2slo3 ^ (~t2slo4 & t2slo0)\n    s[7] = t2shi3 ^ (~t2shi4 & t2shi0)\n    s[16] = t2slo8 ^ (~t2slo9 & t2slo5)\n    s[17] = t2shi8 ^ (~t2shi9 & t2shi5)\n    s[26] = t2slo13 ^ (~t2slo14 & t2slo10)\n    s[27] = t2shi13 ^ (~t2shi14 & t2shi10)\n    s[36] = t2slo18 ^ (~t2slo19 & t2slo15)\n    s[37] = t2shi18 ^ (~t2shi19 & t2shi15)\n    s[46] = t2slo23 ^ (~t2slo24 & t2slo20)\n    s[47] = t2shi23 ^ (~t2shi24 & t2shi20)\n    s[8] = t2slo4 ^ (~t2slo0 & t2slo1)\n    s[9] = t2shi4 ^ (~t2shi0 & t2shi1)\n    s[18] = t2slo9 ^ (~t2slo5 & t2slo6)\n    s[19] = t2shi9 ^ (~t2shi5 & t2shi6)\n    s[28] = t2slo14 ^ (~t2slo10 & t2slo11)\n    s[29] = t2shi14 ^ (~t2shi10 & t2shi11)\n    s[38] = t2slo19 ^ (~t2slo15 & t2slo16)\n    s[39] = t2shi19 ^ (~t2shi15 & t2shi16)\n    s[48] = t2slo24 ^ (~t2slo20 & t2slo21)\n    s[49] = t2shi24 ^ (~t2shi20 & t2shi21)\n\n    // iota\n    s[0] ^= P1600_ROUND_CONSTANTS[round * 2]\n    s[1] ^= P1600_ROUND_CONSTANTS[round * 2 + 1]\n  }\n}\n","const keccakState = require('./keccak-state-unroll')\n\nfunction Keccak () {\n  // much faster than `new Array(50)`\n  this.state = [\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0\n  ]\n\n  this.blockSize = null\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (let i = 0; i < 50; ++i) this.state[i] = 0\n  this.blockSize = rate / 8\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.absorb = function (data) {\n  for (let i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << (8 * (this.count % 4))\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n}\n\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << (8 * (this.count % 4))\n  if ((bits & 0x80) !== 0 && this.count === (this.blockSize - 1)) keccakState.p1600(this.state)\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << (8 * ((this.blockSize - 1) % 4))\n  keccakState.p1600(this.state)\n  this.count = 0\n  this.squeezing = true\n}\n\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01)\n\n  const output = Buffer.alloc(length)\n  for (let i = 0; i < length; ++i) {\n    output[i] = (this.state[~~(this.count / 4)] >>> (8 * (this.count % 4))) & 0xff\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n\n  return output\n}\n\nKeccak.prototype.copy = function (dest) {\n  for (let i = 0; i < 50; ++i) dest.state[i] = this.state[i]\n  dest.blockSize = this.blockSize\n  dest.count = this.count\n  dest.squeezing = this.squeezing\n}\n\nmodule.exports = Keccak\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLength = exports.decode = exports.encode = void 0;\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * This function takes in a data, convert it to buffer if not, and a length for recursion\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        var output = [];\n        for (var i = 0; i < input.length; i++) {\n            output.push(encode(input[i]));\n        }\n        var buf = Buffer.concat(output);\n        return Buffer.concat([encodeLength(buf.length, 192), buf]);\n    }\n    else {\n        var inputBuf = toBuffer(input);\n        return inputBuf.length === 1 && inputBuf[0] < 128\n            ? inputBuf\n            : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf]);\n    }\n}\nexports.encode = encode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\nfunction safeParseInt(v, base) {\n    if (v[0] === '0' && v[1] === '0') {\n        throw new Error('invalid RLP: extra zeros');\n    }\n    return parseInt(v, base);\n}\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        return Buffer.from([len + offset]);\n    }\n    else {\n        var hexLength = intToHex(len);\n        var lLength = hexLength.length / 2;\n        var firstByte = intToHex(offset + 55 + lLength);\n        return Buffer.from(firstByte + hexLength, 'hex');\n    }\n}\nfunction decode(input, stream) {\n    if (stream === void 0) { stream = false; }\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var decoded = _decode(inputBuffer);\n    if (stream) {\n        return decoded;\n    }\n    if (decoded.remainder.length !== 0) {\n        throw new Error('invalid remainder');\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\nfunction getLength(input) {\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var firstByte = inputBuffer[0];\n    if (firstByte <= 0x7f) {\n        return inputBuffer.length;\n    }\n    else if (firstByte <= 0xb7) {\n        return firstByte - 0x7f;\n    }\n    else if (firstByte <= 0xbf) {\n        return firstByte - 0xb6;\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        return firstByte - 0xbf;\n    }\n    else {\n        // a list  over 55 bytes long\n        var llength = firstByte - 0xf6;\n        var length_1 = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16);\n        return llength + length_1;\n    }\n}\nexports.getLength = getLength;\n/** Decode an input with RLP */\nfunction _decode(input) {\n    var length, llength, data, innerRemainder, d;\n    var decoded = [];\n    var firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1),\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Buffer.from([]);\n        }\n        else {\n            data = input.slice(1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error('invalid rlp encoding: byte must be less 0x80');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length),\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error('invalid RLP: not enough bytes for string length');\n        }\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        if (length <= 55) {\n            throw new Error('invalid RLP: expected string length to be greater than 55');\n        }\n        data = input.slice(llength, length + llength);\n        if (data.length < length) {\n            throw new Error('invalid RLP: not enough bytes for string');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length + llength),\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = input.slice(1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length),\n        };\n    }\n    else {\n        // a list  over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        var totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error('invalid rlp: total length is larger than the data');\n        }\n        innerRemainder = input.slice(llength, totalLength);\n        if (innerRemainder.length === 0) {\n            throw new Error('invalid rlp, List has a invalid length');\n        }\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength),\n        };\n    }\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n    return str.slice(0, 2) === '0x';\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform an integer into its hexadecimal value */\nfunction intToHex(integer) {\n    if (integer < 0) {\n        throw new Error('Invalid integer as argument, must be unsigned!');\n    }\n    var hex = integer.toString(16);\n    return hex.length % 2 ? \"0\" + hex : hex;\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n    return a.length % 2 ? \"0\" + a : a;\n}\n/** Transform an integer into a Buffer */\nfunction intToBuffer(integer) {\n    var hex = intToHex(integer);\n    return Buffer.from(hex, 'hex');\n}\n/** Transform anything into a Buffer */\nfunction toBuffer(v) {\n    if (!Buffer.isBuffer(v)) {\n        if (typeof v === 'string') {\n            if (isHexPrefixed(v)) {\n                return Buffer.from(padToEven(stripHexPrefix(v)), 'hex');\n            }\n            else {\n                return Buffer.from(v);\n            }\n        }\n        else if (typeof v === 'number' || typeof v === 'bigint') {\n            if (!v) {\n                return Buffer.from([]);\n            }\n            else {\n                return intToBuffer(v);\n            }\n        }\n        else if (v === null || v === undefined) {\n            return Buffer.from([]);\n        }\n        else if (v instanceof Uint8Array) {\n            return Buffer.from(v);\n        }\n        else if (bn_js_1.default.isBN(v)) {\n            // converts a BN to a Buffer\n            return Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n}\n//# sourceMappingURL=index.js.map"],"names":["Object","defineProperty","exports","value","createHashFunction","hashConstructor","msg","hash","update","Buffer","from","digest","hash_utils_1","createKeccakHash","keccak224","keccak256","keccak384","keccak512","randombytes","getRandomBytes","bytes","Promise","resolve","reject","err","resp","getRandomBytesSync","__awaiter","this","thisArg","_arguments","P","generator","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","secp256k1_1","random_1","createPrivateKey","pk","_a","privateKeyVerify","createPrivateKeySync","m","p","hasOwnProperty","__export","__read","o","r","i","ar","error","__importDefault","mod","__esModule","isZeroAddress","zeroAddress","importPublic","privateToAddress","privateToPublic","publicToAddress","pubToAddress","isValidPublic","isValidPrivate","generateAddress2","generateAddress","isValidChecksumAddress","toChecksumAddress","isValidAddress","Account","assert_1","externals_1","internal_1","constants_1","bytes_1","hash_1","helpers_1","types_1","nonce","balance","stateRoot","codeHash","BN","KECCAK256_RLP","KECCAK256_NULL","_validate","fromAccountData","accountData","toBuffer","undefined","fromRlpSerializedAccount","serialized","values","rlp","decode","Array","isArray","Error","fromValuesArray","prototype","lt","raw","bnToUnpaddedBuffer","serialize","encode","isContract","equals","isEmpty","isZero","hexAddress","assertIsString","test","eip1191ChainId","assertIsHexString","address","stripHexPrefix","toLowerCase","prefix","toType","TypeOutput","toString","keccakFromString","ret","parseInt","toUpperCase","assertIsBuffer","nonceBN","rlphash","slice","toArray","salt","initCode","default","concat","privateKey","publicKey","sanitize","publicKeyVerify","pubKey","publicKeyConvert","keccak","publicKeyCreate","addr","zeros","bufferToHex","Address","account_1","buf","zero","fromString","str","fromPublicKey","isBuffer","fromPrivateKey","generate","isBN","toArrayLike","generate2","isPrecompileOrSystemAddress","addressBN","rangeMin","rangeMax","gte","lte","__values","s","bufArrToArr","arrToBufArr","validateNoLeadingZeroes","baToJSON","toUtf8","addHexPrefix","toUnsigned","fromSigned","bufferToInt","unpadHexString","unpadArray","unpadBuffer","setLengthRight","setLengthLeft","intToBuffer","intToHex","Number","isSafeInteger","hex","padToEven","allocUnsafe","fill","setLength","right","copy","stripZeros","a","first","assertIsArray","Uint8Array","isHexString","isNeg","toNumber","num","fromTwos","toTwos","isHexPrefixed","replace","ba","array","e_1","_b","entries","_c","_d","k","e_1_1","return","arr","map","KECCAK256_RLP_S","KECCAK256_RLP_ARRAY","KECCAK256_RLP_ARRAY_S","KECCAK256_NULL_S","TWO_POW256","MAX_INTEGER","MAX_UINT64","buffer_1","__createBinding","create","k2","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","get","__setModuleDefault","__importStar","bn_js_1","ripemd160FromArray","ripemd160FromString","ripemd160","sha256FromArray","sha256FromString","sha256","keccakFromArray","keccakFromHexString","keccak_1","createHash","bits","_sha256","_ripemd160","padded","input","__exportStar","getKeys","fromAscii","fromUtf8","toAscii","arrayContainsArray","getBinarySize","byteLength","superset","subset","some","indexOf","l","substring","code","substr","String","fromCharCode","stringValue","charCodeAt","params","key","allowEmpty","match","defineProperties","self","fields","data","_fields","toJSON","obj_1","forEach","field","getter","setter","allowZero","allowLess","name","set","alias","d","keys_1","keys","hashPersonalMessage","isValidSignature","fromRpcSig","toCompactSig","toRpcSig","ecrecover","ecsign","calculateSigRecovery","chainId","vBN","eqn","subn","chainIdBN","sub","muln","addn","isValidSigRecovery","recovery","rec","msgHash","ecdsaSign","signature","recid","senderPubKey","ecdsaRecover","vn","ss","sig","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","gt","cmp","message","bnToRlp","bnToHex","outputType","output","bn","max","MAX_SAFE_INTEGER","module","createKeccak","createShake","KeccakState","Keccak","Shake","algorithm","options","Transform","constructor","rate","capacity","delimitedSuffix","hashBitLength","super","_rate","_capacity","_delimitedSuffix","_hashBitLength","_options","_state","initialize","_finalized","_transform","chunk","encoding","callback","_flush","absorb","absorbLastFewBits","squeeze","_resetState","_clone","clone","_read","size","dataByteLength","P1600_ROUND_CONSTANTS","p1600","round","lo0","hi0","lo1","hi1","lo2","hi2","lo3","hi3","lo4","hi4","lo","hi","t1slo0","t1shi0","t1slo5","t1shi5","t1slo10","t1shi10","t1slo15","t1shi15","t1slo20","t1shi20","t1slo1","t1shi1","t1slo6","t1shi6","t1slo11","t1shi11","t1slo16","t1shi16","t1slo21","t1shi21","t1slo2","t1shi2","t1slo7","t1shi7","t1slo12","t1shi12","t1slo17","t1shi17","t1slo22","t1shi22","t1slo3","t1shi3","t1slo8","t1shi8","t1slo13","t1shi13","t1slo18","t1shi18","t1slo23","t1shi23","t1slo4","t1shi4","t1slo9","t1shi9","t1slo14","t1shi14","t1slo19","t1shi19","t1slo24","t1shi24","t2slo0","t2shi0","t2slo16","t2shi16","t2slo7","t2shi7","t2slo23","t2shi23","t2slo14","t2shi14","t2slo10","t2shi10","t2slo1","t2shi1","t2slo17","t2shi17","t2slo8","t2shi8","t2slo24","t2shi24","t2slo20","t2shi20","t2slo11","t2shi11","t2slo2","t2shi2","t2slo18","t2shi18","t2slo9","t2shi9","t2slo5","t2shi5","t2slo21","t2shi21","t2slo12","t2shi12","t2slo3","t2shi3","t2slo19","t2shi19","t2slo15","t2shi15","t2slo6","t2shi6","t2slo22","t2shi22","t2slo13","t2shi13","t2slo4","t2shi4","keccakState","state","blockSize","count","squeezing","alloc","dest","getLength","safeParseInt","base","encodeLength","len","offset","hexLength","firstByte","_decode","llength","innerRemainder","decoded","remainder","totalLength","integer","inputBuf","stream","inputBuffer"],"sourceRoot":""}