{"version":3,"file":"2158.js","mappings":"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","sources":["webpack://@web3os-core/kernel/./node_modules/.pnpm/arg@5.0.2/node_modules/arg/index.js","webpack://@web3os-core/kernel/./src/modules/socket/index.js","webpack://@web3os-core/kernel/./node_modules/.pnpm/shell-quote@1.7.3/node_modules/shell-quote/index.js"],"sourcesContent":["const flagSymbol = Symbol('arg flag');\n\nclass ArgError extends Error {\n\tconstructor(msg, code) {\n\t\tsuper(msg);\n\t\tthis.name = 'ArgError';\n\t\tthis.code = code;\n\n\t\tObject.setPrototypeOf(this, ArgError.prototype);\n\t}\n}\n\nfunction arg(\n\topts,\n\t{\n\t\targv = process.argv.slice(2),\n\t\tpermissive = false,\n\t\tstopAtPositional = false\n\t} = {}\n) {\n\tif (!opts) {\n\t\tthrow new ArgError(\n\t\t\t'argument specification object is required',\n\t\t\t'ARG_CONFIG_NO_SPEC'\n\t\t);\n\t}\n\n\tconst result = { _: [] };\n\n\tconst aliases = {};\n\tconst handlers = {};\n\n\tfor (const key of Object.keys(opts)) {\n\t\tif (!key) {\n\t\t\tthrow new ArgError(\n\t\t\t\t'argument key cannot be an empty string',\n\t\t\t\t'ARG_CONFIG_EMPTY_KEY'\n\t\t\t);\n\t\t}\n\n\t\tif (key[0] !== '-') {\n\t\t\tthrow new ArgError(\n\t\t\t\t`argument key must start with '-' but found: '${key}'`,\n\t\t\t\t'ARG_CONFIG_NONOPT_KEY'\n\t\t\t);\n\t\t}\n\n\t\tif (key.length === 1) {\n\t\t\tthrow new ArgError(\n\t\t\t\t`argument key must have a name; singular '-' keys are not allowed: ${key}`,\n\t\t\t\t'ARG_CONFIG_NONAME_KEY'\n\t\t\t);\n\t\t}\n\n\t\tif (typeof opts[key] === 'string') {\n\t\t\taliases[key] = opts[key];\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet type = opts[key];\n\t\tlet isFlag = false;\n\n\t\tif (\n\t\t\tArray.isArray(type) &&\n\t\t\ttype.length === 1 &&\n\t\t\ttypeof type[0] === 'function'\n\t\t) {\n\t\t\tconst [fn] = type;\n\t\t\ttype = (value, name, prev = []) => {\n\t\t\t\tprev.push(fn(value, name, prev[prev.length - 1]));\n\t\t\t\treturn prev;\n\t\t\t};\n\t\t\tisFlag = fn === Boolean || fn[flagSymbol] === true;\n\t\t} else if (typeof type === 'function') {\n\t\t\tisFlag = type === Boolean || type[flagSymbol] === true;\n\t\t} else {\n\t\t\tthrow new ArgError(\n\t\t\t\t`type missing or not a function or valid array type: ${key}`,\n\t\t\t\t'ARG_CONFIG_VAD_TYPE'\n\t\t\t);\n\t\t}\n\n\t\tif (key[1] !== '-' && key.length > 2) {\n\t\t\tthrow new ArgError(\n\t\t\t\t`short argument keys (with a single hyphen) must have only one character: ${key}`,\n\t\t\t\t'ARG_CONFIG_SHORTOPT_TOOLONG'\n\t\t\t);\n\t\t}\n\n\t\thandlers[key] = [type, isFlag];\n\t}\n\n\tfor (let i = 0, len = argv.length; i < len; i++) {\n\t\tconst wholeArg = argv[i];\n\n\t\tif (stopAtPositional && result._.length > 0) {\n\t\t\tresult._ = result._.concat(argv.slice(i));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (wholeArg === '--') {\n\t\t\tresult._ = result._.concat(argv.slice(i + 1));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (wholeArg.length > 1 && wholeArg[0] === '-') {\n\t\t\t/* eslint-disable operator-linebreak */\n\t\t\tconst separatedArguments =\n\t\t\t\twholeArg[1] === '-' || wholeArg.length === 2\n\t\t\t\t\t? [wholeArg]\n\t\t\t\t\t: wholeArg\n\t\t\t\t\t\t\t.slice(1)\n\t\t\t\t\t\t\t.split('')\n\t\t\t\t\t\t\t.map((a) => `-${a}`);\n\t\t\t/* eslint-enable operator-linebreak */\n\n\t\t\tfor (let j = 0; j < separatedArguments.length; j++) {\n\t\t\t\tconst arg = separatedArguments[j];\n\t\t\t\tconst [originalArgName, argStr] =\n\t\t\t\t\targ[1] === '-' ? arg.split(/=(.*)/, 2) : [arg, undefined];\n\n\t\t\t\tlet argName = originalArgName;\n\t\t\t\twhile (argName in aliases) {\n\t\t\t\t\targName = aliases[argName];\n\t\t\t\t}\n\n\t\t\t\tif (!(argName in handlers)) {\n\t\t\t\t\tif (permissive) {\n\t\t\t\t\t\tresult._.push(arg);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new ArgError(\n\t\t\t\t\t\t\t`unknown or unexpected option: ${originalArgName}`,\n\t\t\t\t\t\t\t'ARG_UNKNOWN_OPTION'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst [type, isFlag] = handlers[argName];\n\n\t\t\t\tif (!isFlag && j + 1 < separatedArguments.length) {\n\t\t\t\t\tthrow new ArgError(\n\t\t\t\t\t\t`option requires argument (but was followed by another short argument): ${originalArgName}`,\n\t\t\t\t\t\t'ARG_MISSING_REQUIRED_SHORTARG'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (isFlag) {\n\t\t\t\t\tresult[argName] = type(true, argName, result[argName]);\n\t\t\t\t} else if (argStr === undefined) {\n\t\t\t\t\tif (\n\t\t\t\t\t\targv.length < i + 2 ||\n\t\t\t\t\t\t(argv[i + 1].length > 1 &&\n\t\t\t\t\t\t\targv[i + 1][0] === '-' &&\n\t\t\t\t\t\t\t!(\n\t\t\t\t\t\t\t\targv[i + 1].match(/^-?\\d*(\\.(?=\\d))?\\d*$/) &&\n\t\t\t\t\t\t\t\t(type === Number ||\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\t\t\t\t(typeof BigInt !== 'undefined' && type === BigInt))\n\t\t\t\t\t\t\t))\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst extended =\n\t\t\t\t\t\t\toriginalArgName === argName ? '' : ` (alias for ${argName})`;\n\t\t\t\t\t\tthrow new ArgError(\n\t\t\t\t\t\t\t`option requires argument: ${originalArgName}${extended}`,\n\t\t\t\t\t\t\t'ARG_MISSING_REQUIRED_LONGARG'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult[argName] = type(argv[i + 1], argName, result[argName]);\n\t\t\t\t\t++i;\n\t\t\t\t} else {\n\t\t\t\t\tresult[argName] = type(argStr, argName, result[argName]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tresult._.push(wholeArg);\n\t\t}\n\t}\n\n\treturn result;\n}\n\narg.flag = (fn) => {\n\tfn[flagSymbol] = true;\n\treturn fn;\n};\n\n// Utility types\narg.COUNT = arg.flag((v, name, existingCount) => (existingCount || 0) + 1);\n\n// Expose error class\narg.ArgError = ArgError;\n\nmodule.exports = arg;\n","import arg from 'arg'\r\nimport colors from 'ansi-colors'\r\nimport columnify from 'columnify'\r\nimport { parse as cliParse } from 'shell-quote'\r\n\r\nconst { t } = Kernel.i18n\r\n\r\nexport let connections = []\r\n\r\nexport const name = 'socket'\r\nexport const version = '0.1.0'\r\nexport const description = 'WebSocket Utility'\r\nexport const help = `\r\n  Usage:\r\n    socket attach <id>               Attach a new terminal to the socket (id may be a partial match)\r\n    socket connect <url>             Create a WebSocket connection\r\n    socket disconnect <id>           Disconnect the WebSocket session (id may be a partial match)\r\n    socket ls                        List connected sockets\r\n\r\n  Options:\r\n    --help                           Print this help message\r\n    --version                        Print the version information\r\n`\r\n\r\nexport const spec = {\r\n  '--help': Boolean,\r\n  '--version': Boolean\r\n}\r\n\r\nlet term = Terminal\r\n\r\nexport async function attach (id, args) {\r\n  let fitInterval\r\n  const socket = connections.find(socket => socket.id.includes(id))\r\n  if (!socket) throw new Error(t('app:socket.socketNotFound', 'Socket not found'))\r\n  const mount = document.createElement('div')\r\n  mount.style.height = '100%'\r\n\r\n  const app = term.kernel.windows.create({\r\n    title: `Socket: ${socket.id}`,\r\n    mount,\r\n    max: true,\r\n    x: 'center',\r\n    y: 'center',\r\n    onclose: () => {\r\n      clearInterval(fitInterval)\r\n    }\r\n  })\r\n\r\n  app.window.body.style.overflowY = 'hidden'\r\n\r\n  const socketTerm = term.kernel.Web3osTerminal.create({\r\n    socket: socket.socket,\r\n    kernel: term.kernel,\r\n    fontSize: 22\r\n  })\r\n\r\n  socketTerm.open(mount)\r\n  mount.querySelector('.xterm').style.position = 'unset'\r\n  fitInterval = setInterval(() => socketTerm.fit(), 200)\r\n  socketTerm.focus()\r\n\r\n  socket.socket.closeListeners.push(() => {\r\n    console.log('Socket', socket.id, 'closed')\r\n    app.window.close()\r\n  })\r\n\r\n  socket.socket.messageListeners.push((message, socket) => {\r\n    let data = message.data\r\n    if (typeof data !== 'string') data = (new TextDecoder()).decode(message.data)\r\n    console.log('ATTACHED:', socket.id, { data }, { message }, socketTerm)\r\n  })\r\n\r\n  socket.terminal = socketTerm\r\n  return { app, socket }\r\n}\r\n\r\nexport async function connect (url, args) {\r\n  const id = Math.random().toString(36).slice(2)\r\n  const socket = new WebSocket(url)\r\n\r\n  socket.openListeners = []\r\n  socket.closeListeners = [() => connections = connections.filter(c => c === socket)]\r\n  socket.errorListeners = [() => connections = connections.filter(c => c === socket)]\r\n  socket.messageListeners = [(message, socket) => {\r\n    let data = message.data\r\n    if (typeof data !== 'string') data = (new TextDecoder()).decode(message.data)\r\n    console.log(id, { data }, { message }, socket.terminal)\r\n  }]\r\n\r\n  socket.onopen = data => {\r\n    for (const listener of socket.openListeners) {\r\n      if (typeof listener === 'function') listener(data, socket)\r\n    }\r\n  }\r\n\r\n  socket.onclose = data => {\r\n    for (const listener of socket.closeListeners) {\r\n      if (typeof listener === 'function') listener(data, socket)\r\n    }\r\n  }\r\n\r\n  socket.onerror = data => {\r\n    for (const listener of socket.errorListeners) {\r\n      if (typeof listener === 'function') listener(data, socket)\r\n    }\r\n  }\r\n\r\n  socket.onmessage = message => {\r\n    for (const listener of socket.messageListeners) {\r\n      if (typeof listener === 'function') listener(message, socket)\r\n    }\r\n  }\r\n\r\n  connections.push({ id: `${id}#${socket.url}`, socket })\r\n}\r\n\r\nexport async function disconnect (id, args) {\r\n  const socket = connections.find(socket => socket.id.includes(id))\r\n  if (!socket) throw new Error(t('app:socket.socketNotFound', 'Socket not found'))\r\n  socket.socket.close()\r\n}\r\n\r\nexport async function list () {\r\n  return term.log(connections.map(socket => socket.id))\r\n}\r\n\r\nexport async function execute (cmd, args) {\r\n  switch (cmd) {\r\n    case 'attach':\r\n      return await attach(args._?.[1], args)\r\n    case 'connect':\r\n      return await connect(args._?.[1], args)\r\n    case 'disconnect':\r\n      return await disconnect(args._?.[1], args)\r\n    case 'ls':\r\n      return await list(args)\r\n    default:\r\n      return term.log?.(help)\r\n  }\r\n}\r\n\r\nexport async function run (terminal = Terminal, context = '') {\r\n  term = terminal\r\n  if (!WebSocket) throw new Error(colors.danger(t('app:socket.websocketsNotSupported', 'Client does not support WebSockets')))\r\n  const args = arg(spec, { argv: cliParse(context) })\r\n  if (args['--version']) return term.log(version)\r\n  if (args['--help']) return term.log(help)\r\n\r\n  return execute(args._?.[0], args)\r\n}\r\n","exports.quote = function (xs) {\n    return xs.map(function (s) {\n        if (s && typeof s === 'object') {\n            return s.op.replace(/(.)/g, '\\\\$1');\n        }\n        else if (/[\"\\s]/.test(s) && !/'/.test(s)) {\n            return \"'\" + s.replace(/(['\\\\])/g, '\\\\$1') + \"'\";\n        }\n        else if (/[\"'\\s]/.test(s)) {\n            return '\"' + s.replace(/([\"\\\\$`!])/g, '\\\\$1') + '\"';\n        }\n        else {\n            return String(s).replace(/([A-Za-z]:)?([#!\"$&'()*,:;<=>?@\\[\\\\\\]^`{|}])/g, '$1\\\\$2');\n        }\n    }).join(' ');\n};\n\n// '<(' is process substitution operator and\n// can be parsed the same as control operator\nvar CONTROL = '(?:' + [\n    '\\\\|\\\\|', '\\\\&\\\\&', ';;', '\\\\|\\\\&', '\\\\<\\\\(', '>>', '>\\\\&', '[&;()|<>]'\n].join('|') + ')';\nvar META = '|&;()<> \\\\t';\nvar BAREWORD = '(\\\\\\\\[\\'\"' + META + ']|[^\\\\s\\'\"' + META + '])+';\nvar SINGLE_QUOTE = '\"((\\\\\\\\\"|[^\"])*?)\"';\nvar DOUBLE_QUOTE = '\\'((\\\\\\\\\\'|[^\\'])*?)\\'';\n\nvar TOKEN = '';\nfor (var i = 0; i < 4; i++) {\n    TOKEN += (Math.pow(16,8)*Math.random()).toString(16);\n}\n\nexports.parse = function (s, env, opts) {\n    var mapped = parse(s, env, opts);\n    if (typeof env !== 'function') return mapped;\n    return mapped.reduce(function (acc, s) {\n        if (typeof s === 'object') return acc.concat(s);\n        var xs = s.split(RegExp('(' + TOKEN + '.*?' + TOKEN + ')', 'g'));\n        if (xs.length === 1) return acc.concat(xs[0]);\n        return acc.concat(xs.filter(Boolean).map(function (x) {\n            if (RegExp('^' + TOKEN).test(x)) {\n                return JSON.parse(x.split(TOKEN)[1]);\n            }\n            else return x;\n        }));\n    }, []);\n};\n\nfunction parse (s, env, opts) {\n    var chunker = new RegExp([\n        '(' + CONTROL + ')', // control chars\n        '(' + BAREWORD + '|' + SINGLE_QUOTE + '|' + DOUBLE_QUOTE + ')*'\n    ].join('|'), 'g');\n    var match = s.match(chunker).filter(Boolean);\n    var commented = false;\n\n    if (!match) return [];\n    if (!env) env = {};\n    if (!opts) opts = {};\n    return match.map(function (s, j) {\n        if (commented) {\n            return;\n        }\n        if (RegExp('^' + CONTROL + '$').test(s)) {\n            return { op: s };\n        }\n\n        // Hand-written scanner/parser for Bash quoting rules:\n        //\n        //  1. inside single quotes, all characters are printed literally.\n        //  2. inside double quotes, all characters are printed literally\n        //     except variables prefixed by '$' and backslashes followed by\n        //     either a double quote or another backslash.\n        //  3. outside of any quotes, backslashes are treated as escape\n        //     characters and not printed (unless they are themselves escaped)\n        //  4. quote context can switch mid-token if there is no whitespace\n        //     between the two quote contexts (e.g. all'one'\"token\" parses as\n        //     \"allonetoken\")\n        var SQ = \"'\";\n        var DQ = '\"';\n        var DS = '$';\n        var BS = opts.escape || '\\\\';\n        var quote = false;\n        var esc = false;\n        var out = '';\n        var isGlob = false;\n\n        for (var i = 0, len = s.length; i < len; i++) {\n            var c = s.charAt(i);\n            isGlob = isGlob || (!quote && (c === '*' || c === '?'));\n            if (esc) {\n                out += c;\n                esc = false;\n            }\n            else if (quote) {\n                if (c === quote) {\n                    quote = false;\n                }\n                else if (quote == SQ) {\n                    out += c;\n                }\n                else { // Double quote\n                    if (c === BS) {\n                        i += 1;\n                        c = s.charAt(i);\n                        if (c === DQ || c === BS || c === DS) {\n                            out += c;\n                        } else {\n                            out += BS + c;\n                        }\n                    }\n                    else if (c === DS) {\n                        out += parseEnvVar();\n                    }\n                    else {\n                        out += c;\n                    }\n                }\n            }\n            else if (c === DQ || c === SQ) {\n                quote = c;\n            }\n            else if (RegExp('^' + CONTROL + '$').test(c)) {\n                return { op: s };\n            }\n            else if (RegExp('^#$').test(c)) {\n                commented = true;\n                if (out.length){\n                    return [out, { comment: s.slice(i+1) + match.slice(j+1).join(' ') }];\n                }\n                return [{ comment: s.slice(i+1) + match.slice(j+1).join(' ') }];\n            }\n            else if (c === BS) {\n                esc = true;\n            }\n            else if (c === DS) {\n                out += parseEnvVar();\n            }\n            else out += c;\n        }\n\n        if (isGlob) return {op: 'glob', pattern: out};\n\n        return out;\n\n        function parseEnvVar() {\n            i += 1;\n            var varend, varname;\n            //debugger\n            if (s.charAt(i) === '{') {\n                i += 1;\n                if (s.charAt(i) === '}') {\n                    throw new Error(\"Bad substitution: \" + s.substr(i - 2, 3));\n                }\n                varend = s.indexOf('}', i);\n                if (varend < 0) {\n                    throw new Error(\"Bad substitution: \" + s.substr(i));\n                }\n                varname = s.substr(i, varend - i);\n                i = varend;\n            }\n            else if (/[*@#?$!_\\-]/.test(s.charAt(i))) {\n                varname = s.charAt(i);\n                i += 1;\n            }\n            else {\n                varend = s.substr(i).match(/[^\\w\\d_]/);\n                if (!varend) {\n                    varname = s.substr(i);\n                    i = s.length;\n                } else {\n                    varname = s.substr(i, varend.index);\n                    i += varend.index - 1;\n                }\n            }\n            return getVar(null, '', varname);\n        }\n    })\n    // finalize parsed aruments\n    .reduce(function(prev, arg){\n        if (arg === undefined){\n            return prev;\n        }\n        return prev.concat(arg);\n    },[]);\n\n    function getVar (_, pre, key) {\n        var r = typeof env === 'function' ? env(key) : env[key];\n        if (r === undefined && key != '')\n            r = '';\n        else if (r === undefined)\n            r = '$';\n\n        if (typeof r === 'object') {\n            return pre + TOKEN + JSON.stringify(r) + TOKEN;\n        }\n        else return pre + r;\n    }\n}\n"],"names":["flagSymbol","Symbol","ArgError","Error","constructor","msg","code","super","this","name","Object","setPrototypeOf","prototype","arg","opts","argv","process","slice","permissive","stopAtPositional","result","_","aliases","handlers","key","keys","length","type","isFlag","Array","isArray","fn","value","prev","push","Boolean","i","len","wholeArg","concat","separatedArguments","split","map","a","j","originalArgName","argStr","undefined","argName","match","Number","BigInt","flag","COUNT","v","existingCount","module","exports","t","Kernel","i18n","connections","version","description","help","spec","term","Terminal","attach","id","args","socket","find","includes","mount","document","createElement","style","height","app","kernel","windows","create","title","max","x","y","onclose","clearInterval","fitInterval","window","body","overflowY","socketTerm","Web3osTerminal","fontSize","open","querySelector","position","setInterval","fit","focus","closeListeners","console","log","close","messageListeners","message","data","TextDecoder","decode","terminal","connect","url","Math","random","toString","WebSocket","openListeners","filter","c","errorListeners","onopen","listener","onerror","onmessage","disconnect","list","execute","cmd","run","context","colors","cliParse","CONTROL","join","TOKEN","pow","s","env","mapped","chunker","RegExp","commented","test","op","BS","escape","quote","esc","out","isGlob","charAt","parseEnvVar","comment","pattern","varend","varname","pre","r","substr","indexOf","index","JSON","stringify","reduce","parse","acc","xs"],"sourceRoot":""}