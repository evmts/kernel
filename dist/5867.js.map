{"version":3,"file":"5867.js","mappings":";mXACA,yqQACe,cAAf,iEAAe,sGAAkBA,EAAlB,EAAkBA,mBAC3BC,SAASC,eAAe,eADf,0CACsC,GADtC,QAEPC,EAASF,SAASG,cAAc,WAC/BC,GAAK,cACZF,EAAOG,MAAQC,WAAWC,WAC1BL,EAAOM,OAASF,WAAWG,YAC3BP,EAAOQ,MAAMC,SAAW,WACxBT,EAAOQ,MAAME,IAAM,EACnBV,EAAOQ,MAAMG,KAAO,EACpBX,EAAOQ,MAAMI,OAAS,IAEtBd,SAASe,KAAKC,YAAYd,GACpBe,EAAMf,EAAOgB,WAAW,MAGxBC,EAAUC,KAAKC,MAAMnB,EAAOG,MADjB,IAEXiB,EAAQC,MAAMJ,GAASK,KAAK,GAC5BC,EAAQ,mGAAmGC,MAAM,IACvHT,EAAIU,KAAOV,EAAIU,KAAKC,QAAQ,QAAjB,UAJM,GAIN,OAeLC,EAAWC,aAbC,WAChBb,EAAIc,UAAY,qBAChBd,EAAIe,SAAS,EAAG,EAAG9B,EAAOG,MAAOH,EAAOM,QAFlB,UAIDc,EAAMW,WAJL,IAItB,IAAK,EAAL,qBAAsC,oBAA1BC,EAA0B,KAAvBC,EAAuB,KACpClB,EAAIc,UAAY,OAChB,IAAMK,EAAOX,EAAML,KAAKC,MAAMD,KAAKiB,SAAWZ,EAAMa,SACpDrB,EAAIsB,SAASH,EAbA,GAaMF,EAbN,GAaoBC,GACjCb,EAAMY,KAdO,GAeTC,EAAejC,EAAOM,QAAUY,KAAKiB,SAAW,MAAMf,EAAMY,GAAK,IATjD,iCAagB,IAClCM,EAAO,WACXC,cAAcZ,GACd3B,EAAOwC,UAGTxC,EAAOyC,iBAAiB,QAASH,GACjCzC,EAAkByC,GAxCL","sources":["webpack://@web3os-core/kernel/./src/modules/screensaver/matrix/index.js"],"sourcesContent":["/* Inspired by https://codepen.io/yaclive/pen/EayLYO */\r\n\r\nexport default async function ({ listenForKeypress }) {\r\n  if (document.getElementById('screensaver')) return false\r\n  const canvas = document.createElement('canvas')\r\n  canvas.id = 'screensaver'\r\n  canvas.width = globalThis.innerWidth\r\n  canvas.height = globalThis.innerHeight\r\n  canvas.style.position = 'absolute'\r\n  canvas.style.top = 0\r\n  canvas.style.left = 0\r\n  canvas.style.zIndex = 1000000\r\n\r\n  document.body.appendChild(canvas)\r\n  const ctx = canvas.getContext('2d')\r\n\r\n  const fontSize = 14\r\n  const columns = Math.floor(canvas.width / fontSize)\r\n  const drops = Array(columns).fill(1)\r\n  const chars = '01~!#$%^&*()_+=-[]{}\\\\|;:\",./<>?ﾊﾐﾋｰｳｼﾅﾓﾆｻﾜﾂｵﾘｱﾎﾃﾏｹﾒｴｶｷﾑﾕﾗｾﾈｽﾀﾇﾍﾊﾐﾋｰｳｼﾅﾓﾆｻﾜﾂｵﾘｱﾎﾃﾏｹﾒｴｶｷﾑﾕﾗｾﾈｽﾀﾇﾍ'.split('')\r\n  ctx.font = ctx.font.replace(/\\d+px/, `${fontSize}px`);\r\n\r\n  const animatrix = () => {\r\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.1)'\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n\r\n    for (const [x, y] of drops.entries()) {\r\n      ctx.fillStyle = '#0f0'\r\n      const char = chars[Math.floor(Math.random() * chars.length)]\r\n      ctx.fillText(char, x * fontSize, y * fontSize)\r\n      drops[x]++\r\n      if (y * fontSize > canvas.height && Math.random() > 0.95) drops[x] = 0\r\n    }\r\n  }\r\n\r\n  const interval = setInterval(animatrix, 33)\r\n  const exit = () => {\r\n    clearInterval(interval)\r\n    canvas.remove()\r\n  }\r\n\r\n  canvas.addEventListener('click', exit)\r\n  listenForKeypress(exit)\r\n}\r\n"],"names":["listenForKeypress","document","getElementById","canvas","createElement","id","width","globalThis","innerWidth","height","innerHeight","style","position","top","left","zIndex","body","appendChild","ctx","getContext","columns","Math","floor","drops","Array","fill","chars","split","font","replace","interval","setInterval","fillStyle","fillRect","entries","x","y","char","random","length","fillText","exit","clearInterval","remove","addEventListener"],"sourceRoot":""}