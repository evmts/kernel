{"version":3,"file":"9005.js","mappings":";kgBACA,8hGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAGO,IAKIC,EALEC,EAAO,WACPC,EAAU,QACVC,EAAc,kBACdC,EAAO,kBAIb,SAAeC,EAAtB,sEAAO,WAAoBC,EAAMC,GAA1B,gFACGC,EAAWF,EAAXE,OACHD,GAAyB,KAAbA,EAFZ,sBAEmC,IAAIE,MAAMC,IAAAA,OAAc,qBAF3D,UAGLH,EAAWC,EAAOG,MAAMC,KAAKC,QAAQP,EAAKQ,IAAKP,GAC1CC,EAAOO,GAAGC,WAAWT,GAJrB,sBAIsC,IAAIE,MAAMC,IAAAA,OAAc,qBAJ9D,OAMLV,EAAW,IAAIiB,IAAJ,CAAe,CAAEC,MAAM,EAAMC,SAAS,IAE3CC,EAAOZ,EAAOO,GAAGM,aAAad,EAAU,SAE9CW,GADIA,EAAOlB,EAASsB,OAAOF,EAAKG,QAAQ,mBAAoB,MAChDA,QAAQ,OAAQ,sBAEtBC,EAAUC,SAASC,cAAc,QAC/BC,MAAMC,QAAU,OACxBJ,EAAQK,UAAYX,EACpBM,EAAQM,iBAAiB,KAAKC,SAAQ,SAAAC,GAAOA,EAAEL,MAAMM,MAAQ,aAE7DzB,EAAO0B,QAAQC,OAAO,CACpBC,MAAO7B,EACP8B,MAAOb,EACPc,MAAO,MACPC,OAAQ,QArBL","sources":["webpack://@web3os-core/kernel/./src/modules/markdown/index.js"],"sourcesContent":["import path from 'path'\r\nimport colors from 'ansi-colors'\r\nimport MarkdownIt from 'markdown-it'\r\n\r\nexport const name = 'markdown'\r\nexport const version = '0.1.0'\r\nexport const description = 'Markdown Viewer'\r\nexport const help = 'View a .md file'\r\n\r\nexport let markdown\r\n\r\nexport async function run (term, filename) {\r\n  const { kernel } = term\r\n  if (!filename || filename === '') throw new Error(colors.danger('Invalid filename'))\r\n  filename = kernel.utils.path.resolve(term.cwd, filename)\r\n  if (!kernel.fs.existsSync(filename)) throw new Error(colors.danger('Invalid filename'))\r\n\r\n  markdown = new MarkdownIt({ html: true, linkify: true })\r\n\r\n  const data = kernel.fs.readFileSync(filename, 'utf-8')\r\n  let html = markdown.render(data.replace(/<!--[\\s\\S]*?-->/g, ''))\r\n  html = html.replace(/\\<a/g, '<a target=\"blank\"')\r\n\r\n  const wrapper = document.createElement('div')\r\n  wrapper.style.padding = '1rem'\r\n  wrapper.innerHTML = html\r\n  wrapper.querySelectorAll('a').forEach(a => { a.style.color = '#4287f5' })\r\n\r\n  kernel.windows.create({\r\n    title: filename,\r\n    mount: wrapper,\r\n    width: '70%',\r\n    height: '70%'\r\n  })\r\n}\r\n"],"names":["i","markdown","name","version","description","help","run","term","filename","kernel","Error","colors","utils","path","resolve","cwd","fs","existsSync","MarkdownIt","html","linkify","data","readFileSync","render","replace","wrapper","document","createElement","style","padding","innerHTML","querySelectorAll","forEach","a","color","windows","create","title","mount","width","height"],"sourceRoot":""}